<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Centos7下安装python以便使用pip工具</title>
    <url>/2017/12/26/Centos7%E4%B8%8B%E5%AE%89%E8%A3%85python%E4%BB%A5%E4%BE%BF%E4%BD%BF%E7%94%A8pip%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>python的pip工具非常使用但是需要手动安装</p>
<ol>
<li><p>首先安装epel扩展源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">　　yum -y install epel-release</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新完成之后，就可安装pip：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">　　yum -y install python-pip</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装完成之后清除cache：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">　　yum clean all</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新pip工具</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos安装docker compace</title>
    <url>/2017/12/26/Centos%E5%AE%89%E8%A3%85docker%20compace/</url>
    <content><![CDATA[<blockquote>
<p>可以查看极客学院的相关资料<br><span class="exturl" data-url="aHR0cDovL3dpa2kuamlrZXh1ZXl1YW4uY29tL3Byb2plY3QvZG9ja2VyLXRlY2hub2xvZ3ktYW5kLWNvbWJhdC9pbnN0YWxsLmh0bWw=" title="http://wiki.jikexueyuan.com/project/docker-technology-and-combat/install.html">http://wiki.jikexueyuan.com/project/docker-technology-and-combat/install.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<ol>
<li>更新pip工具,如果没有这个工具请先安装<code>python</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install –upgrade pip</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>安装docker-compose</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -U docker-compose</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>查看docker-compose的用法</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose -h</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Cmder使用指南</title>
    <url>/2018/01/04/Cmder%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>cmder是在windows中代替cmd的一种方案</p>
<blockquote>
<p>官网:(cmder)[<span class="exturl" data-url="aHR0cDovL2NtZGVyLm5ldC9d" title="http://cmder.net/]">http://cmder.net/]<i class="fa fa-external-link"></i></span> 一般下载<code>full</code></p>
</blockquote>
<h2 id="增加环境变量"><a href="#增加环境变量" class="headerlink" title="增加环境变量"></a>增加环境变量</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">CMDER_HOME    D:\cmder</span><br><span class="line"><span class="built_in">PATH</span>          <span class="variable">%CMDER_HOME%</span>   </span><br></pre></td></tr></table></figure>


<h2 id="注册到右键菜单"><a href="#注册到右键菜单" class="headerlink" title="注册到右键菜单"></a>注册到右键菜单</h2><p>使用管理员权限运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Cmder.exe /REGISTER ALL</span><br></pre></td></tr></table></figure>

<h2 id="配置UTF-8取消中文乱码"><a href="#配置UTF-8取消中文乱码" class="headerlink" title="配置UTF-8取消中文乱码"></a>配置UTF-8取消中文乱码</h2><p>快捷键<code>win + alt + p</code><br>Startup-&gt;Environment<br>在超大文本框里输入配置</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span>=<span class="variable">%ConEmuBaseDir%</span>\Scripts;<span class="variable">%PATH%</span></span><br><span class="line"><span class="built_in">set</span> LANG=zh_CN.UTF-<span class="number">8</span></span><br><span class="line"><span class="built_in">set</span> LC_ALL=zh_CN.utf8</span><br></pre></td></tr></table></figure>

<h2 id="添加常用命令"><a href="#添加常用命令" class="headerlink" title="添加常用命令"></a>添加常用命令</h2><p>在<code>%CMDER_HOME%\config\user-aliases.cmd</code>最后几行加入</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">l=ls --show-control-chars </span><br><span class="line">la=ls -aF --show-control-chars </span><br><span class="line">ll=ls -alF --show-control-chars</span><br><span class="line">ls=ls --show-control-chars -F</span><br><span class="line"><span class="built_in">cd</span>=<span class="built_in">cd</span> /d $*</span><br><span class="line">st=&quot;D:\Sublime Text <span class="number">3</span>\sublime_text.exe&quot; <span class="built_in">rem</span> 输入st打开Sublime Text <span class="number">3</span>编辑器</span><br></pre></td></tr></table></figure>

<h2 id="修改命令提示符号"><a href="#修改命令提示符号" class="headerlink" title="修改命令提示符号"></a>修改命令提示符号</h2><p>修改文件 <code> %CMDER_HOME%\vendor\clink.lua</code></p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> env == nil then</span><br><span class="line">    lambda = &quot;λ&quot;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    lambda = &quot;(&quot;..env..&quot;) λ&quot;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>改成</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> env == nil then</span><br><span class="line">    lambda = &quot;$&quot;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    lambda = &quot;(&quot;..env..&quot;) $&quot;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>


<h2 id="提示符后第一个字母"><a href="#提示符后第一个字母" class="headerlink" title="提示符后第一个字母"></a>提示符后第一个字母</h2><p>如果输入的命令cxxxxx超过4个字符，则用向上箭头往前翻命令的时候，会发现提示符后面多了一个字母c。虽然不影响命令的执行，但看着不顺眼，而且如果这个时候再用左右箭头移动光标，尝试修改命令参数的话，会发现修改的位置完全不对。<br>这是因为cmder的命令行提示符是lambda，这是特殊字符，直接显示的时候没有问题，但往前往后回溯命令的时候就会显示不正确。</p>
<p>解决的办法也简单，就是把命令行提示符换掉：在<code>%CMDER_HOME%\vendor\clink.lua</code> 中，找到<code>set_prompt_filter</code> 函数，加上一行：</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">clink.prompt.value = string.gsub(clink.prompt.value, lambda, &quot;&gt;&gt;&quot;)</span><br></pre></td></tr></table></figure>



<h2 id="Chocolatey软件包管理系统"><a href="#Chocolatey软件包管理系统" class="headerlink" title="Chocolatey软件包管理系统"></a>Chocolatey软件包管理系统</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@powershell -NoProfile -ExecutionPolicy unrestricted -Command &quot;iex ((new-object <span class="built_in">net</span>.webclient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))&quot; &amp;&amp; <span class="built_in">SET</span> <span class="built_in">PATH</span>=<span class="variable">%PATH%</span>;<span class="variable">%ALLUSERSPROFILE%</span>\chocolatey\bin</span><br></pre></td></tr></table></figure>

<p>安装软件命令 <code>choco install softwareName</code>,</p>
<p>短写是 <code>cinst softwareName</code><br>查询安装包是否存在 <code>clist softwareName</code></p>
<p>可安装包列表</p>
<p>window下常用的开发环境应用</p>
<p>推荐安装</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">cinst Wget</span><br><span class="line">cinst nano</span><br><span class="line">cinst curl</span><br></pre></td></tr></table></figure>

<p>安装示例</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">choco install autohotkey.portable    #安装 AutoHotkey (Portable)</span><br><span class="line">choco install nodejs.install  #安装 node</span><br><span class="line">choco install git.install     #安装 git</span><br><span class="line">choco install python          #安装 python</span><br><span class="line">choco install ruby            #安装 ruby</span><br><span class="line">choco install jdk8            #安装 JDK8</span><br><span class="line">choco install googlechrome    #安装 Chrome</span><br><span class="line">choco install google-chrome-x64 #Google Chrome (<span class="number">64</span>-bit only)</span><br><span class="line">choco install firefox         #安装 firefox</span><br><span class="line">choco install notepadplusplus.install #安装 notepad++</span><br><span class="line">choco install Atom                    #安装 Atom</span><br><span class="line">choco install SublimeText3            #安装 SublimeText3</span><br></pre></td></tr></table></figure>


<h2 id="添加快捷键"><a href="#添加快捷键" class="headerlink" title="添加快捷键"></a>添加快捷键</h2><p>右键 cmder.exe &gt; 创建快捷方式 &gt; 右键快捷方式 &gt; 点击快捷键项 &gt; 按 Ctrl + Alt + T. 以后按 Ctrl + Alt + T 的时候就会运行 Cmder 了.</p>
<h2 id="隐藏标题"><a href="#隐藏标题" class="headerlink" title="隐藏标题"></a>隐藏标题</h2><p>在之前的解压目录下增加文件<code>Cmder.bat</code>,将原来的<code>Cmder.exe</code>修改为其他名称,使其不生效（删除亦可）。下面配置文件可以修改图表以及标题。</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">SET</span> CMDER_ROOT=%~dp0</span><br><span class="line"></span><br><span class="line">:: Remove Trailing &#x27;\&#x27;</span><br><span class="line">@<span class="keyword">if</span> &quot;<span class="variable">%CMDER_ROOT:~-1%</span>&quot; == &quot;\&quot; <span class="built_in">SET</span> CMDER_ROOT=<span class="variable">%CMDER_ROOT:~0,-1%</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exist</span> &quot;%~<span class="number">1</span>&quot; (</span><br><span class="line">    <span class="built_in">start</span> %~dp0/vendor/conemu-maximus5/ConEmu.exe /Icon &quot;<span class="variable">%CMDER_ROOT%</span>\icons\cmder.ico&quot; /<span class="built_in">Title</span> <span class="built_in">cmd</span> /LoadCfgFile &quot;%~<span class="number">1</span>&quot;</span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line">    <span class="built_in">start</span> %~dp0/vendor/conemu-maximus5/ConEmu.exe /Icon &quot;<span class="variable">%CMDER_ROOT%</span>\icons\cmder.ico&quot; /<span class="built_in">Title</span> <span class="built_in">cmd</span> /LoadCfgFile &quot;<span class="variable">%CMDER_ROOT%</span>\config\ConEmu.xml&quot;</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>原理<br>通过访问官网找到其github页面，发现原来项目中就是使用以上的bat文件进行启动的。</p>
</blockquote>
<h2 id="包管理工具scoop"><a href="#包管理工具scoop" class="headerlink" title="包管理工具scoop"></a>包管理工具scoop</h2><p>保证电脑有<code>PowerShell 3</code><br>使用了<code>PowerShell</code>在你当前Windows的账户下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set-executionpolicy remotesigned -s cu</span><br></pre></td></tr></table></figure>
<p>在PowerShell下输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iex (new-object net.webclient).downloadstring(&#39;https:&#x2F;&#x2F;get.scoop.sh&#39;)</span><br></pre></td></tr></table></figure>
<p>等下在下完就可以使用<code>scoop help</code>来查看命令行操作</p>
<h2 id="常用小技巧"><a href="#常用小技巧" class="headerlink" title="常用小技巧"></a>常用小技巧</h2><blockquote>
<p>可在视窗内搜寻画面上出现过的任意关键字</p>
</blockquote>
<table>
<thead>
<tr>
<th>按键</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td>Tab</td>
<td align="left">自动路径补全</td>
</tr>
<tr>
<td>Ctrl+T</td>
<td align="left">建立新页签</td>
</tr>
<tr>
<td>Ctrl+W</td>
<td align="left">关闭页签</td>
</tr>
<tr>
<td>Ctrl+Tab</td>
<td align="left">切换页签</td>
</tr>
<tr>
<td>Alt+F4</td>
<td align="left">关闭所有页签</td>
</tr>
<tr>
<td>Alt+Shift+1</td>
<td align="left">开启cmder.exe (系统管理员权限)</td>
</tr>
<tr>
<td>Alt+Shift+2</td>
<td align="left">开启cmder.exe</td>
</tr>
<tr>
<td>Alt+Shift+3</td>
<td align="left">开启powershell.exe</td>
</tr>
<tr>
<td>Alt+Shift+3</td>
<td align="left">开启powershell.exe (系统管理员权限)</td>
</tr>
<tr>
<td>Ctrl+1</td>
<td align="left">快速切换到第1个页签</td>
</tr>
<tr>
<td>Ctrl+n</td>
<td align="left">快速切换到第n个页签 (n值无上限)</td>
</tr>
<tr>
<td>Alt + enter</td>
<td align="left">切换到全屏状态</td>
</tr>
<tr>
<td>Ctr+r</td>
<td align="left">历史命令搜索</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>装机</tag>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>E2E版本安装手册</title>
    <url>/2020/11/23/E2E%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h1 id="安装准备速查"><a href="#安装准备速查" class="headerlink" title="安装准备速查"></a>安装准备速查</h1><table>
<thead>
<tr>
<th>软件</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>redHat7.7光盘</td>
<td>光盘或者镜像文件，或者centos7</td>
</tr>
<tr>
<td>所有安装包</td>
<td>详情见章节：<code>手册安装版本速查</code></td>
</tr>
<tr>
<td>服务器一台</td>
<td>web端仅需1台服务器</td>
</tr>
<tr>
<td>堡垒机（笔记本）</td>
<td>用于连接远程电脑，windows环境</td>
</tr>
<tr>
<td>网络环境良好</td>
<td>是否可以ping通大数据机器</td>
</tr>
<tr>
<td>手册</td>
<td>本手册</td>
</tr>
</tbody></table>
<h1 id="端口速查"><a href="#端口速查" class="headerlink" title="端口速查"></a>端口速查</h1><p>TODO</p>
<table>
<thead>
<tr>
<th>软件</th>
<th>端口</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td><code>geoserver</code></td>
<td>8080</td>
<td></td>
</tr>
<tr>
<td><code>mysql</code></td>
<td>3306</td>
<td></td>
</tr>
<tr>
<td><code>nginx</code></td>
<td>8089</td>
<td></td>
</tr>
<tr>
<td><code>redis</code></td>
<td>6379</td>
<td></td>
</tr>
<tr>
<td><code>minio</code></td>
<td>9001</td>
<td></td>
</tr>
<tr>
<td><code>rabbitmq</code></td>
<td>15672,5672</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="版本获取方式"><a href="#版本获取方式" class="headerlink" title="版本获取方式"></a>版本获取方式</h1><p>TODO</p>
<h1 id="web端安装"><a href="#web端安装" class="headerlink" title="web端安装"></a>web端安装</h1><h2 id="放置版本包"><a href="#放置版本包" class="headerlink" title="放置版本包"></a>放置版本包</h2><p>将 一下两个文件（文件夹）放到<code>/opt/package</code> 目录下</p>
<h2 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h2><h3 id="iptable"><a href="#iptable" class="headerlink" title="iptable"></a>iptable</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure>

<h3 id="firewalld-service"><a href="#firewalld-service" class="headerlink" title="firewalld.service"></a>firewalld.service</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>

<h3 id="selinux"><a href="#selinux" class="headerlink" title="selinux"></a>selinux</h3><p>修改文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of three values:</span></span><br><span class="line"><span class="comment">#     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment">#     minimum - Modification of targeted policy. Only selected processes are protected. </span></span><br><span class="line"><span class="comment">#     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>

<p>执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>

<h3 id="hostname"><a href="#hostname" class="headerlink" title="hostname"></a>hostname</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname e2e-web</span><br></pre></td></tr></table></figure>

<h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><ul>
<li>使用大数据已配置好的yum</li>
</ul>
<p>修改本地repo文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repo.d/base.repo</span><br><span class="line"></span><br><span class="line">[baserepo]</span><br><span class="line">name=Cloudera Manager 5.13</span><br><span class="line">baseurl=http://172.30.100.183/cdrom</span><br><span class="line">gpgcheck=<span class="literal">false</span></span><br><span class="line"><span class="built_in">enable</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里的IP地址是大数据服务器所配置的YUM源，如果网络不通请优先解决网络问题<br>如果没有配置则则使用本地YUM方式</p>
</blockquote>
<p>刷新yum</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum clean all;yum makecache</span><br></pre></td></tr></table></figure>
<ul>
<li>使用本地挂载yum</li>
</ul>
<p>挂载iso文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /mnt/iso</span><br><span class="line">mkdir -p /opt/iso/centos7</span><br><span class="line">mount /opt/app/CentOS-7-x86_64-DVD-2003.iso /mnt/iso</span><br><span class="line">cp -r /mnt/iso/* /opt/iso/centos7</span><br></pre></td></tr></table></figure>


<p>修改本地<code>repo文件</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/base.repo</span><br><span class="line"></span><br><span class="line">[baserepo]</span><br><span class="line">name=base_repo</span><br><span class="line">baseurl=file:///opt/iso/centos7</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>
<p>刷新<code>yum</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum clean all;yum makecache</span><br></pre></td></tr></table></figure>
<h2 id="基础软件"><a href="#基础软件" class="headerlink" title="基础软件"></a>基础软件</h2><h3 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h3><p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app</span><br><span class="line"><span class="built_in">cd</span> /opt/app</span><br><span class="line">tar -zxvf /opt/package/web/jdk-8u202-linux-x64.tar.gz -C /opt/app</span><br><span class="line">ln -s jdk1.8.0_202 jdk  </span><br></pre></td></tr></table></figure>

<p>修改 profile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/jdk</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>


<p>刷新配置并验证</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>



<h3 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h3><p>查看 <code>mariadb</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mariadb</span><br></pre></td></tr></table></figure>

<p>如果已安装则卸载它</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -e mariadb-libs-5.5.56-2.el7.x86_64 --nodeps</span><br></pre></td></tr></table></figure>

<p>再次确认<code>mariadb</code>已经完全删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mariadb</span><br></pre></td></tr></table></figure>

<p>查看 <code>mysql</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure>

<p>如果已安装则卸载它</p>
<p>再次确认<code>mysql</code>已经完全删除</p>
<p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/package/mysql8</span><br><span class="line">tar -xvf /opt/package/mysql-8.0.21-1.el6.x86_64.rpm-bundle.tar -C /opt/package/mysql8</span><br><span class="line">yum install -y /opt/package/mysql8/*</span><br></pre></td></tr></table></figure>
<p>修改数据目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /home/data/mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="line"><span class="comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span></span><br><span class="line"><span class="comment"># innodb_buffer_pool_size = 128M</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Remove the leading &quot;# &quot; to disable binary logging</span></span><br><span class="line"><span class="comment"># Binary logging captures changes between backups and is enabled by</span></span><br><span class="line"><span class="comment"># default. It&#x27;s default setting is log_bin=binlog</span></span><br><span class="line"><span class="comment"># disable_log_bin</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="line"><span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></span><br><span class="line"><span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="comment"># join_buffer_size = 128M</span></span><br><span class="line"><span class="comment"># sort_buffer_size = 2M</span></span><br><span class="line"><span class="comment"># read_rnd_buffer_size = 2M</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Remove leading # to revert to previous value for default_authentication_plugin,</span></span><br><span class="line"><span class="comment"># this will increase compatibility with older clients. For background, see:</span></span><br><span class="line"><span class="comment"># https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin</span></span><br><span class="line"><span class="comment"># default-authentication-plugin=mysql_native_password</span></span><br><span class="line"></span><br><span class="line">datadir=/home/data/mysql</span><br><span class="line">socket=/home/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">log-error=/var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure>

<p>修改<code>mysql</code>目录的所属用户和组</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chown -R mysql:mysql /home/data/mysql/</span><br></pre></td></tr></table></figure>

<p>启动mysql</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysql</span><br></pre></td></tr></table></figure>

<p>建立软连接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ln -s /home/data/mysql/mysql.sock /var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure>

<p>查看<code>root</code>临时密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&quot;A temporary password&quot;</span> /var/<span class="built_in">log</span>/mysqld.log</span><br></pre></td></tr></table></figure>

<p>修改<code>root</code>密码,并配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> global validate_password.length=4;</span><br><span class="line"><span class="built_in">set</span> global validate_password.policy=0;</span><br><span class="line"><span class="built_in">set</span> global validate_password.check_user_name=off;</span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">CREATE USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">GRANT ALL ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>



<h3 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h3><p>安装基础包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/package/web/postgresql-12.tar.gz -C /opt/package/web/</span><br><span class="line">yum install -y wget net-tools epel-release</span><br><span class="line">yum install -y /opt/package/web/postgresql-12/*</span><br></pre></td></tr></table></figure>

<p>设置环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后一行插入</span></span><br><span class="line"><span class="built_in">export</span> PG_HOME=<span class="string">&quot;/usr/pgsql-12&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PG_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<p>刷新环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<p>安装插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/package/web/pg_pathman-1.5.11.tar.gz -C /opt/package/web/</span><br><span class="line"><span class="built_in">cd</span> /opt/package/web/pg_pathman-1.5.11</span><br><span class="line">make USE_PGXS=1</span><br><span class="line">make USE_PGXS=1 install</span><br></pre></td></tr></table></figure>

<p>修改数据目录，这里需要将数据放到空间大的目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/pgsql/12.3/</span><br><span class="line">vim /usr/lib/systemd/system/postgresql-12.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">Environment=PGDATA=/data/pgsql/12.3/data/</span><br></pre></td></tr></table></figure>

<p>初始化数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/pgsql-12/bin/postgresql-12-setup initdb</span><br></pre></td></tr></table></figure>

<p>修改配置文件<code>postgresql.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /data/pgsql/12.3/data/postgresql.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">listen_addresses = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">max_connections = 1000</span><br><span class="line">shared_preload_libraries = <span class="string">&#x27;pg_pathman,pg_stat_statements&#x27;</span></span><br></pre></td></tr></table></figure>

<p>修改配置文件<code>pg_hba.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /data/pgsql/12.3/data/pg_hba.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">host    all             all             0.0.0.0/0               md5</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> postgresql-12.service</span><br><span class="line">systemctl start postgresql-12.service</span><br><span class="line">systemctl status postgresql-12.service</span><br></pre></td></tr></table></figure>

<p>修改密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - postgres</span><br><span class="line">psql</span><br><span class="line">ALTER USER postgres WITH PASSWORD <span class="string">&#x27;postgres&#x27;</span>;</span><br><span class="line">\q</span><br><span class="line">su - root</span><br><span class="line">systemctl restart postgresql-12.service</span><br></pre></td></tr></table></figure>


<p>链接数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i -u postgres</span><br><span class="line">psql</span><br></pre></td></tr></table></figure>

<p>创建<code>postgis</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> postgis owner postgres;</span><br><span class="line">\c postgis;</span><br><span class="line"><span class="keyword">create</span> extension postgis;</span><br><span class="line"><span class="keyword">create</span> extension pg_pathman;</span><br><span class="line"><span class="keyword">select</span> postgis_full_version();</span><br></pre></td></tr></table></figure>

<h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>安装基础包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础软件</span></span><br><span class="line">yum install -y gcc-c++</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br><span class="line"></span><br><span class="line">tar -zxvf /opt/package/web/nginx-1.17.10.tar.gz  -C /opt/app</span><br></pre></td></tr></table></figure>

<p>配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_ssl_module</span><br></pre></td></tr></table></figure>

<p>编译安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p>查找安装路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx: /usr/local/nginx</span></span><br></pre></td></tr></table></figure>

<p>启动<code>nginx</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/nginx/nginx </span><br></pre></td></tr></table></figure>
<h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><p>解压</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础软件</span></span><br><span class="line">yum install -y gcc</span><br><span class="line"></span><br><span class="line">tar -zxvf /opt/package/web/redis-5.0.7.tar.gz  -C /opt/app</span><br><span class="line">ln -s redis-5.0.7 redis</span><br></pre></td></tr></table></figure>

<p>编译安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p>修改配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#daemonize no 改为 daemonize yes</span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#注释 bind 127.0.0.1</span></span><br><span class="line"><span class="comment">#bind 127.0.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># protected-mode yes 改为 protected-mode no</span></span><br><span class="line">protected-mode yes</span><br></pre></td></tr></table></figure>

<p>启动redis</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/app/redis/src/redis-server /opt/app/redis/redis.conf</span><br></pre></td></tr></table></figure>




<h3 id="Minio"><a href="#Minio" class="headerlink" title="Minio"></a>Minio</h3><p>解啊</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/package/web/minio.tar.tgz -C /opt/app </span><br><span class="line">chmod +x /opt/app/minio/*</span><br></pre></td></tr></table></figure>

<p>创建数据存放目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /home/data/minio</span><br></pre></td></tr></table></figure>

<p>设置数据存放目录，并设置端口号</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /opt/app/minio/minio.sh</span><br><span class="line"></span><br><span class="line">nohup /opt/app/minio/minio  server --address  172.30.100.186:9001 /home/data/minio &gt; /var/<span class="built_in">log</span>/minio.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>



<h3 id="Erlang"><a href="#Erlang" class="headerlink" title="Erlang"></a>Erlang</h3><p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install gcc glibc-devel make ncurses-devel openssl-devel xmlto perl wget gtk2-devel binutils-devel</span><br><span class="line">tar -zxvf /opt/package/otp_src_23.1.tar.gz -C /opt/app</span><br><span class="line"><span class="built_in">cd</span> /opt/app/otp_src_23.1</span><br><span class="line">mkdir /opt/app/erlang</span><br><span class="line">./configure --prefix=/opt/app/erlang</span><br></pre></td></tr></table></figure>
<p>如果显示这个，假装没看见<br><img src="/2020/11/23/E2E%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20201103213022345.png" alt="image-20201103213022345"></p>
<p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>修改环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ERLANG_HOME=/opt/app/erlang</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ERLANG_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<p>刷新配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<p>验证<code>erl</code>是否成功</p>
<h3 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h3><p>安装<code>xz</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y xz</span><br></pre></td></tr></table></figure>
<p>解压</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xz -d rabbitmq-server-generic-unix-3.8.3.tar.xz</span><br><span class="line">tar -xvf rabbitmq-server-generic-unix-3.8.3.tar -C /opt/app/</span><br><span class="line">ln -s /opt/app/rabbitmq_server-3.8.3 /opt/app/rabbitmq</span><br></pre></td></tr></table></figure>

<p>修改环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> RABBITMQ_HOME=/opt/app/rabbitmq</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$RABBITMQ_HOME</span>/sbin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<p>刷新环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<p>创建配置目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /etc/rabbitmq</span><br></pre></td></tr></table></figure>

<p>安装web插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure>

<p>修改<code>rabbit.app</code>,删除<code>loopback_users</code>中的<code>&lt;&lt;&quot;guest&quot;&gt;&gt;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /opt/app/rabbitmq/ebin/rabbit.app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改39行</span></span><br><span class="line">&#123;loopback_users, []&#125;,</span><br></pre></td></tr></table></figure>

<p>启动<code>rabbitmq</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmq-server -detached</span><br></pre></td></tr></table></figure>

<p>登录<code>http://172.30.100.180:15672/</code><br>用户名<code>guest</code><br>密码<code>guest</code></p>
<p>点击 <code>Admin</code> 标签，输入用户名<code>rabbit</code> , 密码 <code>123456</code>,再次重复密码<code>123456</code>,Tags<code>administrator</code> 并设置身份 , 点击<code> Add user</code>按钮<br><img src="/2020/11/23/E2E%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20201104092751871.png" alt="image-20201104092751871"><br>点击<code>用户名</code>设置<code>权限</code><br><img src="/2020/11/23/E2E%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20201104093044562.png" alt="image-20201104093044562"><br>直接点击 <code>Set permission</code><br><img src="/2020/11/23/E2E%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20201104093125044.png" alt="image-20201104093125044"><br>完成网页端配置<br><img src="/2020/11/23/E2E%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20201104093322984.png" alt="image-20201104093322984"></p>
<h2 id="版本部署"><a href="#版本部署" class="headerlink" title="版本部署"></a>版本部署</h2><h3 id="GeoServer"><a href="#GeoServer" class="headerlink" title="GeoServer"></a>GeoServer</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app/e2e/</span><br><span class="line">cp -r /opt/package/web/e2e/geoserver-2.15.2-e2e /opt/app/e2e</span><br><span class="line">ln -s /opt/app/e2e/geoserver-2.15.2-e2e /opt/app/e2e/geoserver</span><br></pre></td></tr></table></figure>

<h3 id="E2E"><a href="#E2E" class="headerlink" title="E2E"></a>E2E</h3><p>复制<code>jar</code>包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app/e2e/</span><br><span class="line">cp -r /opt/package/web/e2e/jars /opt/app/e2e</span><br></pre></td></tr></table></figure>

<p>复制<code>dist</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app/e2e/</span><br><span class="line">cp -r /opt/package/web/e2e/dist /opt/app/e2e</span><br></pre></td></tr></table></figure>


<h2 id="配置-amp-初始化"><a href="#配置-amp-初始化" class="headerlink" title="配置&amp;初始化"></a>配置&amp;初始化</h2><h3 id="导入mysql脚本"><a href="#导入mysql脚本" class="headerlink" title="导入mysql脚本"></a>导入mysql脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/package/web/e2e/sql/v2.1/full</span><br><span class="line">mysql -uroot -p</span><br><span class="line">create database netop_e2e default character <span class="built_in">set</span> utf8mb4 collate utf8mb4_unicode_ci;</span><br><span class="line">create database netop_e2e_config default character <span class="built_in">set</span> utf8mb4 collate utf8mb4_unicode_ci;</span><br><span class="line">use netop_e2e;</span><br><span class="line"><span class="built_in">source</span> mysql_netop_full.sql;</span><br><span class="line">use netop_e2e_config;</span><br><span class="line"><span class="built_in">source</span> mysql_netop_config_full.sql;</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>


<h3 id="导入postgresql脚本"><a href="#导入postgresql脚本" class="headerlink" title="导入postgresql脚本"></a>导入postgresql脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/package/web/e2e/sql/v2.1/full</span><br><span class="line">su postgres</span><br><span class="line">psql</span><br><span class="line">create database netop_e2e owner postgres;</span><br><span class="line">\c netop_e2e;</span><br><span class="line">create extension postgis;</span><br><span class="line">create extension pg_pathman;</span><br><span class="line">\i pg_sql_full.sql;</span><br><span class="line">\i pg_function_full.sql;</span><br><span class="line">\q</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>



<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>修改host文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">172.30.100.186    netop-redis</span><br><span class="line">172.30.100.211    netop-mysql</span><br><span class="line">172.30.100.180    netop-postgresql</span><br><span class="line">172.30.100.211    netop-minio</span><br><span class="line">172.30.100.186    netop-rabbitmq</span><br><span class="line">172.30.100.211    netop-geoserver</span><br><span class="line">172.30.100.186    netop-register</span><br><span class="line">172.30.100.186    netop-gateway</span><br><span class="line">172.30.100.186    netop-auth</span><br><span class="line">172.30.100.185	  netop-hbase</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">172.30.5.211      netop-hdfs</span><br><span class="line">172.30.5.211      netop-livy</span><br><span class="line">172.30.5.211      netop-spark-master</span><br></pre></td></tr></table></figure>

<p>替换<code>nginx</code>配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /opt/package/web/e2e/nginx/nginx.conf /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>

<p>修改<code>nginx</code>配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 大约64行</span></span><br><span class="line">root /opt/app/e2e/dist;</span><br></pre></td></tr></table></figure>



<h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><p>启动<code>nginx</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>

<p>启动<code>minio</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh /opt/app/minio/minio.sh</span><br><span class="line">​```bash</span><br><span class="line"></span><br><span class="line">启动`rabbitmq`</span><br><span class="line">上面已经执行过，这里可以不执行</span><br><span class="line">​```bash</span><br><span class="line">rabbitmq-server -detached</span><br></pre></td></tr></table></figure>

<p>启动<code>redis</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/app/redis/src/redis-server /opt/app/redis/redis.conf</span><br></pre></td></tr></table></figure>

<p>启动<code>geoserver</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh /opt/app/e2e/geoserver</span><br><span class="line">nohup sh /opt/app/e2e/geoserver/bin/startup.sh &gt; /var/<span class="built_in">log</span>/geoserver.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<p>启动<code>e2e</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p e2e</span><br><span class="line">rm -rf /var/<span class="built_in">log</span>/e2e/*</span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/e2e/</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-register.jar -Dnacos.home=e2e --spring.profiles.active=dev  --server.port=8849 &gt; /var/<span class="built_in">log</span>/e2e/register.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 40s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-gateway.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/e2e/gateway.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 40s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-auth.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/e2e/auth.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 40s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-upms-biz.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/e2e/upms-biz.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 40s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-rabbitmq.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/e2e/rabbitmq.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 30s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-map.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/e2e/map.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-visual-common-web.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/e2e/visual-common-web.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-config.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/e2e/config.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -Dfile.encoding=utf-8 -jar jars/netop-e2e.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/e2e/netop-e2e.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>


<h1 id="运维技巧"><a href="#运维技巧" class="headerlink" title="运维技巧"></a>运维技巧</h1><p>TODO</p>
]]></content>
      <tags>
        <tag>电联</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 调整分区</title>
    <url>/2019/01/14/ELK%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<blockquote>
<p>原文：<span class="exturl" data-url="aHR0cDovL3d3dy5jdXd3d3cuY29tL2hlbHAvZGV0YWlsLTc4Lmh0bWw=" title="http://www.cuwwww.com/help/detail-78.html">http://www.cuwwww.com/help/detail-78.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h1 style="color:red">为了防止误操作一定要拍摄快照</h1>
## 查看分区情况
由于根目录只剩余15G， `/home`不是常用目录 但是挂载了67G
> **整体思路为将`/home`里50G划分到根目录里**

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># df -h              </span></span><br><span class="line">Filesystem           Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/cl-root   50G   36G   15G  71% /</span><br><span class="line">devtmpfs             1.9G     0  1.9G   0% /dev</span><br><span class="line">tmpfs                1.9G  4.0K  1.9G   1% /dev/shm</span><br><span class="line">tmpfs                1.9G   26M  1.9G   2% /run</span><br><span class="line">tmpfs                1.9G     0  1.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1           1014M  247M  768M  25% /boot</span><br><span class="line">/dev/mapper/cl-home   67G   68M   67G   1% /home</span><br><span class="line">tmpfs                378M     0  378M   0% /run/user/0</span><br><span class="line">tmpfs                378M   36K  378M   1% /run/user/1000</span><br></pre></td></tr></table></figure>
<h2 id="备份-home信息"><a href="#备份-home信息" class="headerlink" title="备份/home信息"></a>备份<code>/home</code>信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># cp -r /home /opt</span></span><br></pre></td></tr></table></figure>



<h2 id="查看各分区信息"><a href="#查看各分区信息" class="headerlink" title="查看各分区信息"></a>查看各分区信息</h2><p>可以看到<code>/home</code>的真实路径为<code>/dev/cl/home</code>,根目录的真实路径为<code>/dev/cl/root</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># lvdisplay </span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/cl/swap</span><br><span class="line">  LV Name                swap</span><br><span class="line">  VG Name                cl</span><br><span class="line">  LV UUID                3t2Bfa-XN4V-u9gd-HhVJ-zuRz-soUW-Orf3hP</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2017-05-28 08:06:25 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 2</span></span><br><span class="line">  LV Size                2.00 GiB</span><br><span class="line">  Current LE             512</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     8192</span><br><span class="line">  Block device           253:1</span><br><span class="line">   </span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/cl/home</span><br><span class="line">  LV Name                home</span><br><span class="line">  VG Name                cl</span><br><span class="line">  LV UUID                xuEgcT-uASA-pt10-QkA6-yJ52-gKTL-paRm2z</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2017-05-28 08:06:26 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                66.99 GiB</span><br><span class="line">  Current LE             17150</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     8192</span><br><span class="line">  Block device           253:2</span><br><span class="line">   </span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/cl/root</span><br><span class="line">  LV Name                root</span><br><span class="line">  VG Name                cl</span><br><span class="line">  LV UUID                z4JTgG-cgDe-E15j-j5uM-UW0d-dKw4-3Y0VW5</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2017-05-28 08:06:27 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                50.00 GiB</span><br><span class="line">  Current LE             12800</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     8192</span><br><span class="line">  Block device           253:0</span><br></pre></td></tr></table></figure>

<h2 id="卸载-home"><a href="#卸载-home" class="headerlink" title="卸载/home"></a>卸载<code>/home</code></h2><p>停止所有在<code>/home</code>上的进程</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># fuser -m -k /home                                                                                </span></span><br><span class="line">/home:               19266 25112cm 25388m 25415cm 25424m 25442c 25447cm 25451c 25458m 25470m 25485m 25528m 25554cm 25574cm 25583c 25594m 25624m 25628c 25636c 25661cm 25664cm 25666cm 25670cm 25674cm 25800m 25853c 25965m 26030m 26063m 52885cm 55691m</span><br></pre></td></tr></table></figure>
<p>卸载<code>/home</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># umount /home </span></span><br></pre></td></tr></table></figure>


<h2 id="减少-home分区空间"><a href="#减少-home分区空间" class="headerlink" title="减少/home分区空间"></a>减少/home分区空间</h2><p>将<code>/dev/cl/home</code>的大小设置为17G (一共67G减少了50G就是17G)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># lvreduce -L 17G /dev/cl/home</span></span><br><span class="line">  WARNING: Reducing active and open logical volume to 17.00 GiB.</span><br><span class="line">  THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class="line">Do you really want to reduce cl/home? [y/n]: y</span><br><span class="line">  Size of logical volume cl/home changed from 66.99 GiB (17150 extents) to 17.00 GiB (4352 extents).</span><br><span class="line">  Logical volume cl/home successfully resized.</span><br></pre></td></tr></table></figure>

<h2 id="增加根目录空间"><a href="#增加根目录空间" class="headerlink" title="增加根目录空间"></a>增加根目录空间</h2><p>将所有空余的空间加入根目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># lvextend -l +100%FREE /dev/cl/root</span></span><br><span class="line">  Size of logical volume cl/root changed from 50.00 GiB (12800 extents) to &lt;100.00 GiB (25599 extents).</span><br><span class="line">  Logical volume cl/root successfully resized.</span><br></pre></td></tr></table></figure>
<h2 id="扩展XFS文件目录空间"><a href="#扩展XFS文件目录空间" class="headerlink" title="扩展XFS文件目录空间"></a>扩展XFS文件目录空间</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># xfs_growfs /dev/mapper/cl-root                                       </span></span><br><span class="line">meta-data=/dev/mapper/cl-root    isize=512    agcount=4, agsize=3276800 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=13107200, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=6400, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 13107200 to 26213376</span><br></pre></td></tr></table></figure>

<h2 id="格式化-home"><a href="#格式化-home" class="headerlink" title="格式化/home"></a>格式化<code>/home</code></h2><p>由于调整<code>/home</code>之后重启时无法根据<code>/etc/fstab</code>里面的规则正确噶在<code>/home</code>，会直接进入紧急模式,所以用格式化的方式解决</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># mkfs.xfs /dev/mapper/cl-home -f                                                                  </span></span><br><span class="line">meta-data=/dev/mapper/cl-home    isize=512    agcount=4, agsize=1114112 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=4456448, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure>

<h2 id="挂载-home"><a href="#挂载-home" class="headerlink" title="挂载/home"></a>挂载<code>/home</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># mount /home   </span></span><br></pre></td></tr></table></figure>

<h2 id="恢复备份"><a href="#恢复备份" class="headerlink" title="恢复备份"></a>恢复备份</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost /home<span class="comment"># cp -r /opt/home/* /home </span></span><br></pre></td></tr></table></figure>


<h2 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h2><p>重启服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost /home<span class="comment"># reboot   </span></span><br></pre></td></tr></table></figure>

<p>再次查看，根目录已经变为100G成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@localhost ~<span class="comment"># df -hT               </span></span><br><span class="line">文件系统            类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/cl-root xfs       100G   36G   65G   36% /</span><br><span class="line">devtmpfs            devtmpfs  1.9G     0  1.9G    0% /dev</span><br><span class="line">tmpfs               tmpfs     1.9G  4.0K  1.9G    1% /dev/shm</span><br><span class="line">tmpfs               tmpfs     1.9G  9.1M  1.9G    1% /run</span><br><span class="line">tmpfs               tmpfs     1.9G     0  1.9G    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1           xfs      1014M  247M  768M   25% /boot</span><br><span class="line">/dev/mapper/cl-home xfs        17G   66M   17G    1% /home</span><br><span class="line">tmpfs               tmpfs     378M  8.0K  378M    1% /run/user/42</span><br><span class="line">tmpfs               tmpfs     378M     0  378M    0% /run/user/0</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>elk</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO DOCKER</title>
    <url>/2020/02/06/HEXO-DOCKER/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker create --name=hexo-domain.com \</span><br><span class="line">-e HEXO_SERVER_PORT=4000 \</span><br><span class="line">-e GIT_USER=<span class="string">&quot;Your Name&quot;</span> \</span><br><span class="line">-e GIT_EMAIL=<span class="string">&quot;your.email@domain.tld&quot;</span> \</span><br><span class="line">-v /mnt/e/hexo:/app \</span><br><span class="line">-p 4000:4000 \</span><br><span class="line">spurin/hexo</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO使用指南</title>
    <url>/2018/05/15/HEXO%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20v" title="http://theme-next.iissnan.com/">http://theme-next.iissnan.com/<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p><img src="/2018/05/15/HEXO%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-0.png" alt="官网图片"></p>
<h2 id="站内搜索插件"><a href="#站内搜索插件" class="headerlink" title="站内搜索插件"></a>站内搜索插件</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>修改<code>站点配置</code>文件</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="function">search:</span></span><br><span class="line"><span class="function">  <span class="title">path</span>: <span class="title">search.xml</span></span></span><br><span class="line"><span class="function">  <span class="title">field</span>: <span class="title">post</span></span></span><br><span class="line"><span class="function">  <span class="title">format</span>: <span class="title">html</span></span></span><br><span class="line"><span class="function">  <span class="title">limit</span>: 10000</span></span><br></pre></td></tr></table></figure>
<p>修改<code>主题配置</code>文件</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="function">local_search:</span></span><br><span class="line"><span class="function">  <span class="title">enable</span>: <span class="title">true</span></span></span><br></pre></td></tr></table></figure>

<h2 id="在线编写"><a href="#在线编写" class="headerlink" title="在线编写"></a>在线编写</h2><blockquote>
<p>需要仔细看报错信息,并且<code>install</code>对应的模块   </p>
</blockquote>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br><span class="line">hexo server -d</span><br><span class="line">open http://localhost:<span class="number">4000</span>/admin/</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>日常</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML转义字符对照表</title>
    <url>/2020/03/20/HTML%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6%E5%AF%B9%E7%85%A7%E8%A1%A8/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc29qc29uLmNvbS9odG1sbWFyay5odG1s" title="https://www.sojson.com/htmlmark.html">https://www.sojson.com/htmlmark.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><table>
<thead>
<tr>
<th align="left">字符</th>
<th align="left">十进制</th>
<th align="left">转义字符</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&quot;</code></td>
<td align="left"><code>&amp;#34;</code></td>
<td align="left"><code>&amp;quot;</code></td>
</tr>
<tr>
<td align="left"><code>&amp;</code></td>
<td align="left"><code>&amp;#38;</code></td>
<td align="left"><code>&amp;amp;</code></td>
</tr>
<tr>
<td align="left"><code>&lt;</code></td>
<td align="left"><code>&amp;#60;</code></td>
<td align="left"><code>&amp;lt;</code></td>
</tr>
<tr>
<td align="left"><code>&gt;</code></td>
<td align="left"><code>&amp;#62;</code></td>
<td align="left"><code>&amp;gt;</code></td>
</tr>
<tr>
<td align="left"><code> </code> 不断开空格(non-breaking space)</td>
<td align="left"><code>&amp;#160;</code></td>
<td align="left"><code>&amp;nbsp;</code></td>
</tr>
</tbody></table>
<a id="more"></a>

<h3 id="全部"><a href="#全部" class="headerlink" title="全部"></a>全部</h3><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly90b29sLmx1L2h0bWxlbnRpdHkv" title="https://tool.lu/htmlentity/">https://tool.lu/htmlentity/<i class="fa fa-external-link"></i></span></p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">原始字符</th>
<th align="left">entity</th>
<th align="left">原始字符</th>
<th align="left">entity</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&quot;</code></td>
<td align="left"><code>&amp;quot;</code></td>
<td align="left"><code>&amp;</code></td>
<td align="left"><code>&amp;amp;</code></td>
</tr>
<tr>
<td align="left"><code>&#39;</code></td>
<td align="left"><code>&amp;#039;</code></td>
<td align="left"><code>&lt;</code></td>
<td align="left"><code>&amp;lt;</code></td>
</tr>
<tr>
<td align="left"><code>&gt;</code></td>
<td align="left"><code>&amp;gt;</code></td>
<td align="left"><code> </code></td>
<td align="left"><code>&amp;nbsp;</code></td>
</tr>
<tr>
<td align="left"><code>¡</code></td>
<td align="left"><code>&amp;iexcl;</code></td>
<td align="left"><code>¢</code></td>
<td align="left"><code>&amp;cent;</code></td>
</tr>
<tr>
<td align="left"><code>£</code></td>
<td align="left"><code>&amp;pound;</code></td>
<td align="left"><code>¤</code></td>
<td align="left"><code>&amp;curren;</code></td>
</tr>
<tr>
<td align="left"><code>¥</code></td>
<td align="left"><code>&amp;yen;</code></td>
<td align="left"><code>¦</code></td>
<td align="left"><code>&amp;brvbar;</code></td>
</tr>
<tr>
<td align="left"><code>§</code></td>
<td align="left"><code>&amp;sect;</code></td>
<td align="left"><code>¨</code></td>
<td align="left"><code>&amp;uml;</code></td>
</tr>
<tr>
<td align="left"><code>©</code></td>
<td align="left"><code>&amp;copy;</code></td>
<td align="left"><code>ª</code></td>
<td align="left"><code>&amp;ordf;</code></td>
</tr>
<tr>
<td align="left"><code>«</code></td>
<td align="left"><code>&amp;laquo;</code></td>
<td align="left"><code>¬</code></td>
<td align="left"><code>&amp;not;</code></td>
</tr>
<tr>
<td align="left"><code>­</code></td>
<td align="left"><code>&amp;shy;</code></td>
<td align="left"><code>®</code></td>
<td align="left"><code>&amp;reg;</code></td>
</tr>
<tr>
<td align="left"><code>¯</code></td>
<td align="left"><code>&amp;macr;</code></td>
<td align="left"><code>°</code></td>
<td align="left"><code>&amp;deg;</code></td>
</tr>
<tr>
<td align="left"><code>±</code></td>
<td align="left"><code>&amp;plusmn;</code></td>
<td align="left"><code>²</code></td>
<td align="left"><code>&amp;sup2;</code></td>
</tr>
<tr>
<td align="left"><code>³</code></td>
<td align="left"><code>&amp;sup3;</code></td>
<td align="left"><code>´</code></td>
<td align="left"><code>&amp;acute;</code></td>
</tr>
<tr>
<td align="left"><code>µ</code></td>
<td align="left"><code>&amp;micro;</code></td>
<td align="left"><code>¶</code></td>
<td align="left"><code>&amp;para;</code></td>
</tr>
<tr>
<td align="left"><code>·</code></td>
<td align="left"><code>&amp;middot;</code></td>
<td align="left"><code>¸</code></td>
<td align="left"><code>&amp;cedil;</code></td>
</tr>
<tr>
<td align="left"><code>¹</code></td>
<td align="left"><code>&amp;sup1;</code></td>
<td align="left"><code>º</code></td>
<td align="left"><code>&amp;ordm;</code></td>
</tr>
<tr>
<td align="left"><code>»</code></td>
<td align="left"><code>&amp;raquo;</code></td>
<td align="left"><code>¼</code></td>
<td align="left"><code>&amp;frac14;</code></td>
</tr>
<tr>
<td align="left"><code>½</code></td>
<td align="left"><code>&amp;frac12;</code></td>
<td align="left"><code>¾</code></td>
<td align="left"><code>&amp;frac34;</code></td>
</tr>
<tr>
<td align="left"><code>¿</code></td>
<td align="left"><code>&amp;iquest;</code></td>
<td align="left"><code>À</code></td>
<td align="left"><code>&amp;Agrave;</code></td>
</tr>
<tr>
<td align="left"><code>Á</code></td>
<td align="left"><code>&amp;Aacute;</code></td>
<td align="left"><code>Â</code></td>
<td align="left"><code>&amp;Acirc;</code></td>
</tr>
<tr>
<td align="left"><code>Ã</code></td>
<td align="left"><code>&amp;Atilde;</code></td>
<td align="left"><code>Ä</code></td>
<td align="left"><code>&amp;Auml;</code></td>
</tr>
<tr>
<td align="left"><code>Å</code></td>
<td align="left"><code>&amp;Aring;</code></td>
<td align="left"><code>Æ</code></td>
<td align="left"><code>&amp;AElig;</code></td>
</tr>
<tr>
<td align="left"><code>Ç</code></td>
<td align="left"><code>&amp;Ccedil;</code></td>
<td align="left"><code>È</code></td>
<td align="left"><code>&amp;Egrave;</code></td>
</tr>
<tr>
<td align="left"><code>É</code></td>
<td align="left"><code>&amp;Eacute;</code></td>
<td align="left"><code>Ê</code></td>
<td align="left"><code>&amp;Ecirc;</code></td>
</tr>
<tr>
<td align="left"><code>Ë</code></td>
<td align="left"><code>&amp;Euml;</code></td>
<td align="left"><code>Ì</code></td>
<td align="left"><code>&amp;Igrave;</code></td>
</tr>
<tr>
<td align="left"><code>Í</code></td>
<td align="left"><code>&amp;Iacute;</code></td>
<td align="left"><code>Î</code></td>
<td align="left"><code>&amp;Icirc;</code></td>
</tr>
<tr>
<td align="left"><code>Ï</code></td>
<td align="left"><code>&amp;Iuml;</code></td>
<td align="left"><code>Ð</code></td>
<td align="left"><code>&amp;ETH;</code></td>
</tr>
<tr>
<td align="left"><code>Ñ</code></td>
<td align="left"><code>&amp;Ntilde;</code></td>
<td align="left"><code>Ò</code></td>
<td align="left"><code>&amp;Ograve;</code></td>
</tr>
<tr>
<td align="left"><code>Ó</code></td>
<td align="left"><code>&amp;Oacute;</code></td>
<td align="left"><code>Ô</code></td>
<td align="left"><code>&amp;Ocirc;</code></td>
</tr>
<tr>
<td align="left"><code>Õ</code></td>
<td align="left"><code>&amp;Otilde;</code></td>
<td align="left"><code>Ö</code></td>
<td align="left"><code>&amp;Ouml;</code></td>
</tr>
<tr>
<td align="left"><code>×</code></td>
<td align="left"><code>&amp;times;</code></td>
<td align="left"><code>Ø</code></td>
<td align="left"><code>&amp;Oslash;</code></td>
</tr>
<tr>
<td align="left"><code>Ù</code></td>
<td align="left"><code>&amp;Ugrave;</code></td>
<td align="left"><code>Ú</code></td>
<td align="left"><code>&amp;Uacute;</code></td>
</tr>
<tr>
<td align="left"><code>Û</code></td>
<td align="left"><code>&amp;Ucirc;</code></td>
<td align="left"><code>Ü</code></td>
<td align="left"><code>&amp;Uuml;</code></td>
</tr>
<tr>
<td align="left"><code>Ý</code></td>
<td align="left"><code>&amp;Yacute;</code></td>
<td align="left"><code>Þ</code></td>
<td align="left"><code>&amp;THORN;</code></td>
</tr>
<tr>
<td align="left"><code>ß</code></td>
<td align="left"><code>&amp;szlig;</code></td>
<td align="left"><code>à</code></td>
<td align="left"><code>&amp;agrave;</code></td>
</tr>
<tr>
<td align="left"><code>á</code></td>
<td align="left"><code>&amp;aacute;</code></td>
<td align="left"><code>â</code></td>
<td align="left"><code>&amp;acirc;</code></td>
</tr>
<tr>
<td align="left"><code>ã</code></td>
<td align="left"><code>&amp;atilde;</code></td>
<td align="left"><code>ä</code></td>
<td align="left"><code>&amp;auml;</code></td>
</tr>
<tr>
<td align="left"><code>å</code></td>
<td align="left"><code>&amp;aring;</code></td>
<td align="left"><code>æ</code></td>
<td align="left"><code>&amp;aelig;</code></td>
</tr>
<tr>
<td align="left"><code>ç</code></td>
<td align="left"><code>&amp;ccedil;</code></td>
<td align="left"><code>è</code></td>
<td align="left"><code>&amp;egrave;</code></td>
</tr>
<tr>
<td align="left"><code>é</code></td>
<td align="left"><code>&amp;eacute;</code></td>
<td align="left"><code>ê</code></td>
<td align="left"><code>&amp;ecirc;</code></td>
</tr>
<tr>
<td align="left"><code>ë</code></td>
<td align="left"><code>&amp;euml;</code></td>
<td align="left"><code>ì</code></td>
<td align="left"><code>&amp;igrave;</code></td>
</tr>
<tr>
<td align="left"><code>í</code></td>
<td align="left"><code>&amp;iacute;</code></td>
<td align="left"><code>î</code></td>
<td align="left"><code>&amp;icirc;</code></td>
</tr>
<tr>
<td align="left"><code>ï</code></td>
<td align="left"><code>&amp;iuml;</code></td>
<td align="left"><code>ð</code></td>
<td align="left"><code>&amp;eth;</code></td>
</tr>
<tr>
<td align="left"><code>ñ</code></td>
<td align="left"><code>&amp;ntilde;</code></td>
<td align="left"><code>ò</code></td>
<td align="left"><code>&amp;ograve;</code></td>
</tr>
<tr>
<td align="left"><code>ó</code></td>
<td align="left"><code>&amp;oacute;</code></td>
<td align="left"><code>ô</code></td>
<td align="left"><code>&amp;ocirc;</code></td>
</tr>
<tr>
<td align="left"><code>õ</code></td>
<td align="left"><code>&amp;otilde;</code></td>
<td align="left"><code>ö</code></td>
<td align="left"><code>&amp;ouml;</code></td>
</tr>
<tr>
<td align="left"><code>÷</code></td>
<td align="left"><code>&amp;divide;</code></td>
<td align="left"><code>ø</code></td>
<td align="left"><code>&amp;oslash;</code></td>
</tr>
<tr>
<td align="left"><code>ù</code></td>
<td align="left"><code>&amp;ugrave;</code></td>
<td align="left"><code>ú</code></td>
<td align="left"><code>&amp;uacute;</code></td>
</tr>
<tr>
<td align="left"><code>û</code></td>
<td align="left"><code>&amp;ucirc;</code></td>
<td align="left"><code>ü</code></td>
<td align="left"><code>&amp;uuml;</code></td>
</tr>
<tr>
<td align="left"><code>ý</code></td>
<td align="left"><code>&amp;yacute;</code></td>
<td align="left"><code>þ</code></td>
<td align="left"><code>&amp;thorn;</code></td>
</tr>
<tr>
<td align="left"><code>ÿ</code></td>
<td align="left"><code>&amp;yuml;</code></td>
<td align="left"><code>Œ</code></td>
<td align="left"><code>&amp;OElig;</code></td>
</tr>
<tr>
<td align="left"><code>œ</code></td>
<td align="left"><code>&amp;oelig;</code></td>
<td align="left"><code>Š</code></td>
<td align="left"><code>&amp;Scaron;</code></td>
</tr>
<tr>
<td align="left"><code>š</code></td>
<td align="left"><code>&amp;scaron;</code></td>
<td align="left"><code>Ÿ</code></td>
<td align="left"><code>&amp;Yuml;</code></td>
</tr>
<tr>
<td align="left"><code>ƒ</code></td>
<td align="left"><code>&amp;fnof;</code></td>
<td align="left"><code>ˆ</code></td>
<td align="left"><code>&amp;circ;</code></td>
</tr>
<tr>
<td align="left"><code>˜</code></td>
<td align="left"><code>&amp;tilde;</code></td>
<td align="left"><code>Α</code></td>
<td align="left"><code>&amp;Alpha;</code></td>
</tr>
<tr>
<td align="left"><code>Β</code></td>
<td align="left"><code>&amp;Beta;</code></td>
<td align="left"><code>Γ</code></td>
<td align="left"><code>&amp;Gamma;</code></td>
</tr>
<tr>
<td align="left"><code>Δ</code></td>
<td align="left"><code>&amp;Delta;</code></td>
<td align="left"><code>Ε</code></td>
<td align="left"><code>&amp;Epsilon;</code></td>
</tr>
<tr>
<td align="left"><code>Ζ</code></td>
<td align="left"><code>&amp;Zeta;</code></td>
<td align="left"><code>Η</code></td>
<td align="left"><code>&amp;Eta;</code></td>
</tr>
<tr>
<td align="left"><code>Θ</code></td>
<td align="left"><code>&amp;Theta;</code></td>
<td align="left"><code>Ι</code></td>
<td align="left"><code>&amp;Iota;</code></td>
</tr>
<tr>
<td align="left"><code>Κ</code></td>
<td align="left"><code>&amp;Kappa;</code></td>
<td align="left"><code>Λ</code></td>
<td align="left"><code>&amp;Lambda;</code></td>
</tr>
<tr>
<td align="left"><code>Μ</code></td>
<td align="left"><code>&amp;Mu;</code></td>
<td align="left"><code>Ν</code></td>
<td align="left"><code>&amp;Nu;</code></td>
</tr>
<tr>
<td align="left"><code>Ξ</code></td>
<td align="left"><code>&amp;Xi;</code></td>
<td align="left"><code>Ο</code></td>
<td align="left"><code>&amp;Omicron;</code></td>
</tr>
<tr>
<td align="left"><code>Π</code></td>
<td align="left"><code>&amp;Pi;</code></td>
<td align="left"><code>Ρ</code></td>
<td align="left"><code>&amp;Rho;</code></td>
</tr>
<tr>
<td align="left"><code>Σ</code></td>
<td align="left"><code>&amp;Sigma;</code></td>
<td align="left"><code>Τ</code></td>
<td align="left"><code>&amp;Tau;</code></td>
</tr>
<tr>
<td align="left"><code>Υ</code></td>
<td align="left"><code>&amp;Upsilon;</code></td>
<td align="left"><code>Φ</code></td>
<td align="left"><code>&amp;Phi;</code></td>
</tr>
<tr>
<td align="left"><code>Χ</code></td>
<td align="left"><code>&amp;Chi;</code></td>
<td align="left"><code>Ψ</code></td>
<td align="left"><code>&amp;Psi;</code></td>
</tr>
<tr>
<td align="left"><code>Ω</code></td>
<td align="left"><code>&amp;Omega;</code></td>
<td align="left"><code>α</code></td>
<td align="left"><code>&amp;alpha;</code></td>
</tr>
<tr>
<td align="left"><code>β</code></td>
<td align="left"><code>&amp;beta;</code></td>
<td align="left"><code>γ</code></td>
<td align="left"><code>&amp;gamma;</code></td>
</tr>
<tr>
<td align="left"><code>δ</code></td>
<td align="left"><code>&amp;delta;</code></td>
<td align="left"><code>ε</code></td>
<td align="left"><code>&amp;epsilon;</code></td>
</tr>
<tr>
<td align="left"><code>ζ</code></td>
<td align="left"><code>&amp;zeta;</code></td>
<td align="left"><code>η</code></td>
<td align="left"><code>&amp;eta;</code></td>
</tr>
<tr>
<td align="left"><code>θ</code></td>
<td align="left"><code>&amp;theta;</code></td>
<td align="left"><code>ι</code></td>
<td align="left"><code>&amp;iota;</code></td>
</tr>
<tr>
<td align="left"><code>κ</code></td>
<td align="left"><code>&amp;kappa;</code></td>
<td align="left"><code>λ</code></td>
<td align="left"><code>&amp;lambda;</code></td>
</tr>
<tr>
<td align="left"><code>μ</code></td>
<td align="left"><code>&amp;mu;</code></td>
<td align="left"><code>ν</code></td>
<td align="left"><code>&amp;nu;</code></td>
</tr>
<tr>
<td align="left"><code>ξ</code></td>
<td align="left"><code>&amp;xi;</code></td>
<td align="left"><code>ο</code></td>
<td align="left"><code>&amp;omicron;</code></td>
</tr>
<tr>
<td align="left"><code>π</code></td>
<td align="left"><code>&amp;pi;</code></td>
<td align="left"><code>ρ</code></td>
<td align="left"><code>&amp;rho;</code></td>
</tr>
<tr>
<td align="left"><code>ς</code></td>
<td align="left"><code>&amp;sigmaf;</code></td>
<td align="left"><code>σ</code></td>
<td align="left"><code>&amp;sigma;</code></td>
</tr>
<tr>
<td align="left"><code>τ</code></td>
<td align="left"><code>&amp;tau;</code></td>
<td align="left"><code>υ</code></td>
<td align="left"><code>&amp;upsilon;</code></td>
</tr>
<tr>
<td align="left"><code>φ</code></td>
<td align="left"><code>&amp;phi;</code></td>
<td align="left"><code>χ</code></td>
<td align="left"><code>&amp;chi;</code></td>
</tr>
<tr>
<td align="left"><code>ψ</code></td>
<td align="left"><code>&amp;psi;</code></td>
<td align="left"><code>ω</code></td>
<td align="left"><code>&amp;omega;</code></td>
</tr>
<tr>
<td align="left"><code>ϑ</code></td>
<td align="left"><code>&amp;thetasym;</code></td>
<td align="left"><code>ϒ</code></td>
<td align="left"><code>&amp;upsih;</code></td>
</tr>
<tr>
<td align="left"><code>ϖ</code></td>
<td align="left"><code>&amp;piv;</code></td>
<td align="left"><code> </code></td>
<td align="left"><code>&amp;ensp;</code></td>
</tr>
<tr>
<td align="left"><code> </code></td>
<td align="left"><code>&amp;emsp;</code></td>
<td align="left"><code> </code></td>
<td align="left"><code>&amp;thinsp;</code></td>
</tr>
<tr>
<td align="left"><code>‌</code></td>
<td align="left"><code>&amp;zwnj;</code></td>
<td align="left"><code>‍</code></td>
<td align="left"><code>&amp;zwj;</code></td>
</tr>
<tr>
<td align="left"><code>‎</code></td>
<td align="left"><code>&amp;lrm;</code></td>
<td align="left"><code>‏</code></td>
<td align="left"><code>&amp;rlm;</code></td>
</tr>
<tr>
<td align="left"><code>–</code></td>
<td align="left"><code>&amp;ndash;</code></td>
<td align="left"><code>—</code></td>
<td align="left"><code>&amp;mdash;</code></td>
</tr>
<tr>
<td align="left"><code>‘</code></td>
<td align="left"><code>&amp;lsquo;</code></td>
<td align="left"><code>’</code></td>
<td align="left"><code>&amp;rsquo;</code></td>
</tr>
<tr>
<td align="left"><code>‚</code></td>
<td align="left"><code>&amp;sbquo;</code></td>
<td align="left"><code>“</code></td>
<td align="left"><code>&amp;ldquo;</code></td>
</tr>
<tr>
<td align="left"><code>”</code></td>
<td align="left"><code>&amp;rdquo;</code></td>
<td align="left"><code>„</code></td>
<td align="left"><code>&amp;bdquo;</code></td>
</tr>
<tr>
<td align="left"><code>†</code></td>
<td align="left"><code>&amp;dagger;</code></td>
<td align="left"><code>‡</code></td>
<td align="left"><code>&amp;Dagger;</code></td>
</tr>
<tr>
<td align="left"><code>•</code></td>
<td align="left"><code>&amp;bull;</code></td>
<td align="left"><code>…</code></td>
<td align="left"><code>&amp;hellip;</code></td>
</tr>
<tr>
<td align="left"><code>‰</code></td>
<td align="left"><code>&amp;permil;</code></td>
<td align="left"><code>′</code></td>
<td align="left"><code>&amp;prime;</code></td>
</tr>
<tr>
<td align="left"><code>″</code></td>
<td align="left"><code>&amp;Prime;</code></td>
<td align="left"><code>‹</code></td>
<td align="left"><code>&amp;lsaquo;</code></td>
</tr>
<tr>
<td align="left"><code>›</code></td>
<td align="left"><code>&amp;rsaquo;</code></td>
<td align="left"><code>‾</code></td>
<td align="left"><code>&amp;oline;</code></td>
</tr>
<tr>
<td align="left"><code>⁄</code></td>
<td align="left"><code>&amp;frasl;</code></td>
<td align="left"><code>€</code></td>
<td align="left"><code>&amp;euro;</code></td>
</tr>
<tr>
<td align="left"><code>ℑ</code></td>
<td align="left"><code>&amp;image;</code></td>
<td align="left"><code>℘</code></td>
<td align="left"><code>&amp;weierp;</code></td>
</tr>
<tr>
<td align="left"><code>ℜ</code></td>
<td align="left"><code>&amp;real;</code></td>
<td align="left"><code>™</code></td>
<td align="left"><code>&amp;trade;</code></td>
</tr>
<tr>
<td align="left"><code>ℵ</code></td>
<td align="left"><code>&amp;alefsym;</code></td>
<td align="left"><code>←</code></td>
<td align="left"><code>&amp;larr;</code></td>
</tr>
<tr>
<td align="left"><code>↑</code></td>
<td align="left"><code>&amp;uarr;</code></td>
<td align="left"><code>→</code></td>
<td align="left"><code>&amp;rarr;</code></td>
</tr>
<tr>
<td align="left"><code>↓</code></td>
<td align="left"><code>&amp;darr;</code></td>
<td align="left"><code>↔</code></td>
<td align="left"><code>&amp;harr;</code></td>
</tr>
<tr>
<td align="left"><code>↵</code></td>
<td align="left"><code>&amp;crarr;</code></td>
<td align="left"><code>⇐</code></td>
<td align="left"><code>&amp;lArr;</code></td>
</tr>
<tr>
<td align="left"><code>⇑</code></td>
<td align="left"><code>&amp;uArr;</code></td>
<td align="left"><code>⇒</code></td>
<td align="left"><code>&amp;rArr;</code></td>
</tr>
<tr>
<td align="left"><code>⇓</code></td>
<td align="left"><code>&amp;dArr;</code></td>
<td align="left"><code>⇔</code></td>
<td align="left"><code>&amp;hArr;</code></td>
</tr>
<tr>
<td align="left"><code>∀</code></td>
<td align="left"><code>&amp;forall;</code></td>
<td align="left"><code>∂</code></td>
<td align="left"><code>&amp;part;</code></td>
</tr>
<tr>
<td align="left"><code>∃</code></td>
<td align="left"><code>&amp;exist;</code></td>
<td align="left"><code>∅</code></td>
<td align="left"><code>&amp;empty;</code></td>
</tr>
<tr>
<td align="left"><code>∇</code></td>
<td align="left"><code>&amp;nabla;</code></td>
<td align="left"><code>∈</code></td>
<td align="left"><code>&amp;isin;</code></td>
</tr>
<tr>
<td align="left"><code>∉</code></td>
<td align="left"><code>&amp;notin;</code></td>
<td align="left"><code>∋</code></td>
<td align="left"><code>&amp;ni;</code></td>
</tr>
<tr>
<td align="left"><code>∏</code></td>
<td align="left"><code>&amp;prod;</code></td>
<td align="left"><code>∑</code></td>
<td align="left"><code>&amp;sum;</code></td>
</tr>
<tr>
<td align="left"><code>−</code></td>
<td align="left"><code>&amp;minus;</code></td>
<td align="left"><code>∗</code></td>
<td align="left"><code>&amp;lowast;</code></td>
</tr>
<tr>
<td align="left"><code>√</code></td>
<td align="left"><code>&amp;radic;</code></td>
<td align="left"><code>∝</code></td>
<td align="left"><code>&amp;prop;</code></td>
</tr>
<tr>
<td align="left"><code>∞</code></td>
<td align="left"><code>&amp;infin;</code></td>
<td align="left"><code>∠</code></td>
<td align="left"><code>&amp;ang;</code></td>
</tr>
<tr>
<td align="left"><code>∧</code></td>
<td align="left"><code>&amp;and;</code></td>
<td align="left"><code>∨</code></td>
<td align="left"><code>&amp;or;</code></td>
</tr>
<tr>
<td align="left"><code>∩</code></td>
<td align="left"><code>&amp;cap;</code></td>
<td align="left"><code>∪</code></td>
<td align="left"><code>&amp;cup;</code></td>
</tr>
<tr>
<td align="left"><code>∫</code></td>
<td align="left"><code>&amp;int;</code></td>
<td align="left"><code>∴</code></td>
<td align="left"><code>&amp;there4;</code></td>
</tr>
<tr>
<td align="left"><code>∼</code></td>
<td align="left"><code>&amp;sim;</code></td>
<td align="left"><code>≅</code></td>
<td align="left"><code>&amp;cong;</code></td>
</tr>
<tr>
<td align="left"><code>≈</code></td>
<td align="left"><code>&amp;asymp;</code></td>
<td align="left"><code>≠</code></td>
<td align="left"><code>&amp;ne;</code></td>
</tr>
<tr>
<td align="left"><code>≡</code></td>
<td align="left"><code>&amp;equiv;</code></td>
<td align="left"><code>≤</code></td>
<td align="left"><code>&amp;le;</code></td>
</tr>
<tr>
<td align="left"><code>≥</code></td>
<td align="left"><code>&amp;ge;</code></td>
<td align="left"><code>⊂</code></td>
<td align="left"><code>&amp;sub;</code></td>
</tr>
<tr>
<td align="left"><code>⊃</code></td>
<td align="left"><code>&amp;sup;</code></td>
<td align="left"><code>⊄</code></td>
<td align="left"><code>&amp;nsub;</code></td>
</tr>
<tr>
<td align="left"><code>⊆</code></td>
<td align="left"><code>&amp;sube;</code></td>
<td align="left"><code>⊇</code></td>
<td align="left"><code>&amp;supe;</code></td>
</tr>
<tr>
<td align="left"><code>⊕</code></td>
<td align="left"><code>&amp;oplus;</code></td>
<td align="left"><code>⊗</code></td>
<td align="left"><code>&amp;otimes;</code></td>
</tr>
<tr>
<td align="left"><code>⊥</code></td>
<td align="left"><code>&amp;perp;</code></td>
<td align="left"><code>⋅</code></td>
<td align="left"><code>&amp;sdot;</code></td>
</tr>
<tr>
<td align="left"><code>⌈</code></td>
<td align="left"><code>&amp;lceil;</code></td>
<td align="left"><code>⌉</code></td>
<td align="left"><code>&amp;rceil;</code></td>
</tr>
<tr>
<td align="left"><code>⌊</code></td>
<td align="left"><code>&amp;lfloor;</code></td>
<td align="left"><code>⌋</code></td>
<td align="left"><code>&amp;rfloor;</code></td>
</tr>
<tr>
<td align="left"><code>⟨</code></td>
<td align="left"><code>&amp;lang;</code></td>
<td align="left"><code>⟩</code></td>
<td align="left"><code>&amp;rang;</code></td>
</tr>
<tr>
<td align="left"><code>◊</code></td>
<td align="left"><code>&amp;loz;</code></td>
<td align="left"><code>♠</code></td>
<td align="left"><code>&amp;spades;</code></td>
</tr>
<tr>
<td align="left"><code>♣</code></td>
<td align="left"><code>&amp;clubs;</code></td>
<td align="left"><code>♥</code></td>
<td align="left"><code>&amp;hearts;</code></td>
</tr>
<tr>
<td align="left"><code>♦</code></td>
<td align="left"><code>&amp;diams;</code></td>
<td align="left"></td>
<td align="left"></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA查看类图</title>
    <url>/2018/12/10/IDEA%E6%9F%A5%E7%9C%8B%E7%B1%BB%E5%9B%BE/</url>
    <content><![CDATA[<h2 id="超级无敌"><a href="#超级无敌" class="headerlink" title="超级无敌"></a>超级无敌</h2><p>ctrl + shift + alt + u 父类<br>ctrl + alt + b  子类</p>
<h2 id="看继承关系"><a href="#看继承关系" class="headerlink" title="看继承关系"></a>看继承关系</h2><p>快捷键 <code>ctrl + H</code> 查看hierarchy,只能查看向上向下继承关系，而不能看实现了哪些接口。<br>右键选择Diagrams（也可以使用快捷键 <code>ctrl+alt+u</code> ，更快捷）</p>
<h2 id="看接口的实现关系"><a href="#看接口的实现关系" class="headerlink" title="看接口的实现关系"></a>看接口的实现关系</h2><p>快捷键 <code>ctrl + alt + B</code> 会显示出跟这个接口有关系的类。</p>
<h2 id="查看关系类图"><a href="#查看关系类图" class="headerlink" title="查看关系类图"></a>查看关系类图</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. Ctrl + Alt + Shift + U</span><br><span class="line">2. Enter</span><br><span class="line">3. Ctrl + Alt + B</span><br><span class="line">4. Ctrl + A</span><br><span class="line">5. Enter</span><br></pre></td></tr></table></figure>
<p><img src="/2018/12/10/IDEA%E6%9F%A5%E7%9C%8B%E7%B1%BB%E5%9B%BE/image-87.png" alt="upload successful"></p>
]]></content>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>INAS架构探险</title>
    <url>/2018/05/29/INAS%E6%9E%B6%E6%9E%84%E6%8E%A2%E9%99%A9/</url>
    <content><![CDATA[<blockquote>
<p>INAS是江苏移动做的一款项目,从编码的风格来看他们的流程,管理都比大唐规范,无论是从技术,架构或者是规范都具有一定的学习价值</p>
</blockquote>
<blockquote>
<p>此项目采用docker部署: 从部署文档来看项目采用的是<code>oracle</code> + <code>mysql</code> + <code>redis</code> + <code>cdn</code> + <code>tomcat</code> 的架构,但是项目无法如部署文档所述的那样启动,深入代码来看,是因为缺少<code>oracle</code>数据库相关的启动以及配置导致的</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>JProfiler破解</title>
    <url>/2018/06/20/JProfiler%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<blockquote>
<p>原文 <span class="exturl" data-url="aHR0cHM6Ly93d3cuamI1MS5uZXQvc29mdGpjLzYwODY1NS5odG1s" title="https://www.jb51.net/softjc/608655.html">https://www.jb51.net/softjc/608655.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p>直接选择<code>Enter license key</code><br><img src="/2018/06/20/JProfiler%E7%A0%B4%E8%A7%A3/image-38.png" alt="upload successful"></p>
<table>
<thead>
<tr>
<th>label</th>
<th>input</th>
</tr>
</thead>
<tbody><tr>
<td>name</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5qYjUxLm5ldC8=" title="http://www.jb51.net/">www.jb51.net<i class="fa fa-external-link"></i></span></td>
</tr>
<tr>
<td>company</td>
<td>jb51</td>
</tr>
<tr>
<td>License key</td>
<td>L-GXdJph7lkG-1CvkTwHlvk#741</td>
</tr>
<tr>
<td></td>
<td>L-KMGcqlMxTo-Fkd1ultFTt#3810</td>
</tr>
<tr>
<td></td>
<td>A-TgIjrDbn41-5w05ktrJFf#18128</td>
</tr>
<tr>
<td></td>
<td>A-3rk5EoAR9t-vdItuCJtVi#2898</td>
</tr>
<tr>
<td></td>
<td>S-DJMhaqMnvW-36Sb5jcGYO#31259</td>
</tr>
<tr>
<td></td>
<td>L-qOQRsFcEcF-LqVM1lqxQm#1437</td>
</tr>
<tr>
<td></td>
<td>A-3VIC9ISIit-SkVGccmWta#689</td>
</tr>
<tr>
<td></td>
<td>L-dpoWt86zUZ-tzJNLsXY75#4229</td>
</tr>
<tr>
<td></td>
<td>S-yYk9XkHyyY-3GVAtuBBkR#1104</td>
</tr>
<tr>
<td></td>
<td>S-QH9BAugD8L-EZ2KbOTiIL#31225</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>LocalDateTime总结</title>
    <url>/2020/03/15/Java8%E6%97%B6%E9%97%B4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="LocalDateTime和Date相互转换"><a href="#LocalDateTime和Date相互转换" class="headerlink" title="LocalDateTime和Date相互转换"></a>LocalDateTime和Date相互转换</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9ob3d0b2RvaW5qYXZhLmNvbS9qYXZhL2RhdGUtdGltZS9sb2NhbGRhdGV0aW1lLXRvLWRhdGUv" title="https://howtodoinjava.com/java/date-time/localdatetime-to-date/">https://howtodoinjava.com/java/date-time/localdatetime-to-date/<i class="fa fa-external-link"></i></span></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.time.Instant;</span><br><span class="line">import java.time.LocalDate;</span><br><span class="line">import java.time.LocalDateTime;</span><br><span class="line">import java.time.ZoneId;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">public class DateUtils &#123;</span><br><span class="line"></span><br><span class="line">	public static Date asDate(LocalDate localDate) &#123;</span><br><span class="line">		return Date.from(localDate.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public static Date asDate(LocalDateTime localDateTime) &#123;</span><br><span class="line">		return Date.from(localDateTime.atZone(ZoneId.systemDefault()).toInstant());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public static LocalDate asLocalDate(Date date) &#123;</span><br><span class="line">		return Instant.ofEpochMilli(date.getTime()).atZone(ZoneId.systemDefault()).toLocalDate();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	public static LocalDateTime asLocalDateTime(Date date) &#123;</span><br><span class="line">		return Instant.ofEpochMilli(date.getTime()).atZone(ZoneId.systemDefault()).toLocalDateTime();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">How to use</span><br><span class="line">import java.time.LocalDateTime;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">public class Main </span><br><span class="line">&#123;</span><br><span class="line">	public static void main(String[] args) </span><br><span class="line">	&#123;</span><br><span class="line">		Date date &#x3D; DateUtils.asDate(LocalDateTime.now());</span><br><span class="line"></span><br><span class="line">		System.out.println(date);	&#x2F;&#x2F;Sun Jul 15 12:08:44 IST 2018</span><br><span class="line"></span><br><span class="line">		LocalDateTime today &#x3D; DateUtils.asLocalDateTime(new Date());</span><br><span class="line"></span><br><span class="line">		System.out.println(today);	&#x2F;&#x2F;2018-07-15T12:08:44.492</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="时间格式化SimpleDateFormat"><a href="#时间格式化SimpleDateFormat" class="headerlink" title="时间格式化SimpleDateFormat"></a>时间格式化SimpleDateFormat</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.TimeZone;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentLinkedQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参考tomcat8中的并发DateFormat</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> SimpleDateFormat&#125;的线程安全包装器。</span></span><br><span class="line"><span class="comment"> * 不使用ThreadLocal，创建足够的SimpleDateFormat对象来满足并发性要求。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcurrentDateFormat</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String format;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Locale locale;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> TimeZone timezone;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Queue&lt;SimpleDateFormat&gt; queue = <span class="keyword">new</span> ConcurrentLinkedQueue&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="title">ConcurrentDateFormat</span><span class="params">(String format, Locale locale, TimeZone timezone)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.format = format;</span><br><span class="line">		<span class="keyword">this</span>.locale = locale;</span><br><span class="line">		<span class="keyword">this</span>.timezone = timezone;</span><br><span class="line">		SimpleDateFormat initial = createInstance();</span><br><span class="line">		queue.add(initial);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConcurrentDateFormat <span class="title">of</span><span class="params">(String format)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ConcurrentDateFormat(format, Locale.getDefault(), TimeZone.getDefault());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConcurrentDateFormat <span class="title">of</span><span class="params">(String format, TimeZone timezone)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ConcurrentDateFormat(format, Locale.getDefault(), timezone);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConcurrentDateFormat <span class="title">of</span><span class="params">(String format, Locale locale, TimeZone timezone)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ConcurrentDateFormat(format, locale, timezone);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">format</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">		SimpleDateFormat sdf = queue.poll();</span><br><span class="line">		<span class="keyword">if</span> (sdf == <span class="keyword">null</span>) &#123;</span><br><span class="line">			sdf = createInstance();</span><br><span class="line">		&#125;</span><br><span class="line">		String result = sdf.format(date);</span><br><span class="line">		queue.add(sdf);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Date <span class="title">parse</span><span class="params">(String source)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">		SimpleDateFormat sdf = queue.poll();</span><br><span class="line">		<span class="keyword">if</span> (sdf == <span class="keyword">null</span>) &#123;</span><br><span class="line">			sdf = createInstance();</span><br><span class="line">		&#125;</span><br><span class="line">		Date result = sdf.parse(source);</span><br><span class="line">		queue.add(sdf);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> SimpleDateFormat <span class="title">createInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(format, locale);</span><br><span class="line">		sdf.setTimeZone(timezone);</span><br><span class="line">		<span class="keyword">return</span> sdf;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java8</tag>
      </tags>
  </entry>
  <entry>
    <title>Java8通用Builder</title>
    <url>/2020/03/11/Java8%E9%80%9A%E7%94%A8Builder/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5jaXBoZXJtYWdpYy5jbi9qYXZhOC1idWlsZGVyLmh0bWw=" title="http://www.ciphermagic.cn/java8-builder.html">你还在new对象吗？Java8通用Builder了解一下？<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h2 id="通用Builder类"><a href="#通用Builder类" class="headerlink" title="通用Builder类"></a>通用Builder类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 你还在new对象吗？Java8通用Builder了解一下？</span></span><br><span class="line"><span class="comment"> * http://www.ciphermagic.cn/java8-builder.html （原创）</span></span><br><span class="line"><span class="comment"> * https://blog.csdn.net/zbx931197485/article/details/101439944 （转载）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 通用的 Builder 模式构建器</span></span><br><span class="line"><span class="comment"> * 这个示例最多支持三个参数的设置属性方法，</span></span><br><span class="line"><span class="comment"> * 也完全够用了。如果要扩展也很容易，</span></span><br><span class="line"><span class="comment"> * 依葫芦画瓢，添加多个参数的Consumer。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Supplier&lt;T&gt; instantiator;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Consumer&lt;T&gt;&gt; modifiers = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(Supplier&lt;T&gt; instantiator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.instantiator = instantiator;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Builder&lt;T&gt; <span class="title">of</span><span class="params">(Supplier&lt;T&gt; instantiator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Builder&lt;&gt;(instantiator);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> &lt;P1&gt; <span class="function">Builder&lt;T&gt; <span class="title">with</span><span class="params">(Consumer1&lt;T, P1&gt; consumer, P1 p1)</span> </span>&#123;</span><br><span class="line">        Consumer&lt;T&gt; c = instance -&gt; consumer.accept(instance, p1);</span><br><span class="line">        modifiers.add(c);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> &lt;P1, P2&gt; <span class="function">Builder&lt;T&gt; <span class="title">with</span><span class="params">(Consumer2&lt;T, P1, P2&gt; consumer, P1 p1, P2 p2)</span> </span>&#123;</span><br><span class="line">        Consumer&lt;T&gt; c = instance -&gt; consumer.accept(instance, p1, p2);</span><br><span class="line">        modifiers.add(c);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> &lt;P1, P2, P3&gt; <span class="function">Builder&lt;T&gt; <span class="title">with</span><span class="params">(Consumer3&lt;T, P1, P2, P3&gt; consumer, P1 p1, P2 p2, P3 p3)</span> </span>&#123;</span><br><span class="line">        Consumer&lt;T&gt; c = instance -&gt; consumer.accept(instance, p1, p2, p3);</span><br><span class="line">        modifiers.add(c);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        T value = instantiator.get();</span><br><span class="line">        modifiers.forEach(modifier -&gt; modifier.accept(value));</span><br><span class="line">        modifiers.clear();</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1 参数 Consumer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FunctionalInterface</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Consumer1</span>&lt;<span class="title">T</span>, <span class="title">P1</span>&gt; </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">accept</span><span class="params">(T t, P1 p1)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 2 参数 Consumer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FunctionalInterface</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Consumer2</span>&lt;<span class="title">T</span>, <span class="title">P1</span>, <span class="title">P2</span>&gt; </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">accept</span><span class="params">(T t, P1 p1, P2 p2)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 3 参数 Consumer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FunctionalInterface</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Consumer3</span>&lt;<span class="title">T</span>, <span class="title">P1</span>, <span class="title">P2</span>, <span class="title">P3</span>&gt; </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">accept</span><span class="params">(T t, P1 p1, P2 p2, P3 p3)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>测试实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GirlFriend</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> bust;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> waist;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> hips;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobby;</span><br><span class="line">    <span class="keyword">private</span> String birthday;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String hairColor;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; gift;</span><br><span class="line">    <span class="comment">// 为了演示方便，加几个聚合方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addHobby</span><span class="params">(String hobby)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hobby = Optional.ofNullable(<span class="keyword">this</span>.hobby).orElse(<span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">        <span class="keyword">this</span>.hobby.add(hobby);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addGift</span><span class="params">(String day, String gift)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.gift = Optional.ofNullable(<span class="keyword">this</span>.gift).orElse(<span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">        <span class="keyword">this</span>.gift.put(day, gift);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVitalStatistics</span><span class="params">(<span class="keyword">int</span> bust, <span class="keyword">int</span> waist, <span class="keyword">int</span> hips)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bust = bust;</span><br><span class="line">        <span class="keyword">this</span>.waist = waist;</span><br><span class="line">        <span class="keyword">this</span>.hips = hips;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方法一</span></span><br><span class="line">GirlFriend girlFriend = Builder.of(GirlFriend::<span class="keyword">new</span>)</span><br><span class="line">        .with(GirlFriend::setAddress, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        .with(GirlFriend::setVitalStatistics, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        .with(GirlFriend::addHobby, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        .build();</span><br><span class="line">System.out.println(girlFriend);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法二</span></span><br><span class="line">GirlFriend girlFriend2 = <span class="keyword">new</span> Builder&lt;&gt;(GirlFriend::<span class="keyword">new</span>)</span><br><span class="line">        .with(GirlFriend::setAddress, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        .with(GirlFriend::setVitalStatistics, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        .with(GirlFriend::addHobby, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        .build();</span><br><span class="line">System.out.println(girlFriend2);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java实体映射工具</title>
    <url>/2020/02/16/Java%E5%AE%9E%E4%BD%93%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tL2RyZWFtbHUvbWljYS9taWNhLWJlYW4tY29weQ==" title="https://www.yuque.com/dreamlu/mica/mica-bean-copy">Java Bean Copy 性能大比拼<i class="fa fa-external-link"></i></span></p>
</blockquote>
<a id="more"></a>


<table>
<thead>
<tr>
<th>工具包</th>
<th>需要编写Mapper</th>
<th>支持Map</th>
<th>支持List、Set</th>
<th>类型转换</th>
<th>性能</th>
</tr>
</thead>
<tbody><tr>
<td>Selma</td>
<td>是</td>
<td>否</td>
<td>否</td>
<td>需要手写转换</td>
<td>极高</td>
</tr>
<tr>
<td>MapStruct</td>
<td>是</td>
<td>否</td>
<td>否</td>
<td>支持常用类型和复杂表达式</td>
<td>极高</td>
</tr>
<tr>
<td>BeanUtils（yangtu222）</td>
<td>否</td>
<td>否</td>
<td>是</td>
<td>需要手写转换</td>
<td>极高</td>
</tr>
<tr>
<td>mica</td>
<td>否</td>
<td>是</td>
<td>是</td>
<td>是用 Spring 的类型转换</td>
<td>极高</td>
</tr>
<tr>
<td>Spring</td>
<td>否</td>
<td>否</td>
<td>否</td>
<td>不支持</td>
<td>高</td>
</tr>
<tr>
<td>hutool</td>
<td>否</td>
<td>是</td>
<td>否</td>
<td>不支持</td>
<td>高</td>
</tr>
</tbody></table>
<h2 id="MapStruct"><a href="#MapStruct" class="headerlink" title="MapStruct"></a>MapStruct</h2><ul>
<li><span class="exturl" data-url="aHR0cDovL21hcHN0cnVjdC5vcmcv" title="http://mapstruct.org/">MapStruct (编译期生成 Mapper 实现)<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="Selma"><a href="#Selma" class="headerlink" title="Selma"></a>Selma</h2><ul>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5zZWxtYS1qYXZhLm9yZy8=" title="http://www.selma-java.org/">Selma (编译期生成 Mapper 实现)<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="BeanUtils"><a href="#BeanUtils" class="headerlink" title="BeanUtils"></a>BeanUtils</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lhbmd0dTIyMi9CZWFuVXRpbHM=" title="https://github.com/yangtu222/BeanUtils">yangtu222 - BeanUtils (第一次生成 copy 实现字节码)<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="mica"><a href="#mica" class="headerlink" title="mica"></a>mica</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xldHMtbWljYS9taWNh" title="https://github.com/lets-mica/mica">mica (第一次生成 copy 实现字节码)<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="hutool"><a href="#hutool" class="headerlink" title="hutool"></a>hutool</h2><ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vbG9vbGx5L2h1dG9vbA==" title="https://gitee.com/loolly/hutool">hutool (反射)<i class="fa fa-external-link"></i></span></li>
</ul>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins对nodejs进行自动部署</title>
    <url>/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<blockquote>
<p>确认安装了<code>nodejs</code>,<code>gogs</code>,<code>jenkins</code></p>
</blockquote>
<h2 id="在jenkins中安装插件"><a href="#在jenkins中安装插件" class="headerlink" title="在jenkins中安装插件"></a>在jenkins中安装插件</h2><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-8.png" alt="选择管理插件"></p>
<p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-9.png" alt="可选插件"></p>
<h3 id="安装gogs-nodejs"><a href="#安装gogs-nodejs" class="headerlink" title="安装gogs,nodejs"></a>安装<code>gogs</code>,<code>nodejs</code></h3><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-10.png" alt="插件安装完成"></p>
<h3 id="安装完成之后需要重启生效"><a href="#安装完成之后需要重启生效" class="headerlink" title="安装完成之后需要重启生效"></a>安装完成之后需要重启生效</h3><h2 id="设置nodejs配置"><a href="#设置nodejs配置" class="headerlink" title="设置nodejs配置"></a>设置<code>nodejs</code>配置</h2><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-11.png" alt="配置全局管理"></p>
<h3 id="设置nodejs路径-去掉自动安装的勾"><a href="#设置nodejs路径-去掉自动安装的勾" class="headerlink" title="设置nodejs路径(去掉自动安装的勾)"></a>设置<code>nodejs</code>路径(去掉自动安装的勾)</h3><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-12.png" alt="nodejs配置"></p>
<h2 id="配置jenkins"><a href="#配置jenkins" class="headerlink" title="配置jenkins"></a>配置jenkins</h2><h3 id="创建任务"><a href="#创建任务" class="headerlink" title="创建任务"></a>创建任务</h3><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-13.png" alt="创建任务"></p>
<h3 id="设置任务名称-类型"><a href="#设置任务名称-类型" class="headerlink" title="设置任务名称,类型"></a>设置任务名称,类型</h3><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-14.png" alt="upload successful"></p>
<h3 id="设置General-Gogs-Webhook"><a href="#设置General-Gogs-Webhook" class="headerlink" title="设置General, Gogs Webhook"></a>设置<code>General</code>, <code>Gogs Webhook</code></h3><p>对于只需要部署的项目来说<code>gogs webhhook</code>无需配置<br><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-15.png" alt="upload successful"></p>
<h3 id="设置源码管理"><a href="#设置源码管理" class="headerlink" title="设置源码管理"></a>设置<code>源码管理</code></h3><ol>
<li>添加gogs中项目地址</li>
<li>点击add按钮添加gogs的用户名密码</li>
<li>点击下拉框来选择分支</li>
</ol>
<p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-16.png" alt="upload successful"></p>
<h3 id="无需配置构建触发器"><a href="#无需配置构建触发器" class="headerlink" title="无需配置构建触发器"></a>无需配置<code>构建触发器</code></h3><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-17.png" alt="upload successful"></p>
<h3 id="设置构建环境"><a href="#设置构建环境" class="headerlink" title="设置构建环境"></a>设置构建环境</h3><p>直接选中<code>Provide Node &amp; npm bin/ folder to PATH</code>即可<br><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-18.png" alt="upload successful"></p>
<h3 id="无需配置构建-构建后操作"><a href="#无需配置构建-构建后操作" class="headerlink" title="无需配置构建,构建后操作"></a>无需配置<code>构建</code>,<code>构建后操作</code></h3><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-19.png" alt="upload successful"></p>
<h3 id="保存即可"><a href="#保存即可" class="headerlink" title="保存即可"></a>保存即可</h3><h2 id="设置Webhooks钩子"><a href="#设置Webhooks钩子" class="headerlink" title="设置Webhooks钩子"></a>设置<code>Webhooks</code>钩子</h2><h3 id="选择仓库设置"><a href="#选择仓库设置" class="headerlink" title="选择仓库设置"></a>选择仓库设置</h3><p>登陆gogs项目,选择仓库设置<br><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-20.png" alt="upload successful"></p>
<h3 id="添加web钩子"><a href="#添加web钩子" class="headerlink" title="添加web钩子"></a>添加web钩子</h3><p>选择<code>管理web钩子</code>,<code>添加web钩子</code><br><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-21.png" alt="upload successful"></p>
<h3 id="设置推送地址"><a href="#设置推送地址" class="headerlink" title="设置推送地址"></a>设置推送地址</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http(s):&#x2F;&#x2F;&lt;你的Jenkins地址&gt;&#x2F;gogs-webhook&#x2F;?job&#x3D;&lt;你的Jenkins任务名&gt;</span><br></pre></td></tr></table></figure>
<p>这里配置为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;172.30.4.160:8080&#x2F;gogs-webhook&#x2F;?job&#x3D;WendyUI</span><br></pre></td></tr></table></figure>
<p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-22.png" alt="upload successful"></p>
<h3 id="测试构建-并保存"><a href="#测试构建-并保存" class="headerlink" title="测试构建,并保存"></a>测试构建,并保存</h3><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-23.png" alt="upload successful"></p>
<h2 id="部署项目"><a href="#部署项目" class="headerlink" title="部署项目"></a>部署项目</h2><h3 id="登陆Jenkins进行构建"><a href="#登陆Jenkins进行构建" class="headerlink" title="登陆Jenkins进行构建"></a>登陆Jenkins进行构建</h3><p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-24.png" alt="upload successful"></p>
<h3 id="找到刚才构建的目录"><a href="#找到刚才构建的目录" class="headerlink" title="找到刚才构建的目录"></a>找到刚才构建的目录</h3><p>经过刚残的简单构建之后可以在<code>Jenkins</code>的根目录下找到<code>workspace</code>目录<br><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-25.png" alt="upload successful"></p>
<h3 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h3><p>由于nodejs下载网络等原因需要重复的尝试安装,所以不推荐丢弃旧的环境</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line"><span class="comment">//or # 建议不要用cnpm  安装有各种诡异的bug 可以通过如下操作解决npm速度慢的问题</span></span><br><span class="line">npm install --registry=https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure>
<p><img src="/2018/05/16/Jenkins%E5%AF%B9nodejs%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/image-26.png" alt="upload successful"></p>
<h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>jenkins</tag>
        <tag>gogs</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2020/11/04/Linux-%E6%9C%80%E5%B0%8F%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h2><h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3hobGludXgvcC82MTIwMjE2Lmh0bWw=" title="https://www.cnblogs.com/sxhlinux/p/6120216.html">https://www.cnblogs.com/sxhlinux/p/6120216.html<i class="fa fa-external-link"></i></span></p>
<a id="more"></a>
<h3 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h3><p>查看网卡</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cd &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;</span><br><span class="line">[root@localhost network-scripts]# ls</span><br><span class="line">ifcfg-ens33  ifdown-eth   ifdown-post    ifdown-Team      ifup-aliases  ifup-ipv6   ifup-post    ifup-Team      init.ipv6-global</span><br><span class="line">ifcfg-lo     ifdown-ippp  ifdown-ppp     ifdown-TeamPort  ifup-bnep     ifup-isdn   ifup-ppp     ifup-TeamPort  network-functions</span><br><span class="line">ifdown       ifdown-ipv6  ifdown-routes  ifdown-tunnel    ifup-eth      ifup-plip   ifup-routes  ifup-tunnel    network-functions-ipv6</span><br><span class="line">ifdown-bnep  ifdown-isdn  ifdown-sit     ifup             ifup-ippp     ifup-plusb  ifup-sit     ifup-wireless</span><br><span class="line">[root@localhost network-scripts]# </span><br></pre></td></tr></table></figure>
<p>编辑网卡</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# vi ifcfg-ens33</span><br><span class="line"></span><br><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">BOOTPROTO&#x3D;static</span><br><span class="line">DEFROUTE&#x3D;yes</span><br><span class="line">NAME&#x3D;ens33</span><br><span class="line">DEVICE&#x3D;ens33</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">IPADDR&#x3D;192.168.163.10</span><br><span class="line">NETMASK&#x3D;255.255.255.0</span><br><span class="line">GATEWAY&#x3D;192.168.163.2</span><br><span class="line">DNS1&#x3D;119.29.29.29</span><br></pre></td></tr></table></figure>
<p>重启网卡并查看效果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# systemctl restart network</span><br><span class="line">[root@localhost network-scripts]# curl www.baidu.com</span><br></pre></td></tr></table></figure>

<h3 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# mv &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo.backup</span><br><span class="line">[root@localhost network-scripts]# curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">[root@localhost network-scripts]# yum makecache</span><br><span class="line">[root@localhost network-scripts]# yum -y install wget</span><br><span class="line">[root@localhost network-scripts]# yum -y install vim</span><br><span class="line">[root@localhost network-scripts]# yum -y install iptables-services</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="selinux"><a href="#selinux" class="headerlink" title="selinux"></a>selinux</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# vim &#x2F;etc&#x2F;selinux&#x2F;config </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># This file controls the state of SELinux on the system.</span><br><span class="line"># SELINUX&#x3D; can take one of these three values:</span><br><span class="line">#     enforcing - SELinux security policy is enforced.</span><br><span class="line">#     permissive - SELinux prints warnings instead of enforcing.</span><br><span class="line">#     disabled - No SELinux policy is loaded.</span><br><span class="line">SELINUX&#x3D;disabled</span><br><span class="line"># SELINUXTYPE&#x3D; can take one of three values:</span><br><span class="line">#     targeted - Targeted processes are protected,</span><br><span class="line">#     minimum - Modification of targeted policy. Only selected processes are protected. </span><br><span class="line">#     mls - Multi Level Security protection.</span><br><span class="line">SELINUXTYPE&#x3D;targeted</span><br></pre></td></tr></table></figure>
<h3 id="iptable"><a href="#iptable" class="headerlink" title="iptable"></a>iptable</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# iptables -F</span><br><span class="line">[root@localhost network-scripts]# service iptables save</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title>Linux免密钥登陆</title>
    <url>/2018/01/04/Linux%E5%85%8D%E5%AF%86%E9%92%A5%E7%99%BB%E9%99%86/</url>
    <content><![CDATA[<blockquote>
<p>核心思路： 利用<code>ssh-keygen -t rsa</code>在每台机器上产生密钥,然后把所有密钥都集中在<code>authorized_keys</code>中 把这个文件拷贝到所有的机器上</p>
</blockquote>
<h2 id="每台机器都生成公共密钥"><a href="#每台机器都生成公共密钥" class="headerlink" title="每台机器都生成公共密钥"></a>每台机器都生成公共密钥</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop .ssh]<span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line">[root@guyu-hadoop opt]<span class="comment"># cd ~/.ssh</span></span><br><span class="line">[root@guyu-hadoop2 .ssh]<span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line">[root@guyu-hadoop2 opt]<span class="comment"># cd ~/.ssh</span></span><br></pre></td></tr></table></figure>

<p>执行这步操作会在<code>~\.ssh</code>下生成密钥</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop app]<span class="comment"># ll</span></span><br><span class="line">-rw-------. 1 root root 1671 Dec 10 03:34 id_rsa</span><br><span class="line">-rw-r--r--. 1 root root  398 Dec 10 03:34 id_rsa.pub   <span class="comment">#只需要关心这个</span></span><br><span class="line">-rw-r--r--. 1 root root  400 Dec 10 03:24 known_hosts</span><br></pre></td></tr></table></figure>

<h2 id="记录公共密钥"><a href="#记录公共密钥" class="headerlink" title="记录公共密钥"></a>记录公共密钥</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop .ssh]<span class="comment"># cd ~/.ssh</span></span><br><span class="line">[root@guyu-hadoop .ssh]<span class="comment"># cat id_rsa.pub &gt;&gt; authorized_keys</span></span><br><span class="line">[root@guyu-hadoop .ssh]<span class="comment"># chmod 600 authorized_keys </span></span><br></pre></td></tr></table></figure>

<h2 id="拷贝到其他机器-重复这步操作"><a href="#拷贝到其他机器-重复这步操作" class="headerlink" title="拷贝到其他机器 重复这步操作"></a>拷贝到其他机器 重复这步操作</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop .ssh]<span class="comment"># scp authorized_keys root@h2:~/.ssh</span></span><br></pre></td></tr></table></figure>

<h2 id="其他机器都把这个密钥存入这个文件"><a href="#其他机器都把这个密钥存入这个文件" class="headerlink" title="其他机器都把这个密钥存入这个文件"></a>其他机器都把这个密钥存入这个文件</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop2 .ssh]<span class="comment"># cat id_rsa.pub &gt;&gt; authorized_keys</span></span><br></pre></td></tr></table></figure>

<h2 id="把存着所有密码的文件分发到每台机器上"><a href="#把存着所有密码的文件分发到每台机器上" class="headerlink" title="把存着所有密码的文件分发到每台机器上"></a>把存着所有密码的文件分发到每台机器上</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop2 .ssh]<span class="comment"># scp authorized_keys root@h1:~/.ssh</span></span><br></pre></td></tr></table></figure>


<h2 id="此时他们就可以免密钥登陆啦"><a href="#此时他们就可以免密钥登陆啦" class="headerlink" title="此时他们就可以免密钥登陆啦"></a>此时他们就可以免密钥登陆啦</h2><h2 id="最后总结："><a href="#最后总结：" class="headerlink" title="最后总结："></a>最后总结：</h2><p>  其中只要ssh有密钥大集合<code>authorized_keys</code>的机器是不需要密码</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装java</title>
    <url>/2018/01/04/Linux%E5%AE%89%E8%A3%85java/</url>
    <content><![CDATA[<h2 id="去java官网下载JDK-并上传到-opt-data-jdk-8u151-linux-x64-tar-gz"><a href="#去java官网下载JDK-并上传到-opt-data-jdk-8u151-linux-x64-tar-gz" class="headerlink" title="去java官网下载JDK 并上传到/opt/data/jdk-8u151-linux-x64.tar.gz"></a>去java官网下载JDK 并上传到<code>/opt/data/jdk-8u151-linux-x64.tar.gz</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app</span><br><span class="line">tar -zxvf /opt/data/jdk-8u151-linux-x64.tar.gz -C /opt/app</span><br></pre></td></tr></table></figure>

<h2 id="修改profile"><a href="#修改profile" class="headerlink" title="修改profile"></a>修改profile</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/jdk1.8.0_151</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h2 id="刷新配置并验证"><a href="#刷新配置并验证" class="headerlink" title="刷新配置并验证"></a>刷新配置并验证</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装ruby</title>
    <url>/2018/01/15/Linux%E5%AE%89%E8%A3%85ruby/</url>
    <content><![CDATA[<h2 id="前往ruby国内镜像下载ruby，并上传到linux"><a href="#前往ruby国内镜像下载ruby，并上传到linux" class="headerlink" title="前往ruby国内镜像下载ruby，并上传到linux"></a>前往ruby国内镜像下载ruby，并上传到linux</h2><p><span class="exturl" data-url="aHR0cHM6Ly9ydWJ5LnRhb2Jhby5vcmcv" title="https://ruby.taobao.org/">https://ruby.taobao.org/<i class="fa fa-external-link"></i></span></p>
<h2 id="解压ruby"><a href="#解压ruby" class="headerlink" title="解压ruby"></a>解压ruby</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop ~]# tar -zxvf &#x2F;opt&#x2F;data&#x2F;ruby-2.3.0.tar.gz -C &#x2F;opt&#x2F;app</span><br></pre></td></tr></table></figure>

<h2 id="设置软连接-并进入"><a href="#设置软连接-并进入" class="headerlink" title="设置软连接,并进入"></a>设置软连接,并进入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop app]# cd &#x2F;opt&#x2F;app</span><br><span class="line">[root@guyu-hadoop app]# ln -s ruby-2.3.0&#x2F; ruby</span><br><span class="line">[root@guyu-hadoop app]# cd ruby</span><br></pre></td></tr></table></figure>

<h2 id="安装ruby-并查看版本号"><a href="#安装ruby-并查看版本号" class="headerlink" title="安装ruby,并查看版本号"></a>安装ruby,并查看版本号</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop ruby]# .&#x2F;configure</span><br><span class="line">[root@guyu-hadoop ruby]# make</span><br><span class="line">[root@guyu-hadoop ruby]# make install</span><br><span class="line">[root@guyu-hadoop ruby]# ruby -v</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux挂载本地实体光盘</title>
    <url>/2018/01/04/Linux%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0%E5%AE%9E%E4%BD%93%E5%85%89%E7%9B%98/</url>
    <content><![CDATA[<h2 id="查看光盘位置"><a href="#查看光盘位置" class="headerlink" title="查看光盘位置"></a>查看光盘位置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost Desktop]# ls -l &#x2F;dev | grep cdrom</span><br><span class="line">lrwxrwxrwx.  1 root root           3 Nov  9 18:03 cdrom -&gt; sr0</span><br><span class="line">crw-rw----+  1 root cdrom    21,   1 Nov  9 18:03 sg1</span><br><span class="line">brw-rw----+  1 root cdrom    11,   0 Nov  9 18:03 sr0</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="开始挂载光盘"><a href="#开始挂载光盘" class="headerlink" title="开始挂载光盘"></a>开始挂载光盘</h2><p>从上面的操作可以看到<code>cdrom</code>是光盘的名字<br>执行挂载光盘命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;mnt&#x2F;centos7</span><br><span class="line">mount &#x2F;dev&#x2F;cdrom &#x2F;mnt&#x2F;centos7</span><br></pre></td></tr></table></figure>

<h2 id="复制光盘文件"><a href="#复制光盘文件" class="headerlink" title="复制光盘文件"></a>复制光盘文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p &#x2F;opt&#x2F;iso&#x2F;centos7</span><br><span class="line">cp -r &#x2F;mnt&#x2F;centos7&#x2F;* &#x2F;opt&#x2F;iso&#x2F;centos7</span><br></pre></td></tr></table></figure>
<p>可以使用以下命令查看文件夹内文件总数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -l|grep &quot;^-&quot;|wc -l</span><br></pre></td></tr></table></figure>

<h2 id="对比是否复制完成"><a href="#对比是否复制完成" class="headerlink" title="对比是否复制完成"></a>对比是否复制完成</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">du -h &#x2F;opt&#x2F;iso&#x2F;</span><br><span class="line">du -h &#x2F;mnt&#x2F;iso&#x2F;</span><br></pre></td></tr></table></figure>

<h2 id="卸载光盘"><a href="#卸载光盘" class="headerlink" title="卸载光盘"></a>卸载光盘</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">umount &#x2F;mnt&#x2F;centos7</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux搭建docker私有仓库与使用</title>
    <url>/2018/01/04/Linux%E6%90%AD%E5%BB%BAdocker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2FuZ3Rhb2tpbmcxL2FydGljbGUvZGV0YWlscy80NDE4MDkwMQ==" title="http://blog.csdn.net/wangtaoking1/article/details/44180901">http://blog.csdn.net/wangtaoking1/article/details/44180901<i class="fa fa-external-link"></i></span></p>
</blockquote>
<ol>
<li><p>利用docker的特性直接可以把包含仓库的容器下载下来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull registry:2</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动这个容器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d --name registry -p 5000:5000 -v &#x2F;opt&#x2F;data&#x2F;registry:&#x2F;tmp&#x2F;registry registry:2</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改标签,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull jetty:9</span><br><span class="line">docker tag jetty:9 192.168.163.128:5000&#x2F;jetty:9</span><br></pre></td></tr></table></figure>
</li>
<li><p>增加本地IP支持</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;docker&#x2F;daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;oszn787o.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;insecure-registries&quot;:[&quot;192.168.163.128:5000&quot;, &quot;127.0.0.1:5000&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
</ol>
<ol start="5">
<li><p>重启docker <em>不要加http或是https</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line">docker start registry</span><br></pre></td></tr></table></figure>
</li>
<li><p>上传镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker push 192.168.163.128:5000&#x2F;jetty:9</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>MAVEN设置UTF-8</title>
    <url>/2019/04/05/MAVEN%E8%AE%BE%E7%BD%AEUTF-8/</url>
    <content><![CDATA[<ol>
<li><p>修改环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">变量名 MAVEN_OPTS </span><br><span class="line">变量值 -Xms256m -Xmx512m -Dfile.encoding&#x3D;UTF-8 </span><br></pre></td></tr></table></figure>
</li>
<li><p>增加pom.xml配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>MYSQL数据类型JAVA类型对照</title>
    <url>/2020/02/23/MYSQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJAVA%E7%B1%BB%E5%9E%8B%E5%AF%B9%E7%85%A7/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th><strong>MySQL Type Name</strong></th>
<th><strong>Return value of<code>GetColumnClassName</code></strong></th>
<th><strong>Returned as Java Class</strong></th>
</tr>
</thead>
<tbody><tr>
<td>BIT(1) (new in MySQL-5.0)</td>
<td>BIT</td>
<td><code>java.lang.Boolean</code></td>
</tr>
<tr>
<td>BIT( &gt; 1) (new in MySQL-5.0)</td>
<td>BIT</td>
<td><code>byte[]</code></td>
</tr>
<tr>
<td>TINYINT</td>
<td>TINYINT</td>
<td><code>java.lang.Boolean</code> if the configuration property <code>tinyInt1isBit</code> is set to <code>true</code>(the default) and the storage size is 1, or<code>java.lang.Integer</code> if not.</td>
</tr>
<tr>
<td>BOOL, BOOLEAN</td>
<td>TINYINT</td>
<td>See TINYINT, above as these are aliases forTINYINT(1), currently.</td>
</tr>
<tr>
<td>SMALLINT[(M)] [UNSIGNED]</td>
<td>SMALLINT [UNSIGNED]</td>
<td><code>java.lang.Integer</code> (regardless if UNSIGNED or not)</td>
</tr>
<tr>
<td>MEDIUMINT[(M)] [UNSIGNED]</td>
<td>MEDIUMINT [UNSIGNED]</td>
<td><code>java.lang.Integer,</code> if UNSIGNED<code>java.lang.Long</code></td>
</tr>
<tr>
<td>INT,INTEGER[(M)] [UNSIGNED]</td>
<td>INTEGER [UNSIGNED]</td>
<td><code>java.lang.Integer</code>, if UNSIGNED<code>java.lang.Long</code></td>
</tr>
<tr>
<td>BIGINT[(M)] [UNSIGNED]</td>
<td>BIGINT [UNSIGNED]</td>
<td><code>java.lang.Long</code>, if UNSIGNED<code>java.math.BigInteger</code></td>
</tr>
<tr>
<td>FLOAT[(M,D)]</td>
<td>FLOAT</td>
<td><code>java.lang.Float</code></td>
</tr>
<tr>
<td>DOUBLE[(M,B)]</td>
<td>DOUBLE</td>
<td><code>java.lang.Double</code></td>
</tr>
<tr>
<td>DECIMAL[(M[,D])]</td>
<td>DECIMAL</td>
<td><code>java.math.BigDecimal</code></td>
</tr>
<tr>
<td>DATE</td>
<td>DATE</td>
<td><code>java.sql.Date</code></td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td><code>java.sql.Timestamp</code></td>
</tr>
<tr>
<td>TIMESTAMP[(M)]</td>
<td>TIMESTAMP</td>
<td><code>java.sql.Timestamp</code></td>
</tr>
<tr>
<td>TIME</td>
<td>TIME</td>
<td><code>java.sql.Time</code></td>
</tr>
<tr>
<td>YEAR[(2|4)]</td>
<td>YEAR</td>
<td>If <code>yearIsDateType</code> configuration property is set to false, then the returned object type is<code>java.sql.Short</code>. If set to true (the default) then an object of type <code>java.sql.Date</code> (with the date set to January 1st, at midnight).</td>
</tr>
<tr>
<td>CHAR(M)</td>
<td>CHAR</td>
<td><code>java.lang.String</code> (unless the character set for the column is BINARY, then <code>byte[]</code>is returned.</td>
</tr>
<tr>
<td>VARCHAR(M) [BINARY]</td>
<td>VARCHAR</td>
<td><code>java.lang.String</code> (unless the character set for the column is BINARY, then <code>byte[]</code>is returned.</td>
</tr>
<tr>
<td>BINARY(M)</td>
<td>BINARY</td>
<td><code>byte[]</code></td>
</tr>
<tr>
<td>VARBINARY(M)</td>
<td>VARBINARY</td>
<td><code>byte[]</code></td>
</tr>
<tr>
<td>TINYBLOB</td>
<td>TINYBLOB</td>
<td><code>byte[]</code></td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>VARCHAR</td>
<td><code>java.lang.String</code></td>
</tr>
<tr>
<td>BLOB</td>
<td>BLOB</td>
<td><code>byte[]</code></td>
</tr>
<tr>
<td>TEXT</td>
<td>VARCHAR</td>
<td><code>java.lang.String</code></td>
</tr>
<tr>
<td>MEDIUMBLOB</td>
<td>MEDIUMBLOB</td>
<td><code>byte[]</code></td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>VARCHAR</td>
<td><code>java.lang.String</code></td>
</tr>
<tr>
<td>LONGBLOB</td>
<td>LONGBLOB</td>
<td><code>byte[]</code></td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>VARCHAR</td>
<td><code>java.lang.String</code></td>
</tr>
<tr>
<td>ENUM(‘value1’,’value2’,…)</td>
<td>CHAR</td>
<td><code>java.lang.String</code></td>
</tr>
<tr>
<td>SET(‘value1’,’value2’,…)</td>
<td>CHAR</td>
<td><code>java.lang.String</code></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>NODEJS项目更新重新构建</title>
    <url>/2020/02/04/NODEJS%E9%A1%B9%E7%9B%AE%E6%9B%B4%E6%96%B0%E9%87%8D%E6%96%B0%E6%9E%84%E5%BB%BA/</url>
    <content><![CDATA[<blockquote>
</blockquote>
<h2 id="更新项目插件"><a href="#更新项目插件" class="headerlink" title="更新项目插件"></a>更新项目插件</h2><h3 id="安装-npm-check-updates："><a href="#安装-npm-check-updates：" class="headerlink" title="安装 npm-check-updates："></a>安装 <code>npm-check-updates</code>：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install -g npm-check-updates</span><br></pre></td></tr></table></figure>
<h3 id="检查package-json中dependencies的最新版本："><a href="#检查package-json中dependencies的最新版本：" class="headerlink" title="检查package.json中dependencies的最新版本："></a>检查<code>package.json</code>中<code>dependencies</code>的最新版本：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ncu</span><br></pre></td></tr></table></figure>
<h3 id="更新dependencies到新版本："><a href="#更新dependencies到新版本：" class="headerlink" title="更新dependencies到新版本："></a>更新<code>dependencies</code>到新版本：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ncu -u</span><br></pre></td></tr></table></figure>
<h3 id="安装更新"><a href="#安装更新" class="headerlink" title="安装更新"></a>安装更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install</span><br></pre></td></tr></table></figure>

<h2 id="重新安装package-json"><a href="#重新安装package-json" class="headerlink" title="重新安装package.json"></a>重新安装package.json</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm -rf node_modules  </span><br><span class="line">rm package-lock.json  </span><br><span class="line">npm cache clear --force  </span><br><span class="line">npm install  </span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>POSTGRES数据类型JAVA类型对照</title>
    <url>/2020/02/23/POSTGRES%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8BJAVA%E7%B1%BB%E5%9E%8B%E5%AF%B9%E7%85%A7/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="left">编号</th>
<th align="left">数据库类型</th>
<th align="left">JDBC类型</th>
<th align="left">JDBC索引</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left"><code>varchar</code></td>
<td align="left"><code>java.lang.String</code></td>
<td align="left">12</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">2</td>
<td align="left"><code>bpchar</code></td>
<td align="left"><code>java.lang.String</code></td>
<td align="left">1</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">3</td>
<td align="left"><code>cidr</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">4</td>
<td align="left"><code>inet</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">5</td>
<td align="left"><code>macaddr</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">6</td>
<td align="left"><code>text</code></td>
<td align="left"><code>java.lang.String</code></td>
<td align="left">12</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">7</td>
<td align="left"><code>int8</code></td>
<td align="left"><code>java.lang.Long</code></td>
<td align="left">-5</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">8</td>
<td align="left"><code>int8</code></td>
<td align="left"><code>java.lang.Long</code></td>
<td align="left">-5</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">9</td>
<td align="left"><code>box</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">10</td>
<td align="left"><code>circle</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">11</td>
<td align="left"><code>float8</code></td>
<td align="left"><code>java.lang.Double</code></td>
<td align="left">8</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">12</td>
<td align="left"><code>int4</code></td>
<td align="left"><code>java.lang.Integer</code></td>
<td align="left">4</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">13</td>
<td align="left"><code>interval</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">14</td>
<td align="left"><code>line</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">15</td>
<td align="left"><code>lseg</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">16</td>
<td align="left"><code>money</code></td>
<td align="left"><code>java.lang.Double</code></td>
<td align="left">8</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">17</td>
<td align="left"><code>numeric</code></td>
<td align="left"><code>java.math.BigDecimal</code></td>
<td align="left">2</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">18</td>
<td align="left"><code>path</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">19</td>
<td align="left"><code>point</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">20</td>
<td align="left"><code>polygon</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">21</td>
<td align="left"><code>float4</code></td>
<td align="left"><code>java.lang.Float</code></td>
<td align="left">7</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">22</td>
<td align="left"><code>int2</code></td>
<td align="left"><code>java.lang.Integer</code></td>
<td align="left">5</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">23</td>
<td align="left"><code>int4</code></td>
<td align="left"><code>java.lang.Integer</code></td>
<td align="left">4</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">24</td>
<td align="left"><code>time</code></td>
<td align="left"><code>java.sql.Time</code></td>
<td align="left">92</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">25</td>
<td align="left"><code>timestamp</code></td>
<td align="left"><code>java.sql.Timestamp</code></td>
<td align="left">93</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">26</td>
<td align="left"><code>bit</code></td>
<td align="left"><code>java.lang.Boolean</code></td>
<td align="left">-7</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">27</td>
<td align="left"><code>varbit</code></td>
<td align="left"><code>java.lang.Object</code></td>
<td align="left">1,111</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">28</td>
<td align="left"><code>bool</code></td>
<td align="left"><code>java.lang.Boolean</code></td>
<td align="left">-7</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">29</td>
<td align="left"><code>bytea</code></td>
<td align="left"><code>byte</code></td>
<td align="left">-2</td>
<td align="left"></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>postgres</tag>
      </tags>
  </entry>
  <entry>
    <title>RocketMQ学习2-1-概述</title>
    <url>/2018/02/04/RocketMQ%E5%AD%A6%E4%B9%A02-1-%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<blockquote>
<h3 id="参考文档-官网-源码"><a href="#参考文档-官网-源码" class="headerlink" title="参考文档(官网,源码)"></a>参考文档(官网,源码)</h3><p>官网:    <span class="exturl" data-url="aHR0cDovL3JvY2tldG1xLmFwYWNoZS5vcmcv" title="http://rocketmq.apache.org/">http://rocketmq.apache.org/<i class="fa fa-external-link"></i></span><br>Github:    <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9yb2NrZXRtcS8=" title="https://github.com/apache/rocketmq/">https://github.com/apache/rocketmq/<i class="fa fa-external-link"></i></span><br>Alibaba:   <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvcm9ja2V0bXE=" title="https://github.com/alibaba/rocketmq">https://github.com/alibaba/rocketmq<i class="fa fa-external-link"></i></span>(不再更新)</p>
</blockquote>
<blockquote>
<h3 id="参考文档-阿里文档"><a href="#参考文档-阿里文档" class="headerlink" title="参考文档(阿里文档)"></a>参考文档(阿里文档)</h3><h4 id="RocketMQ-用户指南"><a href="#RocketMQ-用户指南" class="headerlink" title="RocketMQ 用户指南 :"></a>RocketMQ 用户指南 :</h4><p>本地: <a href="RocketMQ%E5%AD%A6%E4%B9%A02-1-%E6%A6%82%E8%BF%B0/RocketMQ_design.pdf">RocketMQ_design.pdf</a><br>在线: <span class="exturl" data-url="aHR0cDovL2dkLXJ1cy1wdWJsaWMuY24taGFuZ3pob3Uub3NzLXB1Yi5hbGl5dW4taW5jLmNvbS9hdHRhY2htZW50LzIwMTYwNC8wOC8yMDE2MDQwODE2NDcyNi9Sb2NrZXRNUV91c2VyZ3VpZGUucGRm" title="http://gd-rus-public.cn-hangzhou.oss-pub.aliyun-inc.com/attachment/201604/08/20160408164726/RocketMQ_userguide.pdf">http://gd-rus-public.cn-hangzhou.oss-pub.aliyun-inc.com/attachment/201604/08/20160408164726/RocketMQ_userguide.pdf<i class="fa fa-external-link"></i></span></p>
<h4 id="RocketMQ-最佳实践"><a href="#RocketMQ-最佳实践" class="headerlink" title="RocketMQ 最佳实践 :"></a>RocketMQ 最佳实践 :</h4><p>本地: <a href="RocketMQ%E5%AD%A6%E4%B9%A02-1-%E6%A6%82%E8%BF%B0/RocketMQ_experience.pdf">RocketMQ_experience.pdf</a><br>在线: <span class="exturl" data-url="aHR0cDovL2dkLXJ1cy1wdWJsaWMuY24taGFuZ3pob3Uub3NzLXB1Yi5hbGl5dW4taW5jLmNvbS9hdHRhY2htZW50LzIwMTYwNC8wOC8yMDE2MDQwODE2NDkyOS9Sb2NrZXRNUV9leHBlcmllbmNlLnBkZg==" title="http://gd-rus-public.cn-hangzhou.oss-pub.aliyun-inc.com/attachment/201604/08/20160408164929/RocketMQ_experience.pdf">http://gd-rus-public.cn-hangzhou.oss-pub.aliyun-inc.com/attachment/201604/08/20160408164929/RocketMQ_experience.pdf<i class="fa fa-external-link"></i></span>   </p>
<h4 id="RocketMQ-原理简介"><a href="#RocketMQ-原理简介" class="headerlink" title="RocketMQ 原理简介 :"></a>RocketMQ 原理简介 :</h4><p>本地: <a href="RocketMQ%E5%AD%A6%E4%B9%A02-1-%E6%A6%82%E8%BF%B0/RocketMQ_design.pdf">RocketMQ_design.pdf</a><br>在线: <span class="exturl" data-url="aHR0cDovL2dkLXJ1cy1wdWJsaWMuY24taGFuZ3pob3Uub3NzLXB1Yi5hbGl5dW4taW5jLmNvbS9hdHRhY2htZW50LzIwMTYwNC8wOC8yMDE2MDQwODE2NTAyNC9Sb2NrZXRNUV9kZXNpZ24ucGRm" title="http://gd-rus-public.cn-hangzhou.oss-pub.aliyun-inc.com/attachment/201604/08/20160408165024/RocketMQ_design.pdf">http://gd-rus-public.cn-hangzhou.oss-pub.aliyun-inc.com/attachment/201604/08/20160408165024/RocketMQ_design.pdf<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p>消息队列中最最重要的作用就是<br>异步,解耦</p>
<p>RocketMQ 是一款<code>高可靠</code>的消息队列,对比ActiveM,Kafka都要好</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>rocketmq</tag>
        <tag>T</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL删除重复数据</title>
    <url>/2020/03/06/SQL%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h2 id="postgresql"><a href="#postgresql" class="headerlink" title="postgresql"></a>postgresql</h2><h3 id="创建测试数据"><a href="#创建测试数据" class="headerlink" title="创建测试数据"></a>创建测试数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span>(<span class="keyword">id</span> <span class="built_in">int</span>,<span class="keyword">name</span> <span class="built_in">varchar</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;kenyon&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;kenyon&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;kenyon&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;kenyon_test&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;kenyon_test&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span> (<span class="number">3</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span> (<span class="number">5</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> <span class="keyword">values</span> (<span class="number">5</span>,<span class="string">&#x27;jackson&#x27;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres=<span class="comment"># select ctid,* from test;</span></span><br><span class="line"> ctid  | id |    name     </span><br><span class="line"><span class="comment">-------+----+-------------</span></span><br><span class="line"> (0,1) |  1 | kenyon</span><br><span class="line"> (0,2) |  1 | kenyon</span><br><span class="line"> (0,3) |  1 | kenyon</span><br><span class="line"> (0,4) |  2 | kenyon_test</span><br><span class="line"> (0,5) |  2 | kenyon_test</span><br><span class="line"> (0,6) |  3 | test</span><br><span class="line"> (0,7) |  5 | test</span><br><span class="line"> (0,8) |  5 | jackson</span><br><span class="line"> (8 rows)</span><br></pre></td></tr></table></figure>

<h3 id="查询要保留的数据-以min-ctid-或max-ctid-为准"><a href="#查询要保留的数据-以min-ctid-或max-ctid-为准" class="headerlink" title="查询要保留的数据,以min(ctid)或max(ctid)为准"></a>查询要保留的数据,以min(ctid)或max(ctid)为准</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres=<span class="comment"># select ctid,* from test where ctid in (select min(ctid) from test group by id);</span></span><br><span class="line"> ctid  | id |    name     </span><br><span class="line"><span class="comment">-------+----+-------------</span></span><br><span class="line"> (0,1) |  1 | kenyon</span><br><span class="line"> (0,4) |  2 | kenyon_test</span><br><span class="line"> (0,6) |  3 | test</span><br><span class="line"> (0,7) |  5 | test</span><br><span class="line">(4 rows)</span><br></pre></td></tr></table></figure>

<h3 id="删除重复数据-查看最后结果"><a href="#删除重复数据-查看最后结果" class="headerlink" title="删除重复数据,查看最后结果"></a>删除重复数据,查看最后结果</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres=<span class="comment"># delete from test where ctid not in (select min(ctid) from test group by id);</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="number">4</span></span><br><span class="line">postgres=<span class="comment"># select ctid,* from test;</span></span><br><span class="line"> ctid  | <span class="keyword">id</span> |    <span class="keyword">name</span>     </span><br><span class="line"><span class="comment">-------+----+-------------</span></span><br><span class="line"> (<span class="number">0</span>,<span class="number">1</span>) |  <span class="number">1</span> | kenyon</span><br><span class="line"> (<span class="number">0</span>,<span class="number">4</span>) |  <span class="number">2</span> | kenyon_test</span><br><span class="line"> (<span class="number">0</span>,<span class="number">6</span>) |  <span class="number">3</span> | <span class="keyword">test</span></span><br><span class="line"> (<span class="number">0</span>,<span class="number">7</span>) |  <span class="number">5</span> | <span class="keyword">test</span></span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>SimpleDateFormat线程不安全</title>
    <url>/2020/02/24/SimpleDateFormat%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8/</url>
    <content><![CDATA[<h2 id="线程不安全现象"><a href="#线程不安全现象" class="headerlink" title="线程不安全现象"></a>线程不安全现象</h2><p>不可以在并发的情况下 反复的用同一个<code>SimpleDateFormat</code>实例处理不同的日期</p>
<p><img src="/2020/02/24/SimpleDateFormat%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8/image-20200224230446276.png" alt="image-20200224230446276"></p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itstyle.seckill;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testParse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">        List&lt;String&gt; dateStrList = Lists.newArrayList(</span><br><span class="line">                <span class="string">&quot;2018-04-01 10:00:01&quot;</span>,</span><br><span class="line">                <span class="string">&quot;2018-04-02 11:00:02&quot;</span>,</span><br><span class="line">                <span class="string">&quot;2018-04-03 12:00:03&quot;</span>,</span><br><span class="line">                <span class="string">&quot;2018-04-04 13:00:04&quot;</span>,</span><br><span class="line">                <span class="string">&quot;2018-04-05 14:00:05&quot;</span></span><br><span class="line">        );</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String str : dateStrList) &#123;</span><br><span class="line">            executorService.execute(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 在多线程中反复用同一个对象进行解析日期</span></span><br><span class="line">                    simpleDateFormat.parse(str);</span><br><span class="line">                    TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p><code>SimpleDateFormat</code>(下面简称<code>sdf</code>)类内部有一个<code>Calendar</code>对象引用,它用来储存和这个<code>sdf</code>相关的日期信息,例如<code>sdf.parse(dateStr)</code>, <code>sdf.format(date)</code>诸如此类的方法参数传入的日期相关<code>String</code>, <code>Date</code>等等, 都是交友<code>Calendar</code>引用来储存的.这样就会导致一个问题,如果你的<code>sdf</code>是个<code>static</code>的, 那么多个<code>thread</code>之间就会共享这个<code>sdf</code>, 同时也是共享这个<code>Calendar</code>引用, 并且, 观察<code>sdf.parse()</code>方法,你会发现有如下的调用:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">Date <span class="title">parse</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  calendar.clear(); <span class="comment">// 清理calendar</span></span><br><span class="line"></span><br><span class="line">  ... <span class="comment">// 执行一些操作, 设置 calendar 的日期什么的</span></span><br><span class="line"></span><br><span class="line">  calendar.getTime(); <span class="comment">// 获取calendar的时间</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里会导致的问题就是, 如果 线程<code>A</code> 调用了<code> sdf.parse()</code>, 并且进行了<code>calendar.clear()</code>后还未执行<code>calendar.getTime()</code>的时候,线程B又调用了<code>sdf.parse()</code>, 这时候线程B也执行了<code>sdf.clear()</code>方法, 这样就导致线程<code>A</code>的的<code>calendar</code>数据被清空了(实际上<code>A</code>,<code>B</code>的同时被清空了). 又或者当<code>A</code>执行了<code>calendar.clear()</code>后被挂起, 这时候<code>B</code>开始调用<code>sdf.parse()</code>并顺利i结束, 这样<code>A</code>的<code>calendar</code>内存储的的<code>date</code>变成了后来<code>B</code>设置的<code>calendar</code>的<code>date</code></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p><img src="/2020/02/24/SimpleDateFormat%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8/image-20200224230523667.png" alt="image-20200224230523667"></p>
<h3 id="使用第三方的日期处理函数："><a href="#使用第三方的日期处理函数：" class="headerlink" title="使用第三方的日期处理函数："></a>使用第三方的日期处理函数：</h3><p>比如 <code>JODA</code> 来避免这些问题，你也可以使用 <code>commons-lang</code> 包中的 <code>FastDateFormat</code> 工具类。</p>
<h3 id="使用局部变量"><a href="#使用局部变量" class="headerlink" title="使用局部变量"></a>使用局部变量</h3><p>每次使用都new一个</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itstyle.seckill;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testParse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">        List&lt;String&gt; dateStrList = Lists.newArrayList(</span><br><span class="line">                <span class="string">&quot;2018-04-01 10:00:01&quot;</span>,</span><br><span class="line">                <span class="string">&quot;2018-04-02 11:00:02&quot;</span>,</span><br><span class="line">                <span class="string">&quot;2018-04-03 12:00:03&quot;</span>,</span><br><span class="line">                <span class="string">&quot;2018-04-04 13:00:04&quot;</span>,</span><br><span class="line">                <span class="string">&quot;2018-04-05 14:00:05&quot;</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (String str : dateStrList) &#123;</span><br><span class="line">            executorService.execute(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                	<span class="comment">//每一次都创建新的对象进行解析日期</span></span><br><span class="line">                    SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>);</span><br><span class="line">                    simpleDateFormat.parse(str);</span><br><span class="line">                    TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">                    simpleDateFormat = <span class="keyword">null</span>; <span class="comment">//销毁对象</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="使用ThreadLocal"><a href="#使用ThreadLocal" class="headerlink" title="使用ThreadLocal"></a>使用ThreadLocal</h3><p>使用局部变量的升级版，自己用<code>ThreadLocal</code>实现工具类。在同一个线程中只存在一个<code>SimpleDateFormat</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> ThreadLocal&lt;SimpleDateFormat&gt; tl = ThreadLocal.withInitial(() -&gt; <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;dd/MM/yyyy&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">formatDate</span><span class="params">(Date input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tl.get().format(input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用Queue"><a href="#使用Queue" class="headerlink" title="使用Queue"></a>使用Queue</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.TimeZone;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentLinkedQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参考tomcat8中的并发DateFormat</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> SimpleDateFormat&#125;的线程安全包装器。</span></span><br><span class="line"><span class="comment"> * 不使用ThreadLocal，创建足够的SimpleDateFormat对象来满足并发性要求。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcurrentDateFormat</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> String format;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Locale locale;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> TimeZone timezone;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Queue&lt;SimpleDateFormat&gt; queue = <span class="keyword">new</span> ConcurrentLinkedQueue&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="title">ConcurrentDateFormat</span><span class="params">(String format, Locale locale, TimeZone timezone)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.format = format;</span><br><span class="line">		<span class="keyword">this</span>.locale = locale;</span><br><span class="line">		<span class="keyword">this</span>.timezone = timezone;</span><br><span class="line">		SimpleDateFormat initial = createInstance();</span><br><span class="line">		queue.add(initial);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConcurrentDateFormat <span class="title">of</span><span class="params">(String format)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ConcurrentDateFormat(format, Locale.getDefault(), TimeZone.getDefault());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConcurrentDateFormat <span class="title">of</span><span class="params">(String format, TimeZone timezone)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ConcurrentDateFormat(format, Locale.getDefault(), timezone);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConcurrentDateFormat <span class="title">of</span><span class="params">(String format, Locale locale, TimeZone timezone)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ConcurrentDateFormat(format, locale, timezone);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">format</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">		SimpleDateFormat sdf = queue.poll();</span><br><span class="line">		<span class="keyword">if</span> (sdf == <span class="keyword">null</span>) &#123;</span><br><span class="line">			sdf = createInstance();</span><br><span class="line">		&#125;</span><br><span class="line">		String result = sdf.format(date);</span><br><span class="line">		queue.add(sdf);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Date <span class="title">parse</span><span class="params">(String source)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">		SimpleDateFormat sdf = queue.poll();</span><br><span class="line">		<span class="keyword">if</span> (sdf == <span class="keyword">null</span>) &#123;</span><br><span class="line">			sdf = createInstance();</span><br><span class="line">		&#125;</span><br><span class="line">		Date result = sdf.parse(source);</span><br><span class="line">		queue.add(sdf);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> SimpleDateFormat <span class="title">createInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(format, locale);</span><br><span class="line">		sdf.setTimeZone(timezone);</span><br><span class="line">		<span class="keyword">return</span> sdf;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="同步代码块-synchronized-code"><a href="#同步代码块-synchronized-code" class="headerlink" title="同步代码块 synchronized(code)"></a>同步代码块 synchronized(code)</h3><p>或者使用装饰器设计模式包装下 SimpleDateFormat ，使之变得线程安全。</p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot 优雅停止服务的几种方法</title>
    <url>/2020/02/08/Springboot-%E4%BC%98%E9%9B%85%E5%81%9C%E6%AD%A2%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>在使用 SpringBoot 的时候，都要涉及到服务的停止和启动，当我们停止服务的时候，很多时候大家都是kill -9 直接把程序进程杀掉，这样程序不会执行优雅的关闭。而且一些没有执行完的程序就会直接退出。</p>
<p>我们很多时候都需要安全的将服务停止，也就是把没有处理完的工作继续处理完成。比如停止一些依赖的服务，输出一些日志，发一些信号给其他的应用系统，这个在保证系统的高可用是非常有必要的。那么咱么就来看一下几种停止 SpringBoot 的方法。</p>
<a id="more"></a>

<hr>
<p>咱们创建一个springboot工程，然后设置一个bean对象，配置上PreDestroy方法。这样在停止的时候会打印语句。bean的整个生命周期分为创建、初始化、销毁，当最后关闭的时候会执行销毁操作。在销毁的方法中执行一条输出日志。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hqs.springboot.shutdowndemo.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PreDestroy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> huangqingshi</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-08-17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TerminateBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreDestroy</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">preDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;TerminalBean is destroyed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>做一个configuration，然后提供一个获取bean的方法，这样该bean对象会被初始化。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.hqs.springboot.shutdowndemo.config;</span><br><span class="line"></span><br><span class="line">import com.hqs.springboot.shutdowndemo.bean.TerminateBean;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author huangqingshi</span><br><span class="line"> * @Date 2019-08-17</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">public class ShutDownConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public TerminateBean getTerminateBean() &#123;</span><br><span class="line">        return new TerminateBean();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="关闭context"><a href="#关闭context" class="headerlink" title="关闭context"></a>关闭context</h2><p>获取程序启动时候的<code>context</code>，然后关闭主程序启动时的<code>context</code>。这样程序在关闭的时候也会调用<code>PreDestroy</code>注解。如下方法在程序启动十秒后进行关闭。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* method 2: use ctx.close to shutdown all application context */</span></span><br><span class="line">ConfigurableApplicationContext ctx = SpringApplication.run(ShutdowndemoApplication.class, args);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    TimeUnit.SECONDS.sleep(<span class="number">10</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">ctx.close();</span><br></pre></td></tr></table></figure>

<h2 id="利用actuator"><a href="#利用actuator" class="headerlink" title="利用actuator"></a>利用actuator</h2><p>它可以执行<code>shutdown</code>, <code>health</code>,<code>info</code>等，默认情况下，<code>actuator</code>的<code>shutdown</code>是<code>disable</code>的，我们需要打开它。首先引入<code>acturator</code>的<code>maven</code>依赖。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后将shutdown节点打开，也将/actuator/shutdown暴露web访问也设置上，除了shutdown之外还有health, info的web访问都打开的话将management.endpoints.web.exposure.include=*就可以。将如下配置设置到application.properties里边。设置一下服务的端口号为3333。</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">3333</span></span><br><span class="line"><span class="meta">management.endpoint.shutdown.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">management.endpoints.web.exposure.include</span>=<span class="string">shutdown</span></span><br></pre></td></tr></table></figure>
<p>在启动类里边输出一个启动日志，当工程启动的时候，会看到启动的输出，接下来咱们执行停止命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X POST http://localhost:3333/actuator/shutdown</span><br></pre></td></tr></table></figure>
<p>以下日志可以输出启动时的日志打印和停止时的日志打印，同时程序已经停止。是不是比较神奇。</p>
<p><img src="/2020/02/08/Springboot-%E4%BC%98%E9%9B%85%E5%81%9C%E6%AD%A2%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/image-20200208194755715.png" alt="image-20200208194755715"></p>
<blockquote>
<div class="note primary">
            <p>核心原理其实就是调用了<code>context.close()</code>方法退出</p>
          </div>
<p>核心类 <code>ShutdownEndpointAutoConfiguration</code><br><img src="/2020/02/08/Springboot-%E4%BC%98%E9%9B%85%E5%81%9C%E6%AD%A2%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/image-20200208214326902.png" alt="image-20200208214326902"><br>深入查看类 <strong><code>shutdownEndpoint</code></strong><br>核心代码<br><img src="/2020/02/08/Springboot-%E4%BC%98%E9%9B%85%E5%81%9C%E6%AD%A2%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/image-20200208214431442.png" alt="image-20200208214431442"></p>
</blockquote>
<h2 id="关闭app-pid（失败）"><a href="#关闭app-pid（失败）" class="headerlink" title="关闭app.pid（失败）"></a>关闭app.pid（失败）</h2><blockquote>
<p>无法回调<code>preDestroy</code></p>
</blockquote>
<p>在springboot启动的时候将进程号写入一个<code>app.pid</code>文件，生成的路径是可以指定的，可以通过命令 <code>cat /Users/huangqingshi/app.id | xargs kill </code>命令直接停止服务，这个时候<code>bean</code>对象的<code>PreDestroy</code>方法也会调用的。这种方法大家使用的比较普遍。写一个<code>start.sh</code>用于启动<code>springboot</code>程序，然后写一个停止程序将服务停止。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* method 3 : generate a pid in a specified path, while use command to shutdown pid :</span><br><span class="line">            &#39;cat &#x2F;Users&#x2F;huangqingshi&#x2F;app.pid | xargs kill&#39; *&#x2F;</span><br><span class="line">        SpringApplication application &#x3D; new SpringApplication(ShutdowndemoApplication.class);</span><br><span class="line">        application.addListeners(new ApplicationPidFileWriter(&quot;&#x2F;Users&#x2F;huangqingshi&#x2F;app.pid&quot;));</span><br><span class="line">        application.run();</span><br></pre></td></tr></table></figure>

<p>在windows中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat app.pid</span><br><span class="line">taskkill /f /pid 10440</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/08/Springboot-%E4%BC%98%E9%9B%85%E5%81%9C%E6%AD%A2%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/image-20200208202311271.png" alt="image-20200208202311271"></p>
<h2 id="SpringApplication-exit"><a href="#SpringApplication-exit" class="headerlink" title="SpringApplication.exit()"></a>SpringApplication.exit()</h2><p>通过调用一个<code>SpringApplication.exit()</code>方法也可以退出程序，同时将生成一个退出码，这个退出码可以传递给所有的<code>context</code>。这个就是一个JVM的钩子，通过调用这个方法的话会把所有PreDestroy的方法执行并停止，并且传递给具体的退出码给所有<code>Context</code>。通过调用System.exit(exitCode)可以将这个错误码也传给JVM。程序执行完后最后会输出：<code>Process finished with exit code 0</code>，给JVM一个SIGNAL。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* method 4: exit this application using static method */</span></span><br><span class="line">        ConfigurableApplicationContext ctx = SpringApplication.run(ShutdowndemoApplication.class, args);</span><br><span class="line">        exitApplication(ctx);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exitApplication</span><span class="params">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> exitCode = SpringApplication.exit(context, (ExitCodeGenerator) () -&gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        System.exit(exitCode);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="在Controller中调用context"><a href="#在Controller中调用context" class="headerlink" title="在Controller中调用context"></a>在Controller中调用context</h2><p>自己写一个Controller，然后将自己写好的Controller获取到程序的context，然后调用自己配置的Controller方法退出程序。通过调用自己写的/shutDownContext方法关闭程序：curl -X POST <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDozMzMzL3NodXREb3duQ29udGV4dCVFMyU4MCU4Mg==" title="http://localhost:3333/shutDownContext%E3%80%82">http://localhost:3333/shutDownContext。<i class="fa fa-external-link"></i></span></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShutDownController</span> <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext context;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/shutDownContext&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">shutDownContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ConfigurableApplicationContext ctx = (ConfigurableApplicationContext) context;</span><br><span class="line">        ctx.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;context is shutdown&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        context = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N0b25laHFzL3NodXRkb3duZGVtby5naXQ=" title="https://github.com/stonehqs/shutdowndemo.git">https://github.com/stonehqs/shutdowndemo.git<i class="fa fa-external-link"></i></span></p>
</blockquote>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot启动完成</title>
    <url>/2020/02/08/Springboot%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%88%90/</url>
    <content><![CDATA[<p>我们在使用SpringBoot搭建项目的时候，如果希望在项目启动完成之前(之后)，能够初始化一些操作。</p>
<a id="more"></a>

<h2 id="直接在main方法中"><a href="#直接在main方法中" class="headerlink" title="直接在main方法中"></a>直接在main方法中</h2><p>直接在启动方法之后,简单粗暴,最最常用的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemoApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootDemoApplication.class, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;启动完成 main&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CommandLineRunner"><a href="#CommandLineRunner" class="headerlink" title="CommandLineRunner"></a>CommandLineRunner</h2><div class="note primary">
            <p><code>CommandLineRunner</code>直接获得原始的参数<br>参数为：<code>aaaa,bbbb</code><br>直接得到<code>args</code>参数内容为<code>[aaaa,bbbb]</code></p>
          </div>

<p>创建<code>Aclr</code> 继承<code>CommandLineRunner</code>,启动顺序为<code>1</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Aclr</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CommandLineRunner order 1 参数: &quot;</span> + Arrays.asList(args));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建<code>Bclr</code> 继承<code>CommandLineRunner</code>,启动顺序为<code>10</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Order(10)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bclr</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CommandLineRunner order 10&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>启动类,启动参数为<code>aaaa,bbbb</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemoApplication</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 启动参数 aaaa,bbbb</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// SpringApplication.run(SpringbootDemoApplication.class, args);</span></span><br><span class="line">        ConfigurableApplicationContext context =SpringApplication.run(SpringbootDemoApplication.class,args);</span><br><span class="line">        ApplicationArguments applicationArguments = context.getBean(ApplicationArguments.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;启动完成 main&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">结果:</span><br><span class="line">CommandLineRunner order 1 参数: [aaaa,bbbb]</span><br><span class="line">CommandLineRunner order 10</span><br><span class="line">启动完成 main</span><br></pre></td></tr></table></figure>

<h2 id="ApplicationRunner"><a href="#ApplicationRunner" class="headerlink" title="ApplicationRunner"></a>ApplicationRunner</h2><div class="note primary">
            <p><code>ApplicationRunner</code>对参数进行了封装,可以解析–name=value的，我们就可以通过name来获取value<br>参数为:<code>--foo=bar --developer.name=b1,b2</code><br>参数可以指定得到<code>developer.name</code>,值为<code>[b1,b2]</code></p>
          </div>

<p>创建<code>Car</code> 继承<code>ApplicationRunner</code>,启动顺序为<code>2</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Order(2)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(ApplicationArguments args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;===ApplicationRunner C  order 2===&quot;</span>+ Arrays.asList(args.getSourceArgs()));</span><br><span class="line">        System.out.println(<span class="string">&quot;===ApplicationRunner C getOptionNames========&quot;</span>+args.getOptionNames());</span><br><span class="line">        System.out.println(<span class="string">&quot;===ApplicationRunner C getOptionValues=======&quot;</span>+args.getOptionValues(<span class="string">&quot;foo&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;==ApplicationRunner C getOptionValues========&quot;</span>+args.getOptionValues(<span class="string">&quot;developer.name&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建<code>Dar</code> 继承<code>ApplicationRunner</code>,启动顺序为<code>20</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Order(20)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dar</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(ApplicationArguments args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ApplicationRunner order 20&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>启动类,启动参数<code>--foo=bar --developer.name=b1,b2</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// SpringApplication.run(SpringbootDemoApplication.class, args);</span></span><br><span class="line">        ConfigurableApplicationContext context =SpringApplication.run(SpringbootDemoApplication.class,args);</span><br><span class="line">        ApplicationArguments applicationArguments = context.getBean(ApplicationArguments.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;============&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;name=&quot;</span>+applicationArguments.getOptionNames());</span><br><span class="line">        System.out.println(<span class="string">&quot;values====&quot;</span>+applicationArguments.getOptionValues(<span class="string">&quot;developer.name&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;启动完成 main&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">结果:</span><br><span class="line">CommandLineRunner order 1 参数: [--foo&#x3D;bar, --developer.name&#x3D;fff,sss]</span><br><span class="line">&#x3D;&#x3D;&#x3D;ApplicationRunner C  order 2&#x3D;&#x3D;&#x3D;[--foo&#x3D;bar, --developer.name&#x3D;fff,sss]</span><br><span class="line">&#x3D;&#x3D;&#x3D;ApplicationRunner C getOptionNames&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[foo, developer.name]</span><br><span class="line">&#x3D;&#x3D;&#x3D;ApplicationRunner C getOptionValues&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[bar]</span><br><span class="line">&#x3D;&#x3D;ApplicationRunner C getOptionValues&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[fff,sss]</span><br><span class="line">CommandLineRunner order 10</span><br><span class="line">ApplicationRunner order 20</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">name&#x3D;[foo, developer.name]</span><br><span class="line">values&#x3D;&#x3D;&#x3D;&#x3D;[fff,sss]</span><br><span class="line">启动完成 main</span><br><span class="line">2020-02-08 23:06:24.891  INFO 15296 --- [-192.168.30.225] o.a.c.c.C.[Tomcat].[localhost].[&#x2F;]       : Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;</span><br><span class="line">2020-02-08 23:06:24.891  INFO 15296 --- [-192.168.30.225] o.s.web.servlet.DispatcherServlet        : Initializing Servlet &#39;dispatcherServlet&#39;</span><br><span class="line">2020-02-08 23:06:24.897  INFO 15296 --- [-192.168.30.225] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms</span><br></pre></td></tr></table></figure>
<h2 id="springboot事件机制加载机制"><a href="#springboot事件机制加载机制" class="headerlink" title="springboot事件机制加载机制"></a>springboot事件机制加载机制</h2><p>这个事件是在 2.0 版本才引入的；具体发布是在应用程序上下文刷新之后，调用任何 <code>ApplicationRunner</code>和<code>CommandLineRunner</code>运行程序之前。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlmapperApplicationStartedEvent</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ApplicationStartedEvent</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ApplicationStartedEvent applicationStartedEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;execute ApplicationStartedEvent ...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个和 <code>ApplicationStartedEvent</code>很类似，也是在应用程序上下文刷新之后之后调用，区别在于此时<code>ApplicationRunner</code>和<code>CommandLineRunner</code>已经完成调用了，也意味着 <code>SpringBoot</code>加载已经完成。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlmapperApplicationReadyEvent</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ApplicationReadyEvent</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ApplicationReadyEvent applicationReadyEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;execute ApplicationReadyEvent ...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在启动类中注册事件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// SpringApplication.run(SpringbootDemoApplication.class, args);</span></span><br><span class="line">        <span class="comment">// ConfigurableApplicationContext context =SpringApplication.run(SpringbootDemoApplication.class,args);</span></span><br><span class="line">        SpringApplication springApplication = <span class="keyword">new</span> SpringApplication(SpringbootDemoApplication.class);</span><br><span class="line">        springApplication.addListeners(<span class="keyword">new</span> GlmapperApplicationReadyEvent());</span><br><span class="line">        springApplication.addListeners(<span class="keyword">new</span> GlmapperApplicationStartedEvent());</span><br><span class="line">        ConfigurableApplicationContext context = springApplication.run(args);</span><br><span class="line">        ApplicationArguments applicationArguments = context.getBean(ApplicationArguments.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;============&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;name=&quot;</span>+applicationArguments.getOptionNames());</span><br><span class="line">        System.out.println(<span class="string">&quot;values====&quot;</span>+applicationArguments.getOptionValues(<span class="string">&quot;developer.name&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;启动完成 main&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">结果:</span><br><span class="line">execute ApplicationStartedEvent ...</span><br><span class="line">CommandLineRunner order 1 参数: [--foo&#x3D;bar, --developer.name&#x3D;fff,sss]</span><br><span class="line">&#x3D;&#x3D;&#x3D;ApplicationRunner C  order 2&#x3D;&#x3D;&#x3D;[--foo&#x3D;bar, --developer.name&#x3D;fff,sss]</span><br><span class="line">&#x3D;&#x3D;&#x3D;ApplicationRunner C getOptionNames&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[foo, developer.name]</span><br><span class="line">&#x3D;&#x3D;&#x3D;ApplicationRunner C getOptionValues&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[bar]</span><br><span class="line">&#x3D;&#x3D;ApplicationRunner C getOptionValues&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;[fff,sss]</span><br><span class="line">CommandLineRunner order 10</span><br><span class="line">ApplicationRunner order 20</span><br><span class="line">execute ApplicationReadyEvent ...</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">name&#x3D;[foo, developer.name]</span><br><span class="line">values&#x3D;&#x3D;&#x3D;&#x3D;[fff,sss]</span><br><span class="line">启动完成 main</span><br><span class="line">2020-02-08 23:46:45.279  INFO 23932 --- [-192.168.30.225] o.a.c.c.C.[Tomcat].[localhost].[&#x2F;]       : Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;</span><br><span class="line">2020-02-08 23:46:45.279  INFO 23932 --- [-192.168.30.225] o.s.web.servlet.DispatcherServlet        : Initializing Servlet &#39;dispatcherServlet&#39;</span><br><span class="line">2020-02-08 23:46:45.286  INFO 23932 --- [-192.168.30.225] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="启动顺序"><a href="#启动顺序" class="headerlink" title="启动顺序"></a>启动顺序</h3><ol>
<li>监听事件 <code>ApplicationStartedEvent</code></li>
<li><code>CommandLineRunner</code> 或者 <code>ApplicationRunner</code> 具体根据注解<code>@Order</code>或者继承<code>Ordered</code>类 设置启动顺序</li>
<li>监听事件  <code>ApplicationReadyEvent</code></li>
<li><code>main</code> 函数中的方法</li>
</ol>
<h3 id="CommandLineRunner-Vs-ApplicationRunner"><a href="#CommandLineRunner-Vs-ApplicationRunner" class="headerlink" title="CommandLineRunner Vs ApplicationRunner"></a>CommandLineRunner Vs ApplicationRunner</h3><ul>
<li>他们可以共用<code>@Order</code>注解来表示启动顺序</li>
<li><code>CommandLineRunner</code>比较常用，可以直接获取<code>args</code>数组</li>
<li><code>ApplicationRunner</code>可以解析–name=value的，我们就可以通过name来获取value</li>
</ul>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>TestNG测试框架学习笔记</title>
    <url>/2018/01/04/TestNG%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy55aWliYWkuY29tL3Rlc3RuZy8=" title="http://www.yiibai.com/testng/">http://www.yiibai.com/testng/<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h1 id="添加如下依赖即可"><a href="#添加如下依赖即可" class="headerlink" title="添加如下依赖即可"></a>添加如下依赖即可</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.8.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHelloWorld</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test()</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testEmailGenerator</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        RandomEmailGenerator obj = <span class="keyword">new</span> RandomEmailGenerator();</span><br><span class="line">        String email = obj.generate();</span><br><span class="line"></span><br><span class="line">        Assert.assertNotNull(email);</span><br><span class="line">        Assert.assertEquals(email, <span class="string">&quot;feedback@yiibai.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="comment">//import org.springframework.stereotype.Service;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomEmailGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">generate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;feedback@yiibai.com&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><ul>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JlZm9yZVN1aXRl" title="https://github.com/BeforeSuite">@BeforeSuite<i class="fa fa-external-link"></i></span> - 对于套件测试，在此套件中的所有测试运行之前运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FmdGVyU3VpdGU=" title="https://github.com/AfterSuite">@AfterSuite<i class="fa fa-external-link"></i></span> - 对于套件测试，在此套件中的所有测试运行之后运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JlZm9yZVRlc3Q=" title="https://github.com/BeforeTest">@BeforeTest<i class="fa fa-external-link"></i></span> - 对于套件测试，在运行属于<code>&lt;test&gt;</code>标签内的类的任何测试方法之前运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FmdGVyVGVzdA==" title="https://github.com/AfterTest">@AfterTest<i class="fa fa-external-link"></i></span> - 对于套件测试，在运行属于<code>&lt;test&gt;</code>标签内的类的所有测试方法都已运行之后运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JlZm9yZUdyb3Vwcw==" title="https://github.com/BeforeGroups">@BeforeGroups<i class="fa fa-external-link"></i></span> - 在调用属于该组的第一个测试方法之前运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FmdGVyR3JvdXBz" title="https://github.com/AfterGroups">@AfterGroups<i class="fa fa-external-link"></i></span>：在调用属于组的最后一个测试方法之后运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JlZm9yZUNsYXNz" title="https://github.com/BeforeClass">@BeforeClass<i class="fa fa-external-link"></i></span>- 在当前类的第一个测试方法之前运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FmdGVyQ2xhc3M=" title="https://github.com/AfterClass">@AfterClass<i class="fa fa-external-link"></i></span> - 运行当前类中的所有测试方法之后都运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JlZm9yZU1ldGhvZA==" title="https://github.com/BeforeMethod">@BeforeMethod<i class="fa fa-external-link"></i></span> - 在每个测试方法之前运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FmdGVyTWV0aG9k" title="https://github.com/AfterMethod">@AfterMethod<i class="fa fa-external-link"></i></span> - 在每个测试方法之后运行。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RhdGFQcm92aWRlcg==" title="https://github.com/DataProvider">@DataProvider<i class="fa fa-external-link"></i></span> - 标记一种方法来提供测试方法的数据。 注释方法必须返回一个<code>Object[][]</code>，其中每个<code>Object[]</code>可以被分配给测试方法的参数列表。 要从该DataProvider接收数据的<code>@Test</code>方法需要使用与此注释名称相等的<code>dataProvider</code>名称。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0ZhY3Rvcnk=" title="https://github.com/Factory">@Factory<i class="fa fa-external-link"></i></span> - 将一个方法标记为工厂，返回TestNG将被用作测试类的对象。 该方法必须返回<code>Object[]</code>。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xpc3RlbmVycw==" title="https://github.com/Listeners">@Listeners<i class="fa fa-external-link"></i></span> - 定义测试类上的侦听器。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BhcmFtZXRlcnM=" title="https://github.com/Parameters">@Parameters<i class="fa fa-external-link"></i></span> - 描述如何将参数传递给<code>@Test</code>方法。</li>
<li> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1Rlc3Q=" title="https://github.com/Test">@Test<i class="fa fa-external-link"></i></span> - 将类或方法标记为测试的一部分。</li>
</ul>
<h1 id="Test注解"><a href="#Test注解" class="headerlink" title="Test注解"></a>Test注解</h1><h2 id="运行时异常"><a href="#运行时异常" class="headerlink" title="运行时异常"></a>运行时异常</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRuntime</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(expectedExceptions = ArithmeticException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">divisionWithException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;After division the value of i is :&quot;</span>+ i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="忽略测试"><a href="#忽略测试" class="headerlink" title="忽略测试"></a>忽略测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestIgnore</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span> <span class="comment">// default enable=true</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Assert.assertEquals(<span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(enabled = true)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Assert.assertEquals(<span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(enabled = false)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Assert.assertEquals(<span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="超时测试"><a href="#超时测试" class="headerlink" title="超时测试"></a>超时测试</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTimeout</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(timeOut = 5000)</span> <span class="comment">// time in mulliseconds</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testThisShouldPass</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Thread.sleep(<span class="number">4000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(timeOut = 1000)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testThisShouldFail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">// do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在方法上的分组"><a href="#在方法上的分组" class="headerlink" title="在方法上的分组"></a>在方法上的分组</h2><ul>
<li>  如果分组<code>selenium-test</code>和<code>database</code>通过，则<code>runFinal()</code>将被执行。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.AfterGroups;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeGroups;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestGroup</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeGroups(&quot;database&quot;)</span><span class="comment">//database分组</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setupDB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setupDB()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterGroups(&quot;database&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cleanDB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;cleanDB()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(groups = &quot;selenium-test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runSelenium</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;runSelenium()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(groups = &quot;selenium-test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runSelenium1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;runSelenium()1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(groups = &quot;database&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConnectOracle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;testConnectOracle()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(groups = &quot;database&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConnectMsSQL</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;testConnectMsSQL&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(dependsOnGroups = &#123; &quot;database&quot;, &quot;selenium-test&quot; &#125;)</span><span class="comment">//如果database selenium-test分组都通过 才会执行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runFinal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;runFinal&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在类上分组"><a href="#在类上分组" class="headerlink" title="在类上分组"></a>在类上分组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test(groups = &quot;selenium-test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSelenium</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runSelenium</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;runSelenium()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runSelenium1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;runSelenium()1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">suite</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://testng.org/testng-1.0.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">suite</span> <span class="attr">name</span>=<span class="string">&quot;TestAll&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span> <span class="attr">name</span>=<span class="string">&quot;final&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">classes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;com.yiibai.TestSelenium&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;com.yiibai.TestGroup&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">classes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Run test method on group &quot;selenium&quot; only --&gt;</span></span><br><span class="line">	    <span class="comment">&lt;!--只有selenium-test分组的执行用例 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span> <span class="attr">name</span>=<span class="string">&quot;selenium&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">groups</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">run</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">&quot;selenium-test&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">run</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">groups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">classes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;com.yiibai.TestSelenium&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;com.yiibai.TestGroup&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">classes</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">suite</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="其它分组"><a href="#其它分组" class="headerlink" title="其它分组"></a>其它分组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test(groups = &#123;&quot;mysql&quot;,&quot;database&quot;&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConnectMsSQL</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;testConnectMsSQL&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="dependOnMethods-方法依赖测试"><a href="#dependOnMethods-方法依赖测试" class="headerlink" title="dependOnMethods(方法依赖测试)"></a>dependOnMethods(方法依赖测试)</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is method 1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(dependsOnMethods = &#123; &quot;method1&quot; &#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is method 2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="dependsOnGroups（组依赖测试）"><a href="#dependsOnGroups（组依赖测试）" class="headerlink" title="dependsOnGroups（组依赖测试）"></a>dependsOnGroups（组依赖测试）</h2><p>详见 在方法上的分组</p>
<h2 id="使用XML进行参数化"><a href="#使用XML进行参数化" class="headerlink" title="使用XML进行参数化"></a>使用XML进行参数化</h2><p>XML配置如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span> <span class="attr">encoding</span>=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"> <span class="meta">&lt;!DOCTYPE <span class="meta-keyword">suite</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://testng.org/testng-1.0.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">suite</span> <span class="attr">name</span>=<span class="string">&quot;TestAll&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;foo1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;abcd&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">&quot;foo2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;abcd&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">test</span> <span class="attr">name</span>=<span class="string">&quot;case1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">classes</span>&gt;</span>  </span><br><span class="line">	 <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;com.datang.TestParameter&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">classes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">suite</span>&gt;</span></span><br><span class="line">	 </span><br></pre></td></tr></table></figure>

<p>java 直接在方法上用@Parameters获取</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestParameter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line"> <span class="meta">@Parameters(&#123;&quot;foo1&quot;,&quot;foo2&quot;&#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readRarameterXML</span><span class="params">(String a,String b)</span></span>&#123;</span><br><span class="line">        Assert.assertEquals(a,<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line">  Assert.assertEquals(b,<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="通过-DataProvider直接在代码中传递参数"><a href="#通过-DataProvider直接在代码中传递参数" class="headerlink" title="通过@DataProvider直接在代码中传递参数"></a>通过<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RhdGFQcm92aWRl" title="https://github.com/DataProvide">@DataProvider<i class="fa fa-external-link"></i></span>直接在代码中传递参数</h2><p>如果使用如下方法传递参数会 进行3次校验</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.DataProvider;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestParameterDataProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(dataProvider = &quot;provideNumbers&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> number, <span class="keyword">int</span> expected)</span> </span>&#123;</span><br><span class="line">        Assert.assertEquals(number + <span class="number">10</span>, expected);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DataProvider(name = &quot;provideNumbers&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object[][] provideData() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Object[][] &#123; &#123; <span class="number">10</span>, <span class="number">20</span> &#125;, &#123; <span class="number">100</span>, <span class="number">110</span> &#125;, &#123; <span class="number">200</span>, <span class="number">210</span> &#125; &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">## TEST方法执行次数</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRepeatThis</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(invocationCount = 10)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">repeatThis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;repeatThis &quot;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Test-invocationCount-threadPoolSize-多线程多次执行"><a href="#Test-invocationCount-threadPoolSize-多线程多次执行" class="headerlink" title="@Test(invocationCount = ?, threadPoolSize = ?)多线程多次执行"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1Rlc3Q=" title="https://github.com/Test">@Test<i class="fa fa-external-link"></i></span>(invocationCount = ?, threadPoolSize = ?)多线程多次执行</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.chrome.ChromeDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.firefox.FirefoxDriver;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.AssertJUnit;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMultipleThreads2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(invocationCount = 3, threadPoolSize = 3)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testThreadPools</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">&quot;Thread Id : %s%n&quot;</span>, Thread.currentThread().getId());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="TestNG-Spring"><a href="#TestNG-Spring" class="headerlink" title="TestNG+Spring"></a>TestNG+Spring</h2><p><code>Bean</code>接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmailGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">generate</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>实体<code>bean</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomEmailGenerator</span> <span class="keyword">implements</span> <span class="title">EmailGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RandomEmailGenerator</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ffffffffffffff&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">generate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;feedback@yiibai.com&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>Spring XML <code>$&#123;project&#125;/src/test/resources/spring-test-config.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/context/spring-context-3.2.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.yiibai&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>执行</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="meta">@ContextConfiguration(locations = &#123; &quot;classpath:spring-test-config.xml&quot; &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestWithSpring</span> <span class="keyword">extends</span> <span class="title">AbstractTestNGSpringContextTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Autowired</span></span><br><span class="line">  EmailGenerator emailGenerator;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        public static void main(String args[])&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;ff&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test()</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">testEmailGenerator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            String email = emailGenerator.generate();</span><br><span class="line">  System.out.println(email);</span><br><span class="line"></span><br><span class="line">  Assert.assertNotNull(email);</span><br><span class="line">  Assert.assertEquals(email, <span class="string">&quot;feedback@yiibai.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>WIN10安装DOCKER</title>
    <url>/2020/02/06/WIN10%E5%AE%89%E8%A3%85DOCKER/</url>
    <content><![CDATA[<h2 id="安装ubuntu"><a href="#安装ubuntu" class="headerlink" title="安装ubuntu"></a>安装ubuntu</h2><h2 id="解决vi命令方向键不可用，发出嘟嘟的声音，且提示E388-Couldn’t-find-definition"><a href="#解决vi命令方向键不可用，发出嘟嘟的声音，且提示E388-Couldn’t-find-definition" class="headerlink" title="解决vi命令方向键不可用，发出嘟嘟的声音，且提示E388:Couldn’t find definition"></a>解决vi命令方向键不可用，发出嘟嘟的声音，且提示E388:Couldn’t find definition</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim ~&#x2F;.vimrc</span><br><span class="line">:set term&#x3D;builtin_ansi</span><br></pre></td></tr></table></figure>

<h2 id="配置便捷"><a href="#配置便捷" class="headerlink" title="配置便捷"></a>配置便捷</h2><p>因为在 WSL 中 window 的盘符都是挂载在 /mnt 下的，所以设置 alias 有助于你快速的访问 window 目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim ~&#x2F;.bashrc</span><br><span class="line"></span><br><span class="line">alias cdc&#x3D;&#39;cd &#x2F;mnt&#x2F;c&#x2F;&#39;</span><br><span class="line">alias cdd&#x3D;&#39;cd &#x2F;mnt&#x2F;d&#x2F;&#39;</span><br><span class="line">alias cde&#x3D;&#39;cd &#x2F;mnt&#x2F;e&#x2F;&#39;</span><br></pre></td></tr></table></figure>


<h2 id="更新阿里源"><a href="#更新阿里源" class="headerlink" title="更新阿里源"></a>更新阿里源</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9taXJyb3IvdWJ1bnR1P3NwbT1hMmM2aC4xMzY1MTEwMi4wLjAuM2UyMjFiMTFScFVQVHY=" title="https://developer.aliyun.com/mirror/ubuntu?spm=a2c6h.13651102.0.0.3e221b11RpUPTv">https://developer.aliyun.com/mirror/ubuntu?spm=a2c6h.13651102.0.0.3e221b11RpUPTv<i class="fa fa-external-link"></i></span></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu 18.04(bionic) 配置如下</span></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>
<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"><span class="comment"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"><span class="comment"># step 2: 安装GPG证书</span></span><br><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"><span class="comment"># Step 3: 写入软件源信息</span></span><br><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line"><span class="comment"># Step 4: 更新并安装 Docker-CE</span></span><br><span class="line">sudo apt-get -y update</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 4:  显示稳定可使用版本</span></span><br><span class="line">apt-cache madison docker-ce</span><br><span class="line"><span class="comment"># Step 5:  安装稳定版本 这里需要不断的尝试 ： （ 卸载apt-get autoremove docker-ce）</span></span><br><span class="line">sudo apt-get install docker-ce=18.03.1~ce~3-0~ubuntu</span><br><span class="line"><span class="comment"># Step 6: 开启Docker服务</span></span><br><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure>
<h2 id="加速镜像"><a href="#加速镜像" class="headerlink" title="加速镜像"></a>加速镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://md4nbj2f.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Step 7: 验证</span></span><br><span class="line">sudo docker run -it --rm -p 8888:8080 tomcat:9.0</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>WIN10 子系统Ubuntu设置</title>
    <url>/2020/02/03/WIN10-%E5%AD%90%E7%B3%BB%E7%BB%9FUbuntu%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="设置ROOT账号密码"><a href="#设置ROOT账号密码" class="headerlink" title="设置ROOT账号密码"></a>设置ROOT账号密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd</span><br><span class="line"><span class="comment"># 输入要设置的root账号密码</span></span><br><span class="line"><span class="comment"># 再次输入要设置的root账号密码</span></span><br><span class="line">su root</span><br><span class="line"><span class="comment"># 输入刚才设置好的密码。</span></span><br></pre></td></tr></table></figure>

<h2 id="vi命令方向键不可用，发出嘟嘟的声音"><a href="#vi命令方向键不可用，发出嘟嘟的声音" class="headerlink" title="vi命令方向键不可用，发出嘟嘟的声音"></a>vi命令方向键不可用，发出嘟嘟的声音</h2><p>vi命令方向键不可用，发出嘟嘟的声音，且提示E388:Couldn’t find definition解决办法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.vimrc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> term=builtin_ansi</span><br></pre></td></tr></table></figure>

<h2 id="修改root用户控制台颜色"><a href="#修改root用户控制台颜色" class="headerlink" title="修改root用户控制台颜色"></a>修改root用户控制台颜色</h2><p>去除<code>39行</code> 前的注释</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 39行将注释去除</span></span><br><span class="line">force_color_prompt=yes</span><br></pre></td></tr></table></figure>
<blockquote>
<dl><dt>:set number #显示行号<br>:set nonumber #关闭行号</dt><dd>39 # 跳转到39行<br><img src="/2020/02/03/WIN10-%E5%AD%90%E7%B3%BB%E7%BB%9FUbuntu%E8%AE%BE%E7%BD%AE/image-20200203220348511.png" alt="image-20200203220348511"></dd></dl></blockquote>
<p>生效<code>~/.bashrc</code>文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>WxParse 插件 在循环时 cannot read property &#39;nodes&#39; of undefined </title>
    <url>/2018/11/12/WxParse%E5%88%97%E8%A1%A8%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<p>项目使用wepy + wxparse 循环来渲染html页面</p>
<p>支持wepy的wxparse地址:<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JsdWJpdWJpdS93eFBhcnNl" title="https://github.com/Blubiubiu/wxParse">https://github.com/Blubiubiu/wxParse<i class="fa fa-external-link"></i></span></p>
<p>增加代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">that.data[bindName] &#x3D; transData</span><br></pre></td></tr></table></figure>
<p>截图：<br><img src="/2018/11/12/WxParse%E5%88%97%E8%A1%A8%E5%BE%AA%E7%8E%AF/image-76.png" alt="upload successful"></p>
<p>index.wpy 循环的例子</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;style lang=<span class="string">&quot;less&quot;</span>&gt;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">&#x27;../wxparse/wxParse.wxss&#x27;</span>;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;container&quot;</span>&gt;</span><br><span class="line">    &lt;button type=<span class="string">&quot;default&quot;</span> @tap=<span class="string">&quot;translate&quot;</span>&gt;点击翻译富文本&lt;/button&gt;</span><br><span class="line">    &lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;content&quot;</span>&gt;</span><br><span class="line">      &lt;!-- <span class="xml"><span class="tag">&lt;<span class="name">html2wxml</span> <span class="attr">:parserName</span>=<span class="string">&quot;name&quot;</span> <span class="attr">:parserContent.sync</span>=<span class="string">&quot;textContent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">html2wxml</span>&gt;</span></span> --&gt;</span><br><span class="line">      &lt;<span class="keyword">import</span> src=<span class="string">&quot;../wxparse/wxParse.wxml&quot;</span> /&gt;</span><br><span class="line">      &lt;block wx:<span class="keyword">for</span>=<span class="string">&quot;&#123;&#123;replyTemArray&#125;&#125;&quot;</span> wx:key=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">        列表:&#123;&#123;index&#125;&#125;:<span class="xml"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;wxParse&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;&#123;wxParseData:item&#125;&#125;&quot;</span>/&gt;</span></span></span><br><span class="line">      &lt;/block&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">import</span> wepy <span class="keyword">from</span> <span class="string">&#x27;wepy&#x27;</span></span><br><span class="line">  <span class="keyword">import</span> WxParse <span class="keyword">from</span> <span class="string">&#x27;../wxparse/wxParse&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">wepy</span>.<span class="title">page</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">onReady</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.info(<span class="string">&#x27;onReady&#x27;</span>)</span><br><span class="line">      <span class="keyword">let</span> that = <span class="built_in">this</span></span><br><span class="line">      <span class="comment">// that.detail = this.mock2</span></span><br><span class="line">      <span class="keyword">var</span> arr = []</span><br><span class="line">      arr.push(<span class="string">`&lt;p style=&quot;color: blue;&quot;&gt;感谢使用，您的star是对我最大的鼓励&lt;/p&gt;`</span>)</span><br><span class="line">      arr.push(<span class="string">`&lt;p style=&quot;color: blue;&quot;&gt;感谢使用，您的star是对我最大的鼓励&lt;/p&gt;`</span>)</span><br><span class="line">      arr.push(<span class="string">`&lt;p style=&quot;color: blue;&quot;&gt;感谢使用，您的star是对我最大的鼓励&lt;/p&gt;`</span>)</span><br><span class="line">      <span class="comment">// 调用通知接口通知组件更新数据</span></span><br><span class="line">      <span class="comment">// this.$invoke(&#x27;html2wxml&#x27;, &#x27;htmlParserNotice&#x27;)]</span></span><br><span class="line">      <span class="comment">// this.$apply()</span></span><br><span class="line">      <span class="built_in">console</span>.info(arr.length)</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        WxParse.wxParse(<span class="string">&#x27;reply&#x27;</span> + i, <span class="string">&#x27;html&#x27;</span>, arr[i], that)</span><br><span class="line">        <span class="keyword">if</span> (i === arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="built_in">console</span>.info(<span class="string">&#x27;&gt;&gt;&gt;&gt;  &#x27;</span> + i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="string">&#x27;[[[  &#x27;</span> + i)</span><br><span class="line">      &#125;</span><br><span class="line">      WxParse.wxParseTemArray(<span class="string">&#x27;replyTemArray&#x27;</span>, <span class="string">&#x27;reply&#x27;</span>, arr.length - <span class="number">1</span>, that)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    config = &#123;</span><br><span class="line">      navigationBarTitleText: <span class="string">&#x27;wxparseDemo&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    methods = &#123;</span><br><span class="line">      translate () &#123;</span><br><span class="line">        <span class="comment">// 此处只模仿本地环境</span></span><br><span class="line">        <span class="comment">// 获取数据</span></span><br><span class="line">        <span class="comment">// this.textContent = this.mock</span></span><br><span class="line">        <span class="comment">// 更新</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>YUM源更新</title>
    <url>/2017/12/26/YUM%E6%BA%90%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<p>安装完成Linux之后需要更换YUM源,以便日后维护</p>
<h1 id="在线版本"><a href="#在线版本" class="headerlink" title="在线版本"></a>在线版本</h1><p>常用源：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS8=" title="http://mirrors.aliyun.com/">http://mirrors.aliyun.com/<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL21pcnJvcnMuMTYzLmNvbS8=" title="http://mirrors.163.com/">http://mirrors.163.com/<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p>阿里源有详细的提示</p>
<p>以<code>CentOS7</code>为例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo.backup</span><br><span class="line">wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>

<h1 id="离线版本"><a href="#离线版本" class="headerlink" title="离线版本"></a>离线版本</h1><ol>
<li><p>把光盘源文件拷贝但本地目录(挂载光盘,并且复制复制里面所有内容到本地)</p>
</li>
<li><p>备份本地YUM配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p &#x2F;etc&#x2F;yum.repos.d&#x2F;all.bak</span><br><span class="line">mv &#x2F;etc&#x2F;yum.repos.d&#x2F;*.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;all.bak</span><br></pre></td></tr></table></figure>
</li>
<li><p>编写本地YUM配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;yum.repos.d&#x2F;all.bak&#x2F;CentOS-Media.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-LocalMedia.repo</span><br><span class="line">vi &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-LocalMedia.repo </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># CentOS-LocalMedia.repo</span><br><span class="line">#</span><br><span class="line">#  This repo can be used with mounted DVD media, verify the mount point for</span><br><span class="line">#  CentOS-7.  You can use this repo and yum to install items directly off the</span><br><span class="line">#  DVD ISO that we release.</span><br><span class="line">#</span><br><span class="line"># To use this repo, put in your DVD and use it with the other repos too:</span><br><span class="line">#  yum --enablerepo&#x3D;c7-media [command]</span><br><span class="line">#</span><br><span class="line"># or for ONLY the media repo, do this:</span><br><span class="line">#</span><br><span class="line">#  yum --disablerepo&#x3D;\* --enablerepo&#x3D;c7-media [command]</span><br><span class="line"></span><br><span class="line">[c7-LocalMedia]</span><br><span class="line">name&#x3D;CentOS-$releasever - LocalMedia</span><br><span class="line">baseurl&#x3D;file:&#x2F;&#x2F;&#x2F;opt&#x2F;iso&#x2F;centos7</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">~                                                                                                                                                                                                                                                                             </span><br><span class="line">~                        </span><br></pre></td></tr></table></figure>
</li>
<li><p>保存退出后刷新YUM</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum list</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7下解决yum install mysql-server没有可用包</title>
    <url>/2018/09/03/centos7%E4%B8%8B%E8%A7%A3%E5%86%B3yum-install-mysql-server%E6%B2%A1%E6%9C%89%E5%8F%AF%E7%94%A8%E5%8C%85/</url>
    <content><![CDATA[<h2 id="安装从网上下载文件的wget命令"><a href="#安装从网上下载文件的wget命令" class="headerlink" title="安装从网上下载文件的wget命令"></a>安装从网上下载文件的wget命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# yum -y install wget</span><br></pre></td></tr></table></figure>
<h2 id="下载mysql的repo源"><a href="#下载mysql的repo源" class="headerlink" title="下载mysql的repo源"></a>下载mysql的repo源</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# wget http:&#x2F;&#x2F;repo.mysql.com&#x2F;mysql-community-release-el7-5.noarch.rpm </span><br></pre></td></tr></table></figure>
<h2 id="安装mysql-community-release-el7-5-noarch-rpm包"><a href="#安装mysql-community-release-el7-5-noarch-rpm包" class="headerlink" title="安装mysql-community-release-el7-5.noarch.rpm包"></a>安装mysql-community-release-el7-5.noarch.rpm包</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure>
<h2 id="查看下"><a href="#查看下" class="headerlink" title="查看下"></a>查看下</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# ls -1 &#x2F;etc&#x2F;yum.repos.d&#x2F;mysql-community*</span><br><span class="line">&#x2F;etc&#x2F;yum.repos.d&#x2F;mysql-community.repo</span><br><span class="line">&#x2F;etc&#x2F;yum.repos.d&#x2F;mysql-community-source.repo</span><br></pre></td></tr></table></figure>
<p>会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo。</p>
<h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@master ~]# yum install mysql-server</span><br></pre></td></tr></table></figure>

<h2 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service mysqld start</span><br></pre></td></tr></table></figure>

<h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UPDATE user SET Password&#x3D;PASSWORD(&#39;root&#39;) WHERE user&#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure>

<h2 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>docker搭建gitlab以及jenkins</title>
    <url>/2018/01/29/docker%E6%90%AD%E5%BB%BAgitlab/</url>
    <content><![CDATA[<h2 id="下载gitlab"><a href="#下载gitlab" class="headerlink" title="下载gitlab"></a>下载gitlab</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull  docker.io&#x2F;gitlab&#x2F;gitlab-ce</span><br></pre></td></tr></table></figure>

<h2 id="启动gitlab"><a href="#启动gitlab" class="headerlink" title="启动gitlab"></a>启动gitlab</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p &#x2F;opt&#x2F;data&#x2F;dockerData&#x2F;gitlab&#x2F;config</span><br><span class="line">mkdir -p &#x2F;opt&#x2F;data&#x2F;dockerData&#x2F;gitlab&#x2F;logs</span><br><span class="line">mkdir -p &#x2F;opt&#x2F;data&#x2F;dockerData&#x2F;gitlab&#x2F;data</span><br><span class="line">docker run --name&#x3D;&#39;gitlab-ce&#39; -d \</span><br><span class="line">       --restart always \</span><br><span class="line">       --publish 8443:443 --publish 8082:80 --publish 2222:22 \</span><br><span class="line">       --volume &#x2F;opt&#x2F;data&#x2F;dockerData&#x2F;gitlab&#x2F;config:&#x2F;etc&#x2F;gitlab \</span><br><span class="line">       --volume &#x2F;opt&#x2F;data&#x2F;dockerData&#x2F;gitlab&#x2F;logs:&#x2F;var&#x2F;log&#x2F;gitlab \</span><br><span class="line">       --volume &#x2F;opt&#x2F;data&#x2F;dockerData&#x2F;gitlab&#x2F;data:&#x2F;var&#x2F;opt&#x2F;gitlab \</span><br><span class="line">       docker.io&#x2F;gitlab&#x2F;gitlab-ce</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
        <tag>git</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建gitlab以及jenkins</title>
    <url>/2018/01/29/docker%E6%90%AD%E5%BB%BAjenkins/</url>
    <content><![CDATA[<h2 id="使用官方方法启动jenkins"><a href="#使用官方方法启动jenkins" class="headerlink" title="使用官方方法启动jenkins"></a>使用官方方法启动jenkins</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p &#x2F;opt&#x2F;data&#x2F;dockerData&#x2F;jenkins</span><br><span class="line">docker run --name myjenkins -d -p 8081:8080 -p 50000:50000 -v &#x2F;opt&#x2F;data&#x2F;dockerData&#x2F;jenkins:&#x2F;var&#x2F;jenkins_home jenkins</span><br></pre></td></tr></table></figure>

<h2 id="配置jenkins"><a href="#配置jenkins" class="headerlink" title="配置jenkins"></a>配置jenkins</h2><p>输入网之后自动下载插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.163.128:8181&#x2F;</span><br></pre></td></tr></table></figure>
<p>时刻注意docker 输出的日志，在网页中输入密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker logs -f myjenkins</span><br></pre></td></tr></table></figure>
<p>也可以在容器内<code> /var/jenkins_home/secrets/initialAdminPassword</code>找到</p>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>管理插件 <code>Maven Integration plugin</code></p>
<p>容器部署插件 <code>Deploy to container Plugin</code><br>点击<code>直接安装</code>即可</p>
<p>构建后操作<br>deploy war/ear to a container</p>
<p>配置tomcat管理员用户 tomcat-users.xml<br>配置tomcat端口 </p>
<p>参数化构建<br> string parameter<br> branch<br>test<br>默认分支</p>
<p>ll -lh -a 查看隐藏目录</p>
<p>生产环境使用ssh 来执行sh 脚本</p>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>geoserver自定义标记</title>
    <url>/2020/03/05/geoserver%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E8%AE%B0/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdlb3NlcnZlci5vcmcvbGF0ZXN0L2VuL3VzZXIvc3R5bGluZy9zbGQvZXh0ZW5zaW9ucy9wb2ludHN5bWJvbHMuaHRtbCNtYXJrcw==" title="https://docs.geoserver.org/latest/en/user/styling/sld/extensions/pointsymbols.html#marks">https://docs.geoserver.org/latest/en/user/styling/sld/extensions/pointsymbols.html#marks<i class="fa fa-external-link"></i></span></p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">StyledLayerDescriptor</span> <span class="attr">version</span>=<span class="string">&quot;1.0.0&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.opengis.net/sld StyledLayerDescriptor.xsd&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.opengis.net/sld&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:ogc</span>=<span class="string">&quot;http://www.opengis.net/ogc&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:xlink</span>=<span class="string">&quot;http://www.w3.org/1999/xlink&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- a Named Layer is the basic building block of an SLD document --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">NamedLayer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>experimenting transparent<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">UserStyle</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Styles can have names, titles and abstracts --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Title</span>&gt;</span>GeoServer Beginners Guide:transparent<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Abstract</span>&gt;</span>A sample style that draws a point<span class="tag">&lt;/<span class="name">Abstract</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- FeatureTypeStyles describe how to render different features --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- A FeatureTypeStyle for rendering points --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">FeatureTypeStyle</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Rule</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">Name</span>&gt;</span>rule1<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">Title</span>&gt;</span>Red Wingdings<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">Abstract</span>&gt;</span>A 6 pixel Wingdings with a red fill and no stroke<span class="tag">&lt;/<span class="name">Abstract</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--&lt;MaxScaleDenominator&gt;40000&lt;/MaxScaleDenominator&gt;--&gt;</span><span class="comment">&lt;!--设置点跟着比例次的显示效果--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">And</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">PropertyIsGreaterThanOrEqualTo</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">PropertyName</span>&gt;</span>freho_ratio<span class="tag">&lt;/<span class="name">PropertyName</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Literal</span>&gt;</span>0<span class="tag">&lt;/<span class="name">Literal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">PropertyIsGreaterThanOrEqualTo</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">And</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Filter</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">PointSymbolizer</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">Graphic</span>&gt;</span><span class="comment">&lt;!--这里可以设置为一个图片的格式--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Mark</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">WellKnownName</span>&gt;</span>ttf://Wingdings#0x0053<span class="tag">&lt;/<span class="name">WellKnownName</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">Fill</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;fill&quot;</span>&gt;</span>#92d050<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;fill-opacity&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">Fill</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">Stroke</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;stroke&quot;</span>&gt;</span>#000000<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;stroke-width&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">Stroke</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Mark</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">Size</span>&gt;</span>40<span class="tag">&lt;/<span class="name">Size</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">Rotation</span>&gt;</span>180<span class="tag">&lt;/<span class="name">Rotation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Graphic</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">PointSymbolizer</span>&gt;</span></span><br><span class="line">          </span><br><span class="line">          <span class="tag">&lt;<span class="name">TextSymbolizer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">PropertyName</span>&gt;</span>cell_num<span class="tag">&lt;/<span class="name">PropertyName</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Font</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;font-family&quot;</span>&gt;</span>Arial<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;font-size&quot;</span>&gt;</span>14<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;font-style&quot;</span>&gt;</span>normal<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;font-weight&quot;</span>&gt;</span>italyc<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Font</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">LabelPlacement</span>&gt;</span>            </span><br><span class="line">                <span class="tag">&lt;<span class="name">PointPlacement</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">AnchorPoint</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">AnchorPointX</span>&gt;</span>0.5<span class="tag">&lt;/<span class="name">AnchorPointX</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">AnchorPointY</span>&gt;</span>0<span class="tag">&lt;/<span class="name">AnchorPointY</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">AnchorPoint</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Displacement</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">DisplacementX</span>&gt;</span>0<span class="tag">&lt;/<span class="name">DisplacementX</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">DisplacementY</span>&gt;</span>0<span class="tag">&lt;/<span class="name">DisplacementY</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Displacement</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">PointPlacement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LabelPlacement</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">Fill</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">CssParameter</span> <span class="attr">name</span>=<span class="string">&quot;fill&quot;</span>&gt;</span>#000000<span class="tag">&lt;/<span class="name">CssParameter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Fill</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">TextSymbolizer</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">Rule</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">FeatureTypeStyle</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">UserStyle</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">NamedLayer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StyledLayerDescriptor</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其中最重要的就是<code>&lt;WellKnownName&gt;</code>标签包裹的字符串</p>
<h2 id="标准符号"><a href="#标准符号" class="headerlink" title="标准符号"></a>标准符号</h2><ul>
<li>square</li>
<li>circle</li>
<li>triangle</li>
<li>star </li>
<li>cross  (周围有空间的方形十字（不适合填充图案填充）)</li>
<li>x (正方形X，周围有空格（不适用于填充图案填充）)</li>
</ul>
<h2 id="字符符号"><a href="#字符符号" class="headerlink" title="字符符号"></a>字符符号</h2><p>一般使用 <code>Wingdings</code>,<code>WebDings</code> ,或者自定义字符文件</p>
<p>填写格式瑞安</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ttf:&#x2F;&#x2F;&lt;fontname&gt;#&lt;hexcode&gt;</span><br></pre></td></tr></table></figure>


<p><code>fontname</code>就是字符名称<br><code>hexcode</code>可以在<code>word</code>-&gt;<code>插入</code>-&gt;<code>符号</code>-&gt;<code>选择字体</code>-&gt;<code>选择16进制</code></p>
<p><img src="/2020/03/05/geoserver%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E8%AE%B0/image-20200305141827435.png" alt="image-20200305141827435"></p>
]]></content>
      <tags>
        <tag>geoserver</tag>
      </tags>
  </entry>
  <entry>
    <title>git核心概念</title>
    <url>/2018/08/05/git%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h2 id="git体系概述"><a href="#git体系概述" class="headerlink" title="git体系概述"></a>git体系概述</h2><h3 id="Git与Svn的主要区别"><a href="#Git与Svn的主要区别" class="headerlink" title="Git与Svn的主要区别"></a>Git与Svn的主要区别</h3><ol>
<li>存储方式</li>
<li>使用方式</li>
<li>管理模式</li>
</ol>
<h4 id="存储方式区别"><a href="#存储方式区别" class="headerlink" title="存储方式区别"></a>存储方式区别</h4><p>GIT把内容按元数据方式存储类似<code>k/v数据库</code>，而SVN是按文件(新版svn已改成元数据存储)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init zwq</span><br><span class="line"><span class="built_in">cd</span> zwq</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;zwq is good man&#x27;</span> &gt;&gt; README.md</span><br><span class="line">git hash-object -w README.md <span class="comment"># 这条命令是把 README.md 保存</span></span><br><span class="line"><span class="comment"># c8cdf0a87ead8c7bef480ac3d4a9241a4d6af84b # 相当于保存的key值，value就是文件</span></span><br><span class="line">git cat-file -p c8cdf0a87ead8c7bef480ac3d4a9241a4d6af84b <span class="comment"># 相当于用key取出value</span></span><br></pre></td></tr></table></figure>
<p>继续上面的例子,对<code>README.md</code>进行修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;zwq is good man 222&#39; &gt;&gt; README.md # 修改文件</span><br><span class="line">git hash-object -w README.md # 保存文件</span><br><span class="line"># 4924187ab143d526e4250334ca0d99ae5e04670c # 可以发现这一次的key与上次发生了变化,如果需要回滚就使用上一次的value进行回滚</span><br></pre></td></tr></table></figure>
<p>svn的原理就是将文件进行copy</p>
<h4 id="使用方式的区别"><a href="#使用方式的区别" class="headerlink" title="使用方式的区别"></a>使用方式的区别</h4><p>svn的基本使用过程</p>
<p><img src="/2018/08/05/git%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/image-47.png" alt="upload successful"></p>
<p>git的基本使用过程</p>
<p><img src="/2018/08/05/git%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/image-48.png" alt="upload successful"></p>
<h4 id="版本管理模式的区别"><a href="#版本管理模式的区别" class="headerlink" title="版本管理模式的区别"></a>版本管理模式的区别</h4><p>git 是一个分布式的版本管理系统<br><img src="/2018/08/05/git%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/image-49.png" alt="upload successful"></p>
<p>SVN是一个远程集中式的管理系统<br><img src="/2018/08/05/git%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/image-50.png" alt="upload successful"></p>
<blockquote>
<p>例如Linux项目，全世界有许许多多的人进行提交这时就需要分布式，每一个国家建立一个仓库，有每个国家的负责人进行对代码的审核，再提交到总仓库，这一点(提交量特别大)svn是做不到的</p>
</blockquote>
<h3 id="GIT核心命令使用"><a href="#GIT核心命令使用" class="headerlink" title="GIT核心命令使用"></a>GIT核心命令使用</h3><p>主要内容:</p>
<ol>
<li>git 客户端安装配置</li>
<li>整体认识GIT的基本使用</li>
<li>分支管理</li>
<li>标签管理</li>
<li>远程仓库配置</li>
</ol>
<h4 id="安装git-客户端安装"><a href="#安装git-客户端安装" class="headerlink" title="安装git 客户端安装"></a>安装git 客户端安装</h4><p>官方客户端：<span class="exturl" data-url="aHR0cHNkOi8vZ2l0LXNjbS5jb20vZG93bmxvYWRz" title="httpsd://git-scm.com/downloads">httpsd://git-scm.com/downloads<i class="fa fa-external-link"></i></span><br>其它客户端：<span class="exturl" data-url="aHR0cHM6Ly90b3J0b2lzZWdpdC5vcmcvZG93bmxvYWQv" title="https://tortoisegit.org/download/">https://tortoisegit.org/download/<i class="fa fa-external-link"></i></span></p>
<h4 id="认识git的基本使用"><a href="#认识git的基本使用" class="headerlink" title="认识git的基本使用"></a>认识git的基本使用</h4><ol>
<li>   git 项目创建与克隆</li>
<li>   文件提交与推送</li>
</ol>
<blockquote>
<p>完整模拟从项目添加到push 过程</p>
<ul>
<li>创建项目</li>
<li>初始化git仓库</li>
<li>提交文件</li>
<li>远程关联</li>
<li>push 至远程仓库</li>
</ul>
</blockquote>
<p>本地初始化GIT 仓库:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#基于远程仓库克隆至本地</span><br><span class="line">git clone &lt;remote_url&gt;</span><br><span class="line"></span><br><span class="line">#当前目录初始化为git 本地仓库</span><br><span class="line">git init  &lt;directory&gt;</span><br></pre></td></tr></table></figure>

<p>本地添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#添加指定文件至暂存区</span><br><span class="line">git add &lt;fileName&gt;</span><br><span class="line">#添加指定目录至暂存区</span><br><span class="line">git add &lt;directory&gt;</span><br><span class="line">#添加所有</span><br><span class="line">git add -A</span><br><span class="line">#将指定目录及子目录移除出暂存区</span><br><span class="line">git rm --cached target -r</span><br><span class="line">#添加勿略配置文件 .gitignore</span><br><span class="line">本地提交</span><br><span class="line">#提交至本地仓库</span><br><span class="line">git commit file -m &#39;提交评论&#39;</span><br><span class="line">#快捷提交至本地仓库</span><br><span class="line">git commit -am &#39;快添加与提交&#39;</span><br></pre></td></tr></table></figure>
<h4 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h4><h5 id="新建分支"><a href="#新建分支" class="headerlink" title="新建分支"></a>新建分支</h5><ul>
<li>基于当前分支  创建一个新分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch &lt;branch name&gt;</span><br></pre></td></tr></table></figure></li>
<li>基于远程分支  创建一个新分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch test2 origin&#x2F;master</span><br></pre></td></tr></table></figure></li>
<li>基于一个提交    创建一个新分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log  # 用该命令查看所有的提交操作，并记录下该操作的key（乱码标签）</span><br><span class="line">git branch &lt;branch name&gt; &lt;commit id&gt;</span><br></pre></td></tr></table></figure></li>
<li>基于Tag       创建一个新分支</li>
</ul>
<h5 id="查看当前分支"><a href="#查看当前分支" class="headerlink" title="查看当前分支"></a>查看当前分支</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch [-avv]</span><br></pre></td></tr></table></figure>
<blockquote>
<p> -avv 查看本地分支与远程关联分支 ,-av 查看所有分支及其最近一条提交记录</p>
</blockquote>
<h5 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -d &#123;dev&#125;</span><br></pre></td></tr></table></figure>

<h5 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout &lt;branch name&gt;</span><br></pre></td></tr></table></figure>

<h5 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge &lt;merge target&gt;</span><br><span class="line">#解决冲突，如果因冲突导致自动合并失败，此时 status 为mergeing 状态.</span><br><span class="line">#需要手动修改后重新提交（commit） </span><br></pre></td></tr></table></figure>

<h5 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h5><ul>
<li>切换到 master分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout master </span><br></pre></td></tr></table></figure></li>
<li>获取远程分支更新<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch origin</span><br></pre></td></tr></table></figure></li>
<li>尝试由git带来的自动合并<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge origin&#x2F;master     ##将origin&#x2F;master合并到当前分支  </span><br><span class="line">#如果两个分支的内容有差异，否则提示合并失败。</span><br><span class="line">#Auto-merging README.md  </span><br><span class="line">#CONFLICT (content): Merge conflict in README.md  </span><br><span class="line">#Automatic merge failed; fix conflicts and then commit the result.  </span><br></pre></td></tr></table></figure></li>
<li>查看冲突文件 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></li>
<li>手动解决冲突之后直接提交即可</li>
</ul>
<h4 id="远程仓库管理"><a href="#远程仓库管理" class="headerlink" title="远程仓库管理"></a>远程仓库管理</h4><h5 id="查看远程配置"><a href="#查看远程配置" class="headerlink" title="查看远程配置"></a>查看远程配置</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote [-v]</span><br></pre></td></tr></table></figure>
<h5 id="添加远程地址"><a href="#添加远程地址" class="headerlink" title="添加远程地址"></a>添加远程地址</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin http:xxx.xxx</span><br><span class="line">#第一次提交需要指定远程地址和分支</span><br><span class="line">git push --set-upstream origin master</span><br></pre></td></tr></table></figure>
<blockquote>
<p>一个仓库可以同时添加多个远程地址</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin2 http:xxx.xxx</span><br><span class="line">#使用第二个远程地址时需要与第一个区分,每次不同分支都需要重新绑定</span><br><span class="line">#可以使用git branch -avv 来查看具体绑定了哪一个远程</span><br><span class="line">git push --set-upstream origin2 master</span><br></pre></td></tr></table></figure>
<h5 id="删除远程地址"><a href="#删除远程地址" class="headerlink" title="删除远程地址"></a>删除远程地址</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote remove origin </span><br></pre></td></tr></table></figure>
<h5 id="上传新分支至远程"><a href="#上传新分支至远程" class="headerlink" title="上传新分支至远程"></a>上传新分支至远程</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push --set-upstream origin master </span><br></pre></td></tr></table></figure>
<h5 id="将本地分支与远程建立关联"><a href="#将本地分支与远程建立关联" class="headerlink" title="将本地分支与远程建立关联"></a>将本地分支与远程建立关联</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch --track --set-upstream-to&#x3D;origin&#x2F;test test</span><br></pre></td></tr></table></figure>

<h4 id="tag-管理"><a href="#tag-管理" class="headerlink" title="tag 管理"></a>tag 管理</h4><blockquote>
<p>tag一般和里程碑相关</p>
</blockquote>
<h5 id="查看当前"><a href="#查看当前" class="headerlink" title="查看当前"></a>查看当前</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure>
<h5 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git tag &lt;tag name&gt; &lt;branch name&gt;</span><br></pre></td></tr></table></figure>
<h5 id="删除分支-1"><a href="#删除分支-1" class="headerlink" title="删除分支"></a>删除分支</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git tag -d &lt;tag name&gt;</span><br></pre></td></tr></table></figure>


<h4 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h4><h5 id="查看当前分支下所有提交日志"><a href="#查看当前分支下所有提交日志" class="headerlink" title="查看当前分支下所有提交日志"></a>查看当前分支下所有提交日志</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure>
<h5 id="查看当前分支下所有提交日志-1"><a href="#查看当前分支下所有提交日志-1" class="headerlink" title="查看当前分支下所有提交日志"></a>查看当前分支下所有提交日志</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log &#123;branch&#125;</span><br></pre></td></tr></table></figure>
<h5 id="单行显示日志"><a href="#单行显示日志" class="headerlink" title="单行显示日志"></a>单行显示日志</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log --oneline</span><br></pre></td></tr></table></figure>
<h5 id="比较两个版本的区别"><a href="#比较两个版本的区别" class="headerlink" title="比较两个版本的区别"></a>比较两个版本的区别</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log master..experiment</span><br></pre></td></tr></table></figure>
<blockquote>
<p>master&lt;-experiment   experiment有多少没有提交到master<br>合并分支</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout experiment</span><br><span class="line">git merge master</span><br></pre></td></tr></table></figure>
<h5 id="以图表的方式显示提交合并网络"><a href="#以图表的方式显示提交合并网络" class="headerlink" title="以图表的方式显示提交合并网络"></a>以图表的方式显示提交合并网络</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log --pretty&#x3D;format:&#39;%h %s&#39; --graph</span><br></pre></td></tr></table></figure>
<h5 id="使用show查看详细日志"><a href="#使用show查看详细日志" class="headerlink" title="使用show查看详细日志"></a>使用show查看详细日志</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git show &lt;branch&gt;</span><br></pre></td></tr></table></figure>
<h3 id="git-底层原理"><a href="#git-底层原理" class="headerlink" title="git 底层原理"></a>git 底层原理</h3><ul>
<li>GIT存储对像</li>
<li>GIT树对像</li>
<li>GIT提交对像</li>
<li>GIT引用</li>
</ul>
<h4 id="GIT存储对像-hashMap"><a href="#GIT存储对像-hashMap" class="headerlink" title="GIT存储对像(hashMap)"></a>GIT存储对像(hashMap)</h4><blockquote>
<p>Git 是一个内容寻址文件系统，其核心部分是一个简单的键值对数据库（key-value data store），你可以向数据库中插入任意内容，它会返回一个用于取回该值的hash 键。</p>
</blockquote>
<h5 id="git-键值库中插入数据"><a href="#git-键值库中插入数据" class="headerlink" title="git 键值库中插入数据"></a>git 键值库中插入数据</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;zwq is good man&#x27;</span> | git hash-object -w --stdin</span><br><span class="line"><span class="comment"># 79362d07cf264f8078b489a47132afbc73f87b9a</span></span><br></pre></td></tr></table></figure>
<h5 id="基于键获取指定内容"><a href="#基于键获取指定内容" class="headerlink" title="基于键获取指定内容"></a>基于键获取指定内容</h5><p>Git基于该功能 把每个文件的版本中内容都保存在数据库中，当要进行版本回滚的时候就通过其中一个键将期取回并替换。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git cat-file -p 79362d07cf264f8078b489a47132afbc73f87b9a</span><br></pre></td></tr></table></figure>
<h5 id="模拟演示git-版写入与回滚过程"><a href="#模拟演示git-版写入与回滚过程" class="headerlink" title="模拟演示git 版写入与回滚过程"></a>模拟演示git 版写入与回滚过程</h5><ul>
<li>查找所有的git 对像<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find .git/objects/ -<span class="built_in">type</span> f</span><br></pre></td></tr></table></figure></li>
<li>写入版本1<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;version1&#39; &gt; README.MF; git hash-object -w README.MF;</span><br></pre></td></tr></table></figure></li>
<li>写入版本2<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;version2&#x27;</span> &gt; README.MF; git hash-object -w README.MF;</span><br></pre></td></tr></table></figure></li>
<li>写入版本3<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;version3&#x27;</span> &gt; README.MF; git hash-object -w README.MF;</span><br></pre></td></tr></table></figure></li>
<li>回滚指定版本<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git cat-file -p c11e96db44f7f3bc4c608aa7d7cd9ba4ab25066e &gt; README.MF</span><br></pre></td></tr></table></figure>
所以我们平常用的 <code>git add</code> 其实就是把修改之后的内容 插入到键值库中。当我们执行 <code>git add README.MF</code> 等同于执行了<code> git hash-object -w README.MF</code> 把文件写到数据库中。   </li>
</ul>
<p>我们解决了存储的问题，但其只能存储内容同并没有存储文件名，如果要进行回滚 怎么知道哪个内容对应哪个文件呢？接下要讲的就是树对象，它解决了文件名存储的问题 。</p>
<h4 id="GIT树对像"><a href="#GIT树对像" class="headerlink" title="GIT树对像"></a>GIT树对像</h4><p>树对像解决了文件名的问题，它的目的将多个文件名组织在一起，其内包含多个文件名称与其对应的Key和其它树对像的用引用，可以理解成操作系统当中的文件夹，一个文件夹包含多个文件和多个其它文件夹。</p>
<p>每一个分支当中都关联了一个树对像，他存储了当前分支下所有的文件名及对应的 key.<br>通过以下命令即可查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看分支树</span></span><br><span class="line"> git cat-file -p master^&#123;tree&#125; </span><br></pre></td></tr></table></figure>
<h4 id="git提交对象"><a href="#git提交对象" class="headerlink" title="git提交对象"></a>git提交对象</h4><p>一次提交即为当前版本的一个快照，该快照就是通过提交对像保存，其存储的内容为：一个顶级树对象、上一次提交的对像啥希、提交者用户名及邮箱、提交时间戳、提交评论。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git cat-file -p b2395925b5f1c12bf8cb9602f05fc8d580311836</span><br><span class="line">tree 002adb8152f7cd49f400a0480ef2d4c09b060c07</span><br><span class="line">parent 8be903f5e1046b851117a21cdc3c80bdcaf97570</span><br><span class="line">author tommy &lt;tommy@tuling.com&gt; 1532959457 +0800</span><br><span class="line">committer tommy &lt;tommy@tuling.com&gt; 1532959457 +0800</span><br></pre></td></tr></table></figure>
<p>通过上面的知识，我们可以推测出从修改一个文件到提交的过程总共生成了三个对像：</p>
<blockquote>
<p>一个内容对象 ==&gt; 存储了文件内容<br>一个树对像 ==&gt; 存储了文件名及内容对像的key<br>一个提交对像 ==&gt; 存储了树对像的key 及提交评论。 </p>
</blockquote>
<h4 id="GIT引用"><a href="#GIT引用" class="headerlink" title="GIT引用"></a>GIT引用</h4><p>当我们执行 <code>git branch &#123;branchName&#125;</code> 时创建了一个分支，其本质就是在git 基于指定提交创建了一个引用文件，保存在 <code>.git\refs\heads\ </code>下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch dev </span><br><span class="line">cat.git\refs\heads\dev</span><br></pre></td></tr></table></figure>
<blockquote>
<p>git 总共 有三种类型的引用：</p>
<ol>
<li>   分支引用</li>
<li>   远程分支引用</li>
<li>   标签引用</li>
</ol>
</blockquote>
<h5 id="查询比较两个版本"><a href="#查询比较两个版本" class="headerlink" title="查询比较两个版本"></a>查询比较两个版本</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log master..experiment</span><br></pre></td></tr></table></figure>

<h5 id="版本提交历史网络"><a href="#版本提交历史网络" class="headerlink" title="版本提交历史网络"></a>版本提交历史网络</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log --pretty&#x3D;format:&#39;%h %s&#39; --graph</span><br></pre></td></tr></table></figure>

<h5 id="查看分支树"><a href="#查看分支树" class="headerlink" title="查看分支树"></a>查看分支树</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git cat-file -p master^&#123;tree&#125;</span><br></pre></td></tr></table></figure>

<h3 id="git-push-流程"><a href="#git-push-流程" class="headerlink" title="git push 流程"></a>git push 流程</h3><p><img src="/2018/08/05/git%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/image-54.png" alt="upload successful"></p>
<h3 id="git的帮助文档"><a href="#git的帮助文档" class="headerlink" title="git的帮助文档"></a>git的帮助文档</h3><p><img src="/2018/08/05/git%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/image-55.png" alt="upload successful"></p>
<h3 id="GIT问题点"><a href="#GIT问题点" class="headerlink" title="GIT问题点"></a>GIT问题点</h3><p><strong><span style="color:#FF0000">1. 怎么知道当前分支是从那一个分支上面拉取下来的？</span></strong><br>答：每个本地分支都可以和远程分支建立关联，通过 git branch -avv 就可以查看<br>在git clone 远程分支，或push 本地分支到远程的时候会自动建立关联。<br>也可以手动强行建立关联通过如下命令：git branch –track –set-upstream-to=origin/test test</p>
<p><strong><span style="color:#FF0000">2. 创建分支都是从某个已存在的分支上面拉取的，但是老师讲课的时候直接git branch xxx<br>请问如果现在有很多分支，那么当前拉取的分支是属于哪一个分支？</span></strong><br> 答：git branch xxx 意思是基于当前激活分支创建一个新分支，通过 git checkout {分支} 切换当前分支。</p>
<p><strong><span style="color:#FF0000">3. 假如我一次性改了多个文件  git show 那么显示的是哪一个修改的文件 还是把多个修改的文件都展示出来</span></strong><br>答：git show {分支} 会显示指定分支最后一次提交所变更的所有文件。</p>
<p><strong><span style="color:#FF0000">4. push 后tree 这些对象会消失吗？</span></strong><br> 答：push 之后Tree对象不会消失，而且还会拷贝到远程仓库。原则上来讲，GIT内部的对象都不应该被删除，否则就损坏了GIT仓库快照</p>
<p><strong><span style="color:#FF0000">5. 切换分支的时候，没有分支名称怎么搞，分支名称显示个commitId<br>     类似于老师这种情况，如果我想用这个分支，怎么搞。曾经为此丢过一次代码。</span></strong><br>答：分支名称显示commitid,是因为你切换到了一个只读分支。（远程分支下载到本地之后就是只读的），<br>如果要修改这个分支 ，就必须基于该分支创建一个新分支。另外在冲突状态下，不允许切换分支。</p>
<p><strong><span style="color:#FF0000">6. 为什么一个分支，比如我7-31号建立分支a，同事8-1建立分支b，此时我查看分支，看不到同事建立的分支b，必须把代码干掉，或者重新新搞一个文件夹，才可以读取到这个分支？</span></strong><br>答：通过git fetch  可以把 远程分支更新下来，git branch -avv 是可以查看到B分支的。<br>但你要使用B分支，就必须基于远程分支新建一个本地B分支并与远程B分支建立关联，并切换过去。在Eclipe 或idea 其实就是checkout 远程分支操作</p>
<p><strong><span style="color:#FF0000">7. 报错git: ‘credential-cache’ is not a git command. See ‘git –help’.</span></strong><br>答：这是git的版本问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper wincred</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper winstore</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git简易总结</title>
    <url>/2018/08/05/git%E7%AE%80%E6%98%93%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="git简易总结"><a href="#git简易总结" class="headerlink" title="git简易总结"></a>git简易总结</h2><p><img src="https://img-blog.csdn.net/20170727114820325?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzAyMjc0Mjk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p>
<h3 id="原版链接"><a href="#原版链接" class="headerlink" title="原版链接"></a>原版链接</h3><p>git简易总结：<span class="exturl" data-url="aHR0cDovL3d3dy5ib290Y3NzLmNvbS9wL2dpdC1ndWlkZS8=" title="http://www.bootcss.com/p/git-guide/">http://www.bootcss.com/p/git-guide/<i class="fa fa-external-link"></i></span></p>
<h3 id="复制版"><a href="#复制版" class="headerlink" title="复制版"></a>复制版</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><span class="exturl" data-url="aHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL2dpdC1vc3gtaW5zdGFsbGVyL2Rvd25sb2Fkcy9saXN0P2Nhbj0z" title="http://code.google.com/p/git-osx-installer/downloads/list?can=3">下载 git OSX 版<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL21zeXNnaXQvZG93bmxvYWRzL2xpc3Q/Y2FuPTM=" title="http://code.google.com/p/msysgit/downloads/list?can=3">下载 git OSX 版<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL2Jvb2suZ2l0LXNjbS5jb20vMl9pbnN0YWxsaW5nX2dpdC5odG1s" title="http://book.git-scm.com/2_installing_git.html">下载 git Linux 版<i class="fa fa-external-link"></i></span>   </p>
<h3 id="创建新仓库"><a href="#创建新仓库" class="headerlink" title="创建新仓库"></a>创建新仓库</h3><p>创建新文件夹，打开，然后执行 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<p>以创建新的 git 仓库。</p>
<h3 id="检出仓库"><a href="#检出仓库" class="headerlink" title="检出仓库"></a>检出仓库</h3><p>执行如下命令以创建一个本地仓库的克隆版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> /path/to/repository </span><br></pre></td></tr></table></figure>
<p>如果是远端服务器上的仓库，你的命令会是这个样子：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> username@host:/path/to/repository</span><br></pre></td></tr></table></figure>
<h3 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h3><p>你的本地仓库由 git 维护的三棵“树”组成。第一个是你的<code>工作目录</code>，它持有实际文件；第二个是<code>缓存区（Index）</code>，它像个缓存区域，临时保存你的改动；最后是 <code>HEAD</code>，指向你最近一次提交后的结果。<br><img src="/2018/08/05/git%E7%AE%80%E6%98%93%E6%80%BB%E7%BB%93/image-52.png" alt="upload successful"></p>
<h3 id="添加与提交"><a href="#添加与提交" class="headerlink" title="添加与提交"></a>添加与提交</h3><p>你可以计划改动（把它们添加到缓存区），使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add &lt;filename&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add *</span><br></pre></td></tr></table></figure>
<p>这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;代码提交信息&quot;</span></span><br></pre></td></tr></table></figure>
<p>现在，你的改动已经提交到了<code>HEAD</code>，但是还没到你的远端仓库。</p>
<h3 id="推送改动"><a href="#推送改动" class="headerlink" title="推送改动"></a>推送改动</h3><p>你的改动现在已经在本地仓库的<code>HEAD</code>中了。执行如下命令以将这些改动提交到远端仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
<p>可以把 master 换成你想要推送的任何分支。    </p>
<p>如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin &lt;server&gt;</span><br></pre></td></tr></table></figure>
<p>如此你就能够将你的改动推送到所添加的服务器上去了。</p>
<h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”。在其他分支上进行开发，完成后再将它们合并到主分支上。<br><img src="/2018/08/05/git%E7%AE%80%E6%98%93%E6%80%BB%E7%BB%93/image-53.png" alt="upload successful"><br>创建一个叫做“feature_x”的分支，并切换过去：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b feature_x</span><br></pre></td></tr></table></figure>
<p>切换回主分支：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure>
<p>再把新建的分支删掉：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d feature_x</span><br></pre></td></tr></table></figure>
<p>除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin &lt;branch&gt;</span><br></pre></td></tr></table></figure>
<h3 id="更新与合并"><a href="#更新与合并" class="headerlink" title="更新与合并"></a>更新与合并</h3><p>要更新你的本地仓库至最新改动，执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p>以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。<br>要合并其他分支到你的当前分支（例如 master），执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure>
<p>两种情况下，git 都会尝试去自动合并改动。不幸的是，自动合并并非次次都能成功，并可能导致 冲突（conflicts）。 这时候就需要你修改这些文件来人肉合并这些 冲突（conflicts） 了。改完之后，你需要执行如下命令以将它们标记为合并成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add &lt;filename&gt;</span><br></pre></td></tr></table></figure>
<p>在合并改动之前，也可以使用如下命令查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff &lt;source_branch&gt; &lt;target_branch&gt;</span><br></pre></td></tr></table></figure>
<h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>在软件发布时创建标签，是被推荐的。这是个旧有概念，在 SVN 中也有。可以执行如下命令以创建一个叫做 1.0.0 的标签：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git tag 1.0.0 1b2e1d63ff</span><br></pre></td></tr></table></figure>
<p>1b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符。使用如下命令获取提交 ID：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<p>你也可以用该提交 ID 的少一些的前几位，只要它是唯一的。</p>
<h3 id="替换本地改动"><a href="#替换本地改动" class="headerlink" title="替换本地改动"></a>替换本地改动</h3><p>假如你做错事（自然，这是不可能的），你可以使用如下命令替换掉本地改动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -- &lt;filename&gt;</span><br></pre></td></tr></table></figure>
<p>此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到缓存区的改动，以及新文件，都不受影响。   </p>
<p>假如你想要丢弃你所有的本地改动与提交，可以到服务器上获取最新的版本并将你本地主分支指向到它：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git fetch origin</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --hard origin/master</span><br></pre></td></tr></table></figure>
<h3 id="有用的贴士"><a href="#有用的贴士" class="headerlink" title="有用的贴士"></a>有用的贴士</h3><p>内建的图形化 git：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gitk</span><br></pre></td></tr></table></figure>
<p>彩色的 git 输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config color.ui <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>显示历史记录时，只显示一行注释信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config format.pretty oneline</span><br></pre></td></tr></table></figure>
<p>交互地添加文件至缓存区：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add -i</span><br></pre></td></tr></table></figure>

<h3 id="gitignore-忽略文件"><a href="#gitignore-忽略文件" class="headerlink" title=".gitignore 忽略文件"></a>.gitignore 忽略文件</h3><p>在项目根路径下添加<code>.gitignore</code>文件,在其中填写需要过滤的文件</p>
<p>如果不生效则执行以下命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;comment&quot;</span></span><br></pre></td></tr></table></figure>


<h4 id="通过网站生成-推荐"><a href="#通过网站生成-推荐" class="headerlink" title="通过网站生成(推荐)"></a>通过网站生成(推荐)</h4><blockquote>
<p>最简单粗暴的方法</p>
</blockquote>
<p>登陆网站生成文件 ：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2l0aWdub3JlLmlvLw==" title="https://www.gitignore.io/">https://www.gitignore.io/<i class="fa fa-external-link"></i></span></p>
<h4 id="通过git方式生成-推荐"><a href="#通过git方式生成-推荐" class="headerlink" title="通过git方式生成(推荐)"></a>通过git方式生成(推荐)</h4><blockquote>
<p>与系统无关,速度快无依赖(一般修改此文件的系统都会安装git)</p>
</blockquote>
<p>在windows下使用<code>git bash</code>安装,使用其他命令行工具可能无法安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global alias.ignore &#39;!gi() &#123; curl -L -s https:&#x2F;&#x2F;www.gitignore.io&#x2F;api&#x2F;$@ ;&#125;; gi&#39;</span><br></pre></td></tr></table></figure>

<p>查看所有支持的选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git ignore list</span><br></pre></td></tr></table></figure>

<p>生成文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git ignore java,python &gt;&gt; .gitignore</span><br></pre></td></tr></table></figure>


<h4 id="使用nodejs安装add-gitignore-命令行方式"><a href="#使用nodejs安装add-gitignore-命令行方式" class="headerlink" title="使用nodejs安装add-gitignore(命令行方式)"></a>使用nodejs安装add-gitignore(命令行方式)</h4><blockquote>
<p>只要安装nodejs与系统无关,且有搜索提示功能,但是启动速度慢</p>
</blockquote>
<p>使用最新版本<code>node</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npx add-gitignore</span><br></pre></td></tr></table></figure>
<p>如果<code>node</code>版本过低</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i -g add-gitignore</span><br></pre></td></tr></table></figure>
<p>安装完成之后直接使用<code>add-gitignore</code>即可添加文件,使用空格确定选项,删除重新选择下一个,按<code>Enter</code>生成文件</p>
<p><img src="/2018/08/05/git%E7%AE%80%E6%98%93%E6%80%BB%E7%BB%93/image-75.png" alt="upload successful"></p>
<h4 id="在Windows中安装命令行客户端"><a href="#在Windows中安装命令行客户端" class="headerlink" title="在Windows中安装命令行客户端"></a>在Windows中安装命令行客户端</h4><blockquote>
<p>只需要添加一个cmd文件,且需要安装curl</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@rem Do not use <span class="string">&quot;echo off&quot;</span> to not affect any child calls.</span><br><span class="line">@setlocal</span><br><span class="line"></span><br><span class="line">@rem Get the abolute path to the parent directory, <span class="built_in">which</span> is assumed to be the</span><br><span class="line">@rem Git installation root.</span><br><span class="line">@<span class="keyword">for</span> /F <span class="string">&quot;delims=&quot;</span> %%I <span class="keyword">in</span> (<span class="string">&quot;%~dp0..&quot;</span>) <span class="keyword">do</span> @<span class="built_in">set</span> git_install_root=%%~fI</span><br><span class="line">@<span class="keyword">for</span> /F <span class="string">&quot;delims=&quot;</span> %%I <span class="keyword">in</span> (<span class="string">&quot;%~dp0..&quot;</span>) <span class="keyword">do</span> @<span class="built_in">set</span> git_mingw_root=%%~fI\mingw</span><br><span class="line">@<span class="keyword">if</span> not exist <span class="string">&quot;%git_mingw_root%&quot;</span> @<span class="built_in">set</span> git_mingw_root=%git_install_root%\mingw64</span><br><span class="line">@<span class="built_in">set</span> PATH=%git_install_root%\bin;%git_mingw_root%\bin;%PATH%</span><br><span class="line"></span><br><span class="line">@<span class="keyword">if</span> not exist <span class="string">&quot;%HOME%&quot;</span> @<span class="built_in">set</span> HOME=%HOMEDRIVE%%HOMEPATH%</span><br><span class="line">@<span class="keyword">if</span> not exist <span class="string">&quot;%HOME%&quot;</span> @<span class="built_in">set</span> HOME=%USERPROFILE%</span><br><span class="line"></span><br><span class="line">@curl.exe -L -s https://www.gitignore.io/api/%*</span><br></pre></td></tr></table></figure>
<p>将以上命令存在<code>git</code>的安装目录中的<code>cmd</code>目录下,存为<code>gi.cmd</code>   </p>
<p>之后可以使用一下命令来添加</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gi java,python &gt;&gt; .gitignore</span><br></pre></td></tr></table></figure>
<h4 id="在Linux中安装命令行客户端"><a href="#在Linux中安装命令行客户端" class="headerlink" title="在Linux中安装命令行客户端"></a>在Linux中安装命令行客户端</h4><blockquote>
<p>一行命令无其他依赖</p>
</blockquote>
<p>bash客户端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;function gi() &#123; curl -L -s https://www.gitignore.io/api/\$@ ;&#125;&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
<p>zsh客户端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/zsh</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;function gi() &#123; curl -L -s https://www.gitignore.io/api/\$@ ;&#125;&quot;</span> &gt;&gt; ~/.zshrc &amp;&amp; <span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>
<p>fish客户端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/fish</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">printf</span> <span class="string">&quot;function gi\n\tcurl -L -s https://www.gitignore.io/api/\$argv\nend\n&quot;</span> &gt; ~/.config/fish/<span class="built_in">functions</span>/gi.fish</span><br></pre></td></tr></table></figure>

<h4 id="原理解析"><a href="#原理解析" class="headerlink" title="原理解析"></a>原理解析</h4><p>以上方案都来自于：   </p>
<blockquote>
<p>github： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pvZWJsYXUvZ2l0aWdub3JlLmlv" title="https://github.com/joeblau/gitignore.io">https://github.com/joeblau/gitignore.io<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p>以上方式的原理几乎都是通过<code>https://www.gitignore.io/api/</code>的API来实现的。</p>
<h3 id="链接与资源"><a href="#链接与资源" class="headerlink" title="链接与资源"></a>链接与资源</h3><p>图形化界面<br><span class="exturl" data-url="aHR0cDovL2dpdHgubGF1bGxvbi5jb20v" title="http://gitx.laullon.com/">GitX (L) (OSX, open source)<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5naXQtdG93ZXIuY29tLw==" title="http://www.git-tower.com/">Tower (OSX)<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5zb3VyY2V0cmVlYXBwLmNvbS8=" title="http://www.sourcetreeapp.com/">Source Tree (OSX, free)<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL21hYy5naXRodWIuY29tLw==" title="http://mac.github.com/">GitHub for Mac (OSX, free)<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2diL2FwcC9naXRib3gvaWQ0MDMzODgzNTc/bXQ9MTI=" title="https://itunes.apple.com/gb/app/gitbox/id403388357?mt=12">GitBox (OSX)<i class="fa fa-external-link"></i></span><br>指南与手册<br><span class="exturl" data-url="aHR0cDovL2Jvb2suZ2l0LXNjbS5jb20v" title="http://book.git-scm.com/">Git 社区参考书<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3Byb2dpdC5vcmcvYm9vay8=" title="http://progit.org/book/">专业 Git<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3RoaW5rLWxpa2UtYS1naXQubmV0Lw==" title="http://think-like-a-git.net/">如 git 思考<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL2hlbHAuZ2l0aHViLmNvbS8=" title="http://help.github.com/">GitHub 帮助<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL21hcmtsb2RhdG8uZ2l0aHViLmNvbS92aXN1YWwtZ2l0LWd1aWRlL2luZGV4LWVuLmh0bWw=" title="http://marklodato.github.com/visual-git-guide/index-en.html">图形化的 Git 指南一则<i class="fa fa-external-link"></i></span></p>
<h2 id="git图片版帮助总结"><a href="#git图片版帮助总结" class="headerlink" title="git图片版帮助总结"></a>git图片版帮助总结</h2><p><img src="/2018/08/05/git%E7%AE%80%E6%98%93%E6%80%BB%E7%BB%93/image-51.png" alt="upload successful"></p>
<h2 id="其他资料"><a href="#其他资料" class="headerlink" title="其他资料"></a>其他资料</h2><p><span class="exturl" data-url="aHR0cDovL3d3dy5ib290Y3NzLmNvbS9wL2dpdC1ndWlkZS8=" title="http://www.bootcss.com/p/git-guide/">git简易总结<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC80ODJiMzI3MTZiYmU=" title="https://www.jianshu.com/p/482b32716bbe">[Githug]Git 游戏通关流程<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cubGlhb3h1ZWZlbmcuY29tL3dpa2kvMDAxMzczOTUxNjMwNTkyOTYwNmRkMTgzNjEyNDg1NzhjNjdiODA2N2M4YzAxN2IwMDA=" title="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000"> 廖雪峰的官方网站<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9iYWNrbG9nLmNvbS9naXQtdHV0b3JpYWwvY24v" title="https://backlog.com/git-tutorial/cn/">猴子都能懂的GIT入门<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9sZWdhY3kuZ2l0Ym9vay5jb20vYm9vay9iaW5nb2h1YW5nL3Byb2dpdDIvZGV0YWlscw==" title="https://legacy.gitbook.com/book/bingohuang/progit2/details">Pro Git 第二版 简体中文<i class="fa fa-external-link"></i></span></p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hadoop本地调试环境搭建</title>
    <url>/2018/03/21/hadoop%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==" title="https://hexo.io/">Hexo<i class="fa fa-external-link"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv" title="https://hexo.io/docs/">documentation<i class="fa fa-external-link"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=" title="https://hexo.io/docs/troubleshooting.html">troubleshooting<i class="fa fa-external-link"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==" title="https://github.com/hexojs/hexo/issues">GitHub<i class="fa fa-external-link"></i></span>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s" title="https://hexo.io/docs/writing.html">Writing<i class="fa fa-external-link"></i></span></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=" title="https://hexo.io/docs/server.html">Server<i class="fa fa-external-link"></i></span></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s" title="https://hexo.io/docs/generating.html">Generating<i class="fa fa-external-link"></i></span></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZGVwbG95bWVudC5odG1s" title="https://hexo.io/docs/deployment.html">Deployment<i class="fa fa-external-link"></i></span></p>
]]></content>
  </entry>
  <entry>
    <title>idea以及其插件破解方法</title>
    <url>/2018/06/11/idea%E4%BB%A5%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>github <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lsYW55dQ==" title="https://github.com/ilanyu">https://github.com/ilanyu<i class="fa fa-external-link"></i></span><br>原文地址<span class="exturl" data-url="aHR0cDovL2Jsb2cubGFueXVzLmNvbS9hcmNoaXZlcy8xNzQuaHRtbA==" title="http://blog.lanyus.com/archives/174.html">http://blog.lanyus.com/archives/174.html<i class="fa fa-external-link"></i></span><br>本地备份 <a href="%5Cfiles%5CIntelliJIDEALicenseServer(v1.6).zip">IntelliJIDEALicenseServer(v1.6).zip)</a><br>反向代理工具 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lsYW55dS9SZXZlcnNlUHJveHkvcmVsZWFzZXMvbGF0ZXN0" title="https://github.com/ilanyu/ReverseProxy/releases/latest">https://github.com/ilanyu/C/releases/latest<i class="fa fa-external-link"></i></span><br>本地备份  <a href="%5Cfiles%5CReverseProxy_windows_amd64.exe">ReverseProxy_windows_amd64.exe</a>   </p>
</blockquote>
<p>已经公开的地址</p>
<ul>
<li><span class="exturl" data-url="aHR0cDovL2J0c2hhLmNvbTo0MTAxNy8=" title="http://btsha.com:41017/">http://btsha.com:41017/<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL2lkZWEuc3VubGVvbi50b3Av" title="http://idea.sunleon.top/">http://idea.sunleon.top<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="IDEA激活方法"><a href="#IDEA激活方法" class="headerlink" title="IDEA激活方法"></a>IDEA激活方法</h2><p>得到<code>IntelliJIDEALicenseServer(v1.6).zip)</code>解压,<strong>由于127.0.0.1被封杀<span style="color
:#FF0000">不可以在本地启动</span>,需要部署在虚拟机或者局域网内恰机器使用</strong></p>
<p><img src="/2018/06/11/idea%E4%BB%A5%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/image-27.png" alt="upload successful"></p>
<p>选择对应的系统双击打开运行<br><img src="/2018/06/11/idea%E4%BB%A5%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/image-28.png" alt="upload successful"></p>
<p>直接激活即可<br><img src="/2018/06/11/idea%E4%BB%A5%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/image-29.png" alt="upload successful"></p>
<h2 id="JRebel激活方法"><a href="#JRebel激活方法" class="headerlink" title="JRebel激活方法"></a>JRebel激活方法</h2><p>双击启动反向代理工具ReverseProxy,使用<span class="exturl" data-url="aHR0cDovL3d3dy5vZm1vbmtleS5jb20vdHJhbnNmZXIvZ3VpZA==" title="http://www.ofmonkey.com/transfer/guid">GUID在线生成器<i class="fa fa-external-link"></i></span>生成<code>GUID</code>放入链接后面即可激活,邮箱可以随便填</p>
<blockquote>
<p><a href="http://127.0.0.1:8888/aac932a7-3da3-47ae-b6db-975746356061">http://127.0.0.1:8888/aac932a7-3da3-47ae-b6db-975746356061</a></p>
</blockquote>
<p><img src="/2018/06/11/idea%E4%BB%A5%E5%8F%8A%E5%85%B6%E6%8F%92%E4%BB%B6%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/image-30.png" alt="upload successful"></p>
]]></content>
      <tags>
        <tag>idea</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>idea插件</title>
    <url>/2019/02/25/idea%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="Lombok-plugin"><a href="#Lombok-plugin" class="headerlink" title="Lombok plugin"></a>Lombok plugin</h3><p>开发神器，可以简化你的实体类，让你i不再写get/set方法，还能快速的实现builder模式，以及链式调用方法，总之就是为了简化实体类而生的插件。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-88.png" alt="upload successful"></p>
<h3 id="CamelCase"><a href="#CamelCase" class="headerlink" title="CamelCase"></a>CamelCase</h3><p>将不是驼峰格式的名称，快速转成驼峰格式，安装好后，选中要修改的名称，按快捷键<span style="red">shift+alt+u</span>。<br>idea</p>
<h3 id="ignore"><a href="#ignore" class="headerlink" title=".ignore"></a>.ignore</h3><p>git提交时过滤掉不需要提交的文件，很方便，有些本地文件是不需要提交到Git上的</p>
<h3 id="JRebel-for-IntelliJ"><a href="#JRebel-for-IntelliJ" class="headerlink" title="JRebel for IntelliJ"></a>JRebel for IntelliJ</h3><p>一款热部署插件，只要不是修改了项目的配置文件，用它都可以实现热部署。收费的，破解比较麻烦。不过功能确实很强大。算是开发必备神器了。热部署快捷键是control+F9/command+F9。</p>
<h3 id="MybatisX"><a href="#MybatisX" class="headerlink" title="MybatisX"></a>MybatisX</h3><p>Mybatis-Plus神器<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-89.png" alt="upload successful"></p>
<h3 id="codehelper-generator"><a href="#codehelper-generator" class="headerlink" title="codehelper.generator"></a>codehelper.generator</h3><p>可以让你在创建一个对象并赋值的时候，快速的生成代码，不需要一个一个属性的向里面set,根据new关键字，自动生成掉用set方法的代码，还可以一键填入默认值。<br>可以让你在创建一个对象并赋值的时候，快速的生成代码，不需要一个一个属性的向里面set,根据new关键字，自动生成掉用set方法的代码，还可以一键填入默认值。</p>
<p>GenAllSetter 特性</p>
<ul>
<li>在Java方法中, 根据 <code>new</code> 关键词, 为Java Bean 生成所有Setter方法。</li>
<li>按GenAllSetter键两次, 会为Setter方法生成默认值。</li>
<li>可在<code>Intellij Idea</code>中为<code>GenAllSetter</code>设置快捷键。</li>
<li>如何使用:<ul>
<li>将光标移动到 <code>new</code> 语句的下一行。</li>
<li>点击主菜单Tools-&gt; Codehelper-&gt; GenAllSetter, 或者按下<code>GenAllSetter</code>快捷键。</li>
</ul>
</li>
<li>GenDaoCode 特性<ul>
<li>根据Pojo 文件一键生成 Dao，Service，Xml，Sql文件。</li>
<li>Pojo文件更新后一键更新对应的Sql和mybatis xml文件。</li>
<li>提供insert，insertList，update，select，delete五种方法。</li>
<li>能够批量生成多个Pojo的对应的文件。</li>
<li>自动将pojo的注释添加到对应的Sql文件的注释中。</li>
<li>丰富的配置，如果没有配置文件，则会使用默认配置。</li>
<li>可以在Intellij Idea中快捷键配置中配置快捷键。</li>
<li>目前支持MySQL + Java，后续会支持更多的DB。</li>
<li>如果喜欢我们的插件，非常感谢您的分享。</li>
</ul>
</li>
<li>GenDaoCode 使用方法<ul>
<li>主菜单Tools-&gt; Codehelper-&gt; GenDaoCode 按键便可生成代码。</li>
<li>方法一：点击GenDaoCode，然后根据提示框输入Pojo名字，多个Pojo以 | 分隔。</li>
<li>Codehelper Generator会根据默认配置为您生成代码。</li>
<li>方法二：在工程目录下添加文件名为codehelper.properties的文件。</li>
<li>点击GenDaoCode，Codehelper Generator会根据您的配置文件为您生成代码</li>
</ul>
</li>
</ul>
<p><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-90.png" alt="upload successful"></p>
<p><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-91.png" alt="upload successful"></p>
<h3 id="CodeGlance"><a href="#CodeGlance" class="headerlink" title="CodeGlance"></a>CodeGlance</h3><p>在编辑区的右侧显示的代码地图。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-93.png" alt="upload successful"></p>
<h3 id="Rainbow-Brackets"><a href="#Rainbow-Brackets" class="headerlink" title="Rainbow Brackets"></a>Rainbow Brackets</h3><p>彩虹颜色的括号  看着很舒服 敲代码效率变高<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-94.png" alt="upload successful"></p>
<h3 id="Grep-Console"><a href="#Grep-Console" class="headerlink" title="Grep Console"></a>Grep Console</h3><p>java 开发的过程中，日志都会输出到console，输出的内容是非常多的，所以需要有一个工具可以方便的查找日志，或者可以非常明显显示我们关注的内容，grep console就是这样的一个工具。<br>安装完成后，在console中右键就能打开。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-103.png" alt="upload successful"><br>并且可以设置不同的日志级别的显示样式。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-104.png" alt="upload successful"><br>我就把ERROR设置为红色，比较容易看到。<br>当然，也可以直接根据关键字搜索你想要的。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-105.png" alt="upload successful"><br>最赞的是，搜索条件是支持正则表达式的。基本能满足所有的需求了。</p>
<h3 id="Maven-Helper"><a href="#Maven-Helper" class="headerlink" title="Maven Helper"></a>Maven Helper</h3><p>这个一个必须与maven一起工作的插件。它提供了运行/调试当前测试文件的功能。 如果maven-surefire-plugin配置为跳过或排除测试，“verify”目标将会被启用。它还提供了运行/调试当前文件所在模块的快捷操作，以及简化查找和排除冲突依赖关系的方法。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-96.png" alt="upload successful"><br>官方网站<span class="exturl" data-url="aHR0cDovL2xpbmsuemhpaHUuY29tLz90YXJnZXQ9aHR0cHM6Ly9wbHVnaW5zLmpldGJyYWlucy5jb20vcGx1Z2luLzcxNzktbWF2ZW4taGVscGVy" title="http://link.zhihu.com/?target=https://plugins.jetbrains.com/plugin/7179-maven-helper">http://link.zhihu.com/?target=https%3A//plugins.jetbrains.com/plugin/7179-maven-helper<i class="fa fa-external-link"></i></span></p>
<h3 id="String-Manipulation"><a href="#String-Manipulation" class="headerlink" title="String Manipulation"></a>String Manipulation</h3><p>提供强大的文本转换操作：</p>
<ul>
<li>切换样式（camelCase, hyphen-lowercase, HYPHEN-UPPERCASE, snake_case, SCREAMING_SNAKE_CASE, dot.case, words lowercase, Words Capitalized, PascalCase）</li>
<li>转换为SCREAMING_SNAKE_CASE (或转换为camelCase)</li>
<li>转换为 snake_case (或转换为camelCase)</li>
<li>转换为dot.case (或转换为camelCase)</li>
<li>转换为hyphen-case (或转换为camelCase)</li>
<li>转换为hyphen-case (或转换为snake_case)</li>
<li>转换为camelCase (或转换为Words)</li>
<li>转换为camelCase (或转换为lowercase words)</li>
<li>转换为PascalCase (或转换为camelCase)</li>
<li>选定文本大写</li>
<li>样式反转</li>
</ul>
<p>Un/Escape:</p>
<ul>
<li>Un/Escape 选中的 java 文本</li>
<li>Un/Escape 选中的 javascript 文本</li>
<li>Un/Escape 选中的 HTML 文本</li>
<li>Un/Escape 选中的 XML 文本</li>
<li>Un/Escape 选中的 SQL 文本</li>
<li>Un/Escape 选中的 PHP 文本</li>
<li>将 diacritics(accents) 转换为 ASCII</li>
<li>将非ASCII 转换为转义的Unicode</li>
<li>将转义的Unicode转换为字符串</li>
</ul>
<p>Encode/Decode:</p>
<ul>
<li>Encode 选中的文本为 MD5 Hex16</li>
<li>De/Encode 选中的文本为 URL</li>
<li>De/Encode 选中的文本为 Base64</li>
</ul>
<p>递增/递减:</p>
<ul>
<li>递增/递减所有找到的数字</li>
<li>复制行并且递增/递减所有找到的数字</li>
<li>创建序列：保持第一个数字，递增替换所有其他数字</li>
<li>递增重复的数字</li>
</ul>
<p>按自然顺序排序:</p>
<ul>
<li>按行倒序</li>
<li>按行随机排序</li>
<li>区分大小写A-z排序</li>
<li>区分大小写z-A排序</li>
<li>不区分大小写A-Z排序</li>
<li>不区分大小写Z-A排序</li>
<li>按行长度排序</li>
<li>通过子选择行排序：每行仅处理一个选择/插入符号</li>
</ul>
<p>对齐：</p>
<ul>
<li>通过选定的分隔将选定的文本格式化为列/表格</li>
<li>将文本对齐为左/中/右</li>
</ul>
<p>过滤/删除/移除：</p>
<ul>
<li>grep选定的文本，所有行不匹配输入文字将被删除。 （不能在列模式下工作）</li>
<li>移除选定的文本</li>
<li>移除选定文本中的所有空格</li>
<li>删除选定文本中的所有空格</li>
<li>删除重复的行</li>
<li>只保留重复的行</li>
<li>删除空行</li>
<li>删除所有换行符</li>
</ul>
<p>其他:</p>
<ul>
<li>交换字符/选择/线/标记</li>
<li>切换文件路径分隔符：Windows &lt; - &gt; UNIX</li>
</ul>
<h3 id="LiveEdit"><a href="#LiveEdit" class="headerlink" title="LiveEdit"></a>LiveEdit</h3><p>提供实时编辑 HTML / CSS / JavaScript的工具。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-97.png" alt="upload successful"><br>官方网站 <span class="exturl" data-url="aHR0cDovL2xpbmsuemhpaHUuY29tLz90YXJnZXQ9aHR0cHM6Ly9wbHVnaW5zLmpldGJyYWlucy5jb20vcGx1Z2luLzcwMDctbGl2ZWVkaXQ=" title="http://link.zhihu.com/?target=https://plugins.jetbrains.com/plugin/7007-liveedit">点击这里<i class="fa fa-external-link"></i></span>.</p>
<h3 id="Shifter"><a href="#Shifter" class="headerlink" title="Shifter"></a>Shifter</h3><p>检测插入符号、行或关键字的类型，并在键盘快捷键上将其“向上”或“向下”移动。 如果一行中只有一个可移动的单词，则可以移动而不用插入它。 维持移位字的高位首字符的小写字母/大写字母或小写字母。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-98.png" alt="upload successful"></p>
<h3 id="MyBatis-Log-Plugin"><a href="#MyBatis-Log-Plugin" class="headerlink" title="MyBatis Log Plugin"></a>MyBatis Log Plugin</h3><p>Mybatis现在是java中操作数据库的首选，在开发的时候，我们都会把Mybatis的脚本直接输出在console中，但是默认的情况下，输出的脚本不是一个可以直接执行的。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-99.png" alt="upload successful"><br>如果我们想直接执行，还需要在手动转化一下。<br>MyBatis Log Plugin 这款插件是直接将Mybatis执行的sql脚本显示出来，无需处理，可以直接复制出来执行的，如图：<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-100.png" alt="upload successful"><br>怎么样，是不是看起来很直观。执行程序后，我们可以很清晰的看到我们执行了哪些sql脚本，而且脚本可以执行拿出来运行。</p>
<h3 id="restfultookit"><a href="#restfultookit" class="headerlink" title="restfultookit"></a>restfultookit</h3><p>Spring MVC网页开发的时候，我们都是通过requestmapping的方式来定义页面的URL地址的，为了找到这个地址我们一般都是cmd+shift+F的方式进行查找，大家都知道，我们URL的命名一个是类requestmapping+方法requestmapping，查找的时候还是有那么一点不方便的，restfultookit就能很方便的帮忙进行查找。<br>例如：我要找到/book/add 对应的controller,那么只要cmd+斜杠 ,如图：<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-101.png" alt="upload successful"><br>就能直接定位到我们想要的controller。这个也是真心方便，当然restfultookit还为我们提供的其他的功能。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-102.png" alt="upload successful"><br>居然能后根据我们的controller帮我们生成默认的测试数据，还能直接调用测试，这个可以是解决了我们每次postman调试数据时，自己傻傻的组装数据的的操作，这个更加清晰，比在console找数据包要方便多了。</p>
<h3 id="RestfulTookit"><a href="#RestfulTookit" class="headerlink" title="RestfulTookit"></a>RestfulTookit</h3><p>Spring MVC网页开发的时候，我们都是通过requestmapping的方式来定义页面的URL地址的，为了找到这个地址我们一般都是cmd+shift+F的方式进行查找，大家都知道，我们URL的命名一个是类requestmapping+方法requestmapping，查找的时候还是有那么一点不方便的，restfultookit就能很方便的帮忙进行查找。<br>例如：我要找到/book/add 对应的controller,那么只要cmd+斜杠 ,如图：<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-106.png" alt="upload successful"><br>就能直接定位到我们想要的controller。这个也是真心方便，当然restfultookit还为我们提供的其他的功能。<br><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-107.png" alt="upload successful"><br>居然能后根据我们的controller帮我们生成默认的测试数据，还能直接调用测试，这个可以是解决了我们每次postman调试数据时，自己傻傻的组装数据的的操作，这个更加清晰，比在console找数据包要方便多了。</p>
<hr>
<h3 id="GsonFormat"><a href="#GsonFormat" class="headerlink" title="GsonFormat"></a>GsonFormat</h3><p>一键根据json文本生成java类  非常方便</p>
<p><img src="/2019/02/25/idea%E6%8F%92%E4%BB%B6/image-92.png" alt="upload successful"></p>
]]></content>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>linux安装KodExplorer在线文档管理器</title>
    <url>/2018/01/04/linux%E5%AE%89%E8%A3%85KodExplorer%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3%E7%AE%A1%E7%90%86%E5%99%A8/</url>
    <content><![CDATA[<h2 id="必须保证已经安装了php环境-如果没有安装可以使用宝塔来安装"><a href="#必须保证已经安装了php环境-如果没有安装可以使用宝塔来安装" class="headerlink" title="必须保证已经安装了php环境 如果没有安装可以使用宝塔来安装"></a>必须保证已经安装了php环境 如果没有安装可以使用宝塔来安装</h2><h2 id="创建kod目录"><a href="#创建kod目录" class="headerlink" title="创建kod目录"></a>创建kod目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /www/wwwroot/kod</span><br><span class="line"><span class="built_in">cd</span> /www/wwwroot/kod</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="下载kod-https-kodcloud-com"><a href="#下载kod-https-kodcloud-com" class="headerlink" title="下载kod https://kodcloud.com/"></a>下载kod <span class="exturl" data-url="aHR0cHM6Ly9rb2RjbG91ZC5jb20v" title="https://kodcloud.com/">https://kodcloud.com/<i class="fa fa-external-link"></i></span></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://static.kodcloud.com/update/download/kodexplorer4.22.zip</span><br><span class="line">unzip kodexplorer4.22.zip</span><br><span class="line">chmod -Rf 777 ./*</span><br></pre></td></tr></table></figure>

<h2 id="利用宝塔来启动服务"><a href="#利用宝塔来启动服务" class="headerlink" title="利用宝塔来启动服务"></a>利用宝塔来启动服务</h2><ul>
<li>右侧菜单栏里选择<code>网站</code></li>
<li>选择<code>添加站点</code>按钮</li>
<li>域名填<code>192.168.163.128:9999</code></li>
<li>根目录<code>/www/wwwroot/kod</code></li>
</ul>
<p>这样就把 <code>192.168.163.128:9999</code>与<code>/www/wwwroot/kod</code>互相绑定了<br>只要在浏览器输入<code>192.168.163.128:9999</code>就可以看到kod的界面了</p>
<h2 id="给kod增加根目录权限"><a href="#给kod增加根目录权限" class="headerlink" title="给kod增加根目录权限"></a>给kod增加根目录权限</h2><p>修改<code>open_basedir</code>在最后增加/表示可以读取根目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /www/wwwroot/kod/.user.ini</span><br><span class="line"></span><br><span class="line">open_basedir=/www/wwwroot/kod/:/tmp/:/proc/:/</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux安装VNC</title>
    <url>/2018/01/04/linux%E5%AE%89%E8%A3%85VNC/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5saW51eGlkYy5jb20vTGludXgvMjAxNi0wNy8xMzI4MzUuaHRt" title="http://www.linuxidc.com/Linux/2016-07/132835.htm">http://www.linuxidc.com/Linux/2016-07/132835.htm<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h2 id="1-安装vnc-server（或者去官网下载-VNC-Connect）"><a href="#1-安装vnc-server（或者去官网下载-VNC-Connect）" class="headerlink" title="1. 安装vnc server（或者去官网下载 VNC Connect）"></a>1. 安装vnc server（或者去官网下载 <span class="exturl" data-url="aHR0cHM6Ly93d3cucmVhbHZuYy5jb20vZW4vY29ubmVjdC9kb3dubG9hZC92bmMvd2luZG93cy8=" title="https://www.realvnc.com/en/connect/download/vnc/windows/">VNC Connect<i class="fa fa-external-link"></i></span>）</h2><p>看清楚下载的是<code>server</code> 如果不是 就根据<code>then</code>的提示去找</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install vnc *vnc-server*</span><br></pre></td></tr></table></figure>

<h2 id="2-更具提示输入密码"><a href="#2-更具提示输入密码" class="headerlink" title="2. 更具提示输入密码"></a>2. 更具提示输入密码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">abcd.1234</span><br></pre></td></tr></table></figure>

<h2 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3. 启动服务"></a>3. 启动服务</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vncserver :1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>停止服务<br>vncserver -kill :1</p>
</blockquote>
<h2 id="4-安装GNOME桌面"><a href="#4-安装GNOME桌面" class="headerlink" title="4. 安装GNOME桌面"></a>4. 安装<code>GNOME</code>桌面</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum groupinstall &quot;GNOME Desktop&quot; &quot;Graphical Administration Tools&quot;</span><br></pre></td></tr></table></figure>

<h2 id="5-下载VNC-Viewer"><a href="#5-下载VNC-Viewer" class="headerlink" title="5. 下载VNC Viewer"></a>5. 下载<span class="exturl" data-url="aHR0cHM6Ly93d3cucmVhbHZuYy5jb20vZW4vY29ubmVjdC9kb3dubG9hZC92aWV3ZXIvd2luZG93cy8=" title="https://www.realvnc.com/en/connect/download/viewer/windows/">VNC Viewer<i class="fa fa-external-link"></i></span></h2><p>看清楚下载的是<code>viewer</code> 如果不是 就根据<code>then</code>的提示去找</p>
<h2 id="6-打开VNC-Viewer"><a href="#6-打开VNC-Viewer" class="headerlink" title="6. 打开VNC Viewer"></a>6. 打开<code>VNC Viewer</code></h2><p>输入IP地址<code>192.168.163.128:1</code><br>输入密码<code>abcd.1234</code></p>
<h2 id="7-设置开机启动"><a href="#7-设置开机启动" class="headerlink" title="7. 设置开机启动"></a>7. 设置开机启动</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable vncserver@:1.service</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>markdeep使用</title>
    <url>/2020/03/06/markdeep%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cDovL2Nhc3VhbC1lZmZlY3RzLmNvbS9tYXJrZGVlcC8=" title="http://casual-effects.com/markdeep/">http://casual-effects.com/markdeep/<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p>直接在结尾加上</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">class</span>=<span class="string">&quot;fallback&quot;</span>&gt;</span><span class="css"><span class="selector-tag">body</span>&#123;<span class="attribute">visibility</span>:hidden&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">markdeepOptions=&#123;<span class="attr">tocStyle</span>:<span class="string">&#x27;long&#x27;</span>&#125;;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Markdeep: --&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://casual-effects.com/markdeep/latest/markdeep.min.js?&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>markdeep</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven基本概念与核心配置</title>
    <url>/2018/08/08/maven%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="maven安装与核心概念"><a href="#maven安装与核心概念" class="headerlink" title="maven安装与核心概念"></a>maven安装与核心概念</h1><ol>
<li>   maven 安装</li>
<li>   maven 编译(compile)</li>
<li>   执行测试用例(test)</li>
<li>   maven 打包</li>
<li>   maven  依懒管理</li>
</ol>
<h2 id="maven安装"><a href="#maven安装" class="headerlink" title="maven安装"></a>maven安装</h2><ol>
<li>   官网下载 Maven <span class="exturl" data-url="aHR0cDovL21hdmVuLmFwYWNoZS5vcmcvZG93bmxvYWQuY2dp" title="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi<i class="fa fa-external-link"></i></span></li>
<li>   解压指定目录</li>
<li>   配置环境变量</li>
<li>   检查安装是否成功 <code>mvn -version</code></li>
</ol>
<p><code>maven</code> 的基本功能是<span style="color:#FF0000">编译</span>、<span style="color:#FF0000">打包</span>、<span style="color:#FF0000">测试</span>、<span style="color:#FF0000">依赖管理</span></p>
<h2 id="maven编译"><a href="#maven编译" class="headerlink" title="maven编译"></a>maven编译</h2><blockquote>
<p><code>maven</code> 采用了约定的方式从指项目结构中获取源码与资源文件进行编译打包。<br>在上述配置和命令当中，我们并没有指定源码文件，也没有指定编译到哪里去 </p>
<ol>
<li>主源码文件：<code>$&#123;project&#125;/src/main/java</code></li>
<li>主资源文件：<code>$&#123;project&#125;/src/main/resources</code></li>
<li>测试源码文件：<code>$&#123;project&#125;/src/test/java</code></li>
<li>测试资源文件：<code>$&#123;project&#125;/src/test/resources</code></li>
</ol>
</blockquote>
<h3 id="创建-maven-项目"><a href="#创建-maven-项目" class="headerlink" title="创建 maven 项目"></a>创建 maven 项目</h3><p>按照以下的路径创建项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;project&#125;</span>/src/main/java</span><br><span class="line"><span class="variable">$&#123;project&#125;</span>/src/main/resources</span><br><span class="line"><span class="variable">$&#123;project&#125;</span>/src/<span class="built_in">test</span>/java</span><br><span class="line"><span class="variable">$&#123;project&#125;</span>/src/<span class="built_in">test</span>/resources</span><br></pre></td></tr></table></figure>
<h3 id="创建-java-文件"><a href="#创建-java-文件" class="headerlink" title="创建 java 文件"></a>创建 java 文件</h3><p>在<code>$&#123;project&#125;/src/main/java</code>目录下创建<code>java</code>文件</p>
<h3 id="编写-pom-文件基础配置"><a href="#编写-pom-文件基础配置" class="headerlink" title="编写 pom 文件基础配置"></a>编写 pom 文件基础配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>my-project<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="执行-mvn-编译命令"><a href="#执行-mvn-编译命令" class="headerlink" title="执行 mvn 编译命令"></a>执行 <code>mvn</code> 编译命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn compile</span><br></pre></td></tr></table></figure>
<h2 id="maven打包"><a href="#maven打包" class="headerlink" title="maven打包"></a>maven打包</h2><p>mvn 打包命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn package</span><br></pre></td></tr></table></figure>
<h2 id="maven单元测试"><a href="#maven单元测试" class="headerlink" title="maven单元测试"></a>maven单元测试</h2><blockquote>
<p>在 <code>maven</code> 当中的测试类又做了约定，约定必须是 <code>Test</code> 开头的类名与 <code>test</code> 开头的方法才会执行。<br>通常测试我们是通 <code>junit</code> 来编译测试用例，当添加了<code>junit</code>的依赖之后上一条规则作废</p>
</blockquote>
<h3 id="编译测试类"><a href="#编译测试类" class="headerlink" title="编译测试类"></a>编译测试类</h3><p>创建测试目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /src/<span class="built_in">test</span>/java</span><br></pre></td></tr></table></figure>
<h3 id="编写测试类"><a href="#编写测试类" class="headerlink" title="编写测试类"></a>编写测试类</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim TestHello.java</span><br></pre></td></tr></table></figure>
<p>文件内容</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.tuling;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHello</span></span>&#123;</span><br><span class="line">        <span class="comment">//public void sayHelloTest()&#123;  //在没有添加junit的情况下必须是以Test开头的类test开头的方法才会执行</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testsayHelloTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;run test .....&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn test</span><br></pre></td></tr></table></figure>

<h2 id="maven-依赖管理"><a href="#maven-依赖管理" class="headerlink" title="maven 依赖管理"></a>maven 依赖管理</h2><ol start="3">
<li>执行测试命令</li>
</ol>
<h3 id="在pom-文件中添加junit-依赖"><a href="#在pom-文件中添加junit-依赖" class="headerlink" title="在pom 文件中添加junit 依赖"></a>在pom 文件中添加junit 依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改测试类，加入junit-代码"><a href="#修改测试类，加入junit-代码" class="headerlink" title="修改测试类，加入junit 代码"></a>修改测试类，加入junit 代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line">Assert.assertEquals(<span class="string">&quot;&quot;</span>,<span class="string">&quot;hi&quot;</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：当我们在 <code>classPath</code> 当中加入 <code>junit</code> ，原来以 <code>test</code> 开头的方法不会被执行，必须加入 <code>@Test</code> 注解才能被执行。</p>
</blockquote>
<p><strong>问：</strong>在刚才的演示过程当中 ，<code>junit jar</code>包在哪里？是怎么加入到<code>classPath</code> 当中去的？<br><strong>答：</strong>maven 是在执行 <code>test</code> 命令的时间 动态从本地仓库中去引入<code>junit jar</code> 包，如果找不到就会去远程仓库下载，然后在引入。<br><img src="/2018/08/08/maven%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E9%85%8D%E7%BD%AE/image-60.png" alt="upload successful"></p>
<h3 id="默认远程仓库"><a href="#默认远程仓库" class="headerlink" title="默认远程仓库"></a>默认远程仓库</h3><p>默认远程仓库 <code>maven central</code> 其配置在  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">maven-model-builder-3.2.1.jar\org\apache\maven\model\pom-4.0.0.xml</span><br></pre></td></tr></table></figure>

<h3 id="本地仓库位置"><a href="#本地仓库位置" class="headerlink" title="本地仓库位置"></a>本地仓库位置</h3><p>本地仓库位置默认在 <code>~/.m2/respository</code> 下<br>要修改 <code>$&#123;M2_HOME&#125;/conf/settings.xml</code>  来指定仓库目录</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指定本地仓库目录--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>G:\.m2\repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="maven核心配置"><a href="#maven核心配置" class="headerlink" title="maven核心配置"></a>maven核心配置</h1><h2 id="项目依懒"><a href="#项目依懒" class="headerlink" title="项目依懒"></a>项目依懒</h2><p>项目依赖是指 <code>maven</code> 通过依赖传播、依赖优先原则、可选依赖、排除依赖、依赖范围等特性来管理项目 <code>ClassPath</code> 。</p>
<h3 id="依赖传播特性"><a href="#依赖传播特性" class="headerlink" title="依赖传播特性"></a>依赖传播特性</h3><p>我们的项目通常需要依赖第三方组件，而第三方组件又会依赖其它组件遇到这种情况 <code>Maven</code> 会将依赖网络中的所有节点都会加入 <code>ClassPath</code> 当中，这就是 <code>Maven</code> 的依赖传播特性。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加spring web mvc演示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2018/08/08/maven%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E9%85%8D%E7%BD%AE/image-59.png" alt="upload successful"></p>
<p>在刚刚的演示当中，项目直接依赖了 <code>spring-webmvc</code> 叫直接依赖，而对 <code>commons-logging</code> 依赖是通过 <code>webmvc</code> 传递的所以叫间接依赖。</p>
<h3 id="依赖优先原则"><a href="#依赖优先原则" class="headerlink" title="依赖优先原则"></a>依赖优先原则</h3><p>基于依赖传播特性，导致整个依赖网络会很复杂，难免会出现相同组件不同版本的情况。<code>Maven</code> 此时会基于依赖优先原则选择其中一个版本。</p>
<ul>
<li>第一原则：最短路径优先。</li>
<li>第二原则：相同路径下配置在前的优先。</li>
</ul>
<h4 id="第一原则：最短路径优先。"><a href="#第一原则：最短路径优先。" class="headerlink" title="第一原则：最短路径优先。"></a>第一原则：最短路径优先。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 直接添加commons-logging --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-logging&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-logging&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<p>上述例子中 <code>commons-logging</code> 通过 <code>spring-webmvc</code> 依赖了 <code>1.1.3</code> ，而项目中直接依赖了 <code>1.2</code> ，基于最短路径原则项目最终引入的是 <code>1.2</code> 版本。</p>
<h4 id="第二原则：相同路径下配置在前的优先"><a href="#第二原则：相同路径下配置在前的优先" class="headerlink" title="第二原则：相同路径下配置在前的优先"></a>第二原则：相同路径下配置在前的优先</h4><ol>
<li><p>   添加一个新工程 <code>Project B</code></p>
</li>
<li><p>   配置 <code>Project B</code> 依赖 <code>spring-web.3.2.9.RELEASE</code></p>
</li>
<li><p>当前工程直接依赖 <code>Project B</code>   </p>
<p>配置完之后，当前工程 <code>project A</code> 有两条路径可以依赖 <code>spring-web</code>,选择哪一条 就取决于 对 <code>webmvc</code> 和 <code>Project B</code> 的配置先后顺序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Project A==&gt; spring-webmvc.4.0.0.RELEASE ==&gt; spring-web.4.0.0.RELEASE</span><br><span class="line">Project A==&gt;   Project B 1.0.SNAPSHOT ==&gt;spring-web.3.2.9.RELEASE</span><br></pre></td></tr></table></figure>
<p>注意：在同一 <code>pom</code> 文件，第二原则不在适应。如下配置，最终引用的是 <code>1.2</code> 版本，而不是配置在前面的 <code>1.1.1</code> 版本.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!--  在1.2 之前添加 commons-logging --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="可选依赖"><a href="#可选依赖" class="headerlink" title="可选依赖"></a>可选依赖</h3><p>可选依赖表示这个依赖不是必须的。通过在 <code>&lt;dependency&gt;</code> 添  <code>&lt;optional&gt;true&lt;/optional&gt;</code> 表示，默认是不可选的。可选依赖不会被传递。</p>
</li>
</ol>
<h3 id="排除依赖"><a href="#排除依赖" class="headerlink" title="排除依赖"></a>排除依赖</h3><p>即排除指定的间接依赖。通过配置 <code>&lt;exclusions&gt;</code> 配置排除指定组件。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 排除指定项目 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="依赖范围"><a href="#依赖范围" class="headerlink" title="依赖范围"></a>依赖范围</h3><p>像 <code>junit</code> 这个组件 我们只有在运行测试用例的时候去要用到，这就没有必要在打包的时候把 <code>junit.jar</code> 包过构建进去，可以通过 <code>Maven</code> 的依赖范围配置<code>&lt;scope&gt;</code>来达到这种目的。<code>maven</code> 总共支持以下四种依赖范围</p>
<ul>
<li><strong>compile(默认)</strong> : 编译范围，编译和打包都会依赖。</li>
<li><strong>provided</strong> ：提供范围，编译时依赖，但不会打包进去。如：<code>servlet-api.jar</code></li>
<li><strong>runtime</strong> ：运行时范围，打包时依赖，编译不会。如：<code>mysql-connector-java.jar</code></li>
<li><strong>test</strong> ：测试范围，编译运行测试用例依赖，不会打包进去。如：<code>junit.jar</code></li>
<li><strong>system</strong> ：表示由系统中<code>CLASSPATH</code>指定。编译时依赖，不会打包进去。配合 <code>&lt;systemPath&gt;</code> 一起使用。示例：<code>java.home</code> 下的<code>tool.jar</code></li>
</ul>
<p><code>system</code> 除了可以用于引入系统 <code>classpath</code> 中包，也可以用于引入系统非 <code>maven</code>  收录的第三方 <code>Jar</code> ，做法是将第三方 <code>Jar</code> 放置在 项目的 <code>lib</code> 目录下，然后配置 相对路径，但因 <code>system</code> 不会打包进去所以需要配合 <code>maven-dependency-plugin</code> 插件配合使用。当然推荐大家还是通过 将第三方 <code>Jar</code> 手动 <code>install</code> 到仓库。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- system 的通常使用方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">systemPath</span>&gt;</span>$&#123;java.home&#125;/../lib/tools.jar<span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- system 另外使用方式 ,将工程内的jar直接引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jsr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsr<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">systemPath</span>&gt;</span>$&#123;basedir&#125;/lib/jsr305.jar<span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通过插件 将system 的jar 打包进去。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;/$&#123;project.build.finalName&#125;/WEB-INF/lib<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includeScope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">includeScope</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludeGroupIds</span>&gt;</span>com.sun<span class="tag">&lt;/<span class="name">excludeGroupIds</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>手动加入本地仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -Dfile=abc_client_v1.20.jar -DgroupId=tuling  -DartifactId=tuling-client -Dversion=1.20 -Dpackaging=jar</span><br></pre></td></tr></table></figure>
<h2 id="项目聚合与继承"><a href="#项目聚合与继承" class="headerlink" title="项目聚合与继承"></a>项目聚合与继承</h2><h3 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h3><p> 聚合是指将多个模块整合在一起，统一构建，避免一个一个的构建。聚合需要个父工程，然后使用 <code>&lt;modules&gt;</code> 进行配置其中对应的是子工程的相对路径</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>tuling-client<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>tuling-server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承是指子工程直接继承父工程 当中的属性、依赖、插件等配置，避免重复配置。</p>
<ol>
<li>   属性继承</li>
<li>   依赖继承</li>
<li>   插件继承<br>上面的三个配置子工程都可以进行重写，重写之后以子工程的为准。</li>
</ol>
<h3 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h3><p>通过继承的特性，子工程是可以间接依赖父工程的依赖，但多个子工程依赖有时并不一至，这时就可以在父工程中加入 <code>&lt;dependencyManagement&gt;</code> 声明该功程需要的 <code>JAR</code> 包，然后在子工程中引入。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">！--</span> 父工程中声明 <span class="attr">junit</span> <span class="attr">4.12</span> <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 子工程中引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="项目属性"><a href="#项目属性" class="headerlink" title="项目属性"></a>项目属性</h3><p>通过 <code>&lt;properties&gt;</code> 配置 属性参数，可以简化配置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 配置proName属性 --&gt;</span><br><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;proName&gt;ddd&lt;&#x2F;proName&gt;</span><br><span class="line">&lt;&#x2F;properties&gt;</span><br></pre></td></tr></table></figure>
<p>引用方式<code>$&#123;proName&#125;</code></p>
<h4 id="maven-默认的属性"><a href="#maven-默认的属性" class="headerlink" title="maven 默认的属性"></a>maven 默认的属性</h4><ul>
<li><code>$&#123;basedir&#125;</code> 项目根目录  </li>
<li><code>$&#123;version&#125;</code> 表示项目版本 </li>
<li><code>$&#123;project.basedir&#125;</code> 同 <code>$&#123;basedir&#125;</code> </li>
<li><code>$&#123;project.version&#125;</code> 表示项目版本,与 <code>$&#123;version&#125;</code> 相同 </li>
<li><code>$&#123;project.build.directory&#125;</code> 构建目录，缺省为 <code>target</code> </li>
<li><code>$&#123;project.build.sourceEncoding&#125;</code> 表示主源码的编码格式 </li>
<li><code>$&#123;project.build.sourceDirectory&#125;</code> 表示主源码路径</li>
<li><code>$&#123;project.build.finalName&#125;</code>表示输出文件名称</li>
<li><code>$&#123;project.build.outputDirectory&#125;</code> 构建过程输出目录，缺省为<code>target/classes </code></li>
</ul>
<h2 id="项目构建配置"><a href="#项目构建配置" class="headerlink" title="项目构建配置"></a>项目构建配置</h2><ol>
<li>   构建资源配置</li>
<li>   编译插件</li>
<li>   profile 指定编译环境</li>
</ol>
<p>构建资源配置<br>基本配置示例：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">defaultGoal</span>&gt;</span>package<span class="tag">&lt;/<span class="name">defaultGoal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;basedir&#125;/target2<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;artifactId&#125;-$&#123;version&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li><strong>defaultGoal</strong> : 执行构建时默认的 <code>goal</code> 或 <code>phase</code>，如<code>jar:jar</code>或者<code>package</code>等</li>
<li><strong>directory</strong> : 构建的结果所在的路径，默认为$ <code>&#123;basedir&#125;/target</code> 目录</li>
<li><strong>finalName</strong> : 构建的最终结果的名字，该名字可能在其他 <code>plugin</code> 中被改变</li>
</ul>
<p>配置示例 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.MF<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.XML<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">include</span>&gt;</span>*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：   </p>
<ul>
<li><strong>resources</strong> :<code> build</code>过程中涉及的资源文件</li>
<li><strong>targetPath</strong> : 资源文件的目标路径</li>
<li><strong>directory</strong> : 资源文件的路径，默认<code>$&#123;basedir&#125;/src/main/resources/</code>目录下</li>
<li><strong>includes</strong> : 一组文件名的匹配模式，被匹配的资源文件将被构建过程处理</li>
<li><strong>excludes</strong> : 一组文件名的匹配模式，被匹配的资源文件将被构建过程忽略。同时被includes和excludes匹配的资源文件，将被忽略。</li>
<li><strong>filtering</strong> : 默认<code>false</code> ，<code>true</code> 表示 通过参数 对 资源文件中 的 <code>$&#123;key&#125;</code> 在编译时进行动态变更。替换源可 紧 <code>-Dkey</code> 和 <code>pom</code> 中的 <code>&lt;properties&gt;</code> 值 或  <code>&lt;filters&gt;</code> 中指定的<code>properties</code> 文件。</li>
</ul>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>[2/1]mybatis</title>
    <url>/2018/08/23/mybatis/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>mysql设置远程登陆</title>
    <url>/2018/05/12/mysql%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%99%BB%E9%99%86/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">select host,user from user;</span><br><span class="line">update user set host &#x3D; &#39;%&#39; where user &#x3D; &#39;root&#39;;</span><br><span class="line">select host, user from user;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>netty学习1.2-NIO</title>
    <url>/2018/01/16/netty%E5%AD%A6%E4%B9%A01-2-NIO/</url>
    <content><![CDATA[<h2 id="NIO-中重要的组件"><a href="#NIO-中重要的组件" class="headerlink" title="NIO 中重要的组件"></a>NIO 中重要的组件</h2><ul>
<li><code>Non Block IO</code> 非阻塞<code>IO</code> (<code>new io</code>)</li>
<li><code>Selector</code> 通道的管理器(管理<code>ServerSocketChannel</code>,<code>SocketChannel</code>)</li>
<li><code>ServerSocketChannel</code>(<code>ServerSocket</code>)： 只关心客户端连接事件</li>
<li><code>SocketChannel</code>(<code>Socket</code>)：关心读事件,写事件,读写事件..</li>
<li><code>SelectionKey</code> 事件集合</li>
</ul>
<p>在这个例子中一个<code>服务员</code> 可以同时接待 多个<code>顾客</code> 一个<code>服务员</code>是一个线程(使用了多路复用).   </p>
<p><img src="/2018/01/16/netty%E5%AD%A6%E4%B9%A01-2-NIO/NIO%E5%8D%95%E7%BA%BF%E7%A8%8BReactor%E6%A8%A1%E5%9E%8B.png" alt="NIO单线程Reactor模型.png"><br>g</p>
<p><code>NIO</code> 服务端代码   </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guyu.netty.day1.nio;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.SelectionKey;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.Selector;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.ServerSocketChannel;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.SocketChannel;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * nio</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NioSocketDemo</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 通道管理器(选择器),多个用户共用的,所以需要放到这里</span></span><br><span class="line">	<span class="keyword">private</span> Selector selector;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 初始化服务端ServerSocketChannel通道,并初始化选择器</span></span><br><span class="line"><span class="comment">	 * 获得一个ServerSocket通道,并对该通道做一些初始化的工作</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initServer</span><span class="params">(<span class="keyword">int</span> port)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		<span class="comment">// 获取ServerSocket通道,相对于传统的ServerSocket</span></span><br><span class="line">		ServerSocketChannel serverChannel = ServerSocketChannel.open();</span><br><span class="line">		<span class="comment">// 设置通道为非阻塞</span></span><br><span class="line">		serverChannel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">		<span class="comment">// 将该通道对应的ServerSocket绑定到port端口</span></span><br><span class="line">		serverChannel.socket().bind(<span class="keyword">new</span> InetSocketAddress(port));</span><br><span class="line">		<span class="comment">// 获得一个通道选择器(管理器)</span></span><br><span class="line">		<span class="keyword">this</span>.selector = Selector.open();</span><br><span class="line">		<span class="comment">// 将通道选择器和该通道绑定,并为该通道注册SelectionKey.OP_ACCEPT事件,注册该事件后,</span></span><br><span class="line">		<span class="comment">// 当该事件到达时,selector.select()会返回,如果该事件没到达selector.select()会一直阻塞。</span></span><br><span class="line">		<span class="comment">// 意思是大门交给selector看着,给我监听是否有accpet事件</span></span><br><span class="line">		serverChannel.register(<span class="keyword">this</span>.selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">		System.out.println(<span class="string">&quot;服务端启动成功...&quot;</span>);</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		***SelectionKey中定义的4中事件 ***</span></span><br><span class="line"><span class="comment">		OP_ACCEPT 	—— 	接收连接继续事件,表示服务器监听到了客户连接,服务器可以接收这个连接了</span></span><br><span class="line"><span class="comment">		OP_CONNECT	—— 	连接就绪事件,表示客户与服务器的连接已经建立成功</span></span><br><span class="line"><span class="comment">		OP_READ 	—— 	读就绪事件,表示通道中已经有了可读的数据,可以执行读操作了(通道目前有数据,可以进行读操作了)</span></span><br><span class="line"><span class="comment">		OP_WRITE 	—— 	写就绪事件,表示已经可以向通道写数据了(通道目前可以用于写操作)</span></span><br><span class="line"><span class="comment">		*/</span></span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 采用轮询的方式监听selector上是否有需要处理的事件,如果有,则进行处理</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">listenSelector</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		<span class="comment">// 轮询访问selector</span></span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">			<span class="comment">// 当注册的事件到达时,方法返回;否则,该方法会一直阻塞</span></span><br><span class="line">			<span class="comment">// 多路复用  Reactor模型</span></span><br><span class="line">			<span class="keyword">this</span>.selector.select();</span><br><span class="line">			<span class="comment">// 无论是否有读写事件发生,selector每隔1s被唤醒一次  </span></span><br><span class="line">			 <span class="comment">//this.selector.select(1000);</span></span><br><span class="line">			 <span class="comment">//this.selector.selectNow();</span></span><br><span class="line">			<span class="comment">// 获得selector中选中的项的迭代器,选中的项为注册的事件</span></span><br><span class="line">			Iterator&lt;?&gt; iteratorKey = <span class="keyword">this</span>.selector.selectedKeys().iterator();</span><br><span class="line">			<span class="keyword">while</span> (iteratorKey.hasNext()) &#123;</span><br><span class="line">				SelectionKey selectionKey = (SelectionKey) iteratorKey.next();</span><br><span class="line">				<span class="comment">// 删除已选的key,以防重复处理 这里只是做了个标记在完成之后才会真正删除</span></span><br><span class="line">				iteratorKey.remove();</span><br><span class="line">				<span class="comment">// 处理请求</span></span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					handler(selectionKey);</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 处理请求</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handler</span><span class="params">(SelectionKey selectionKey)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (selectionKey.isAcceptable()) &#123;<span class="comment">//处理客户端连接请求事件</span></span><br><span class="line">			System.out.println(<span class="string">&quot;新的客户端连接...&quot;</span>);</span><br><span class="line">			ServerSocketChannel server = (ServerSocketChannel) selectionKey.channel();</span><br><span class="line">			<span class="comment">// 获得和客户端连接的通道</span></span><br><span class="line">			<span class="comment">// 完成该操作意味着完成TCP三次握手,TCP物理链路正式建立   这一步相当于BIO的 Socket socket = serverSocket.accept();</span></span><br><span class="line">			SocketChannel channel = server.accept();</span><br><span class="line">			<span class="comment">// 设置成非阻塞</span></span><br><span class="line">			channel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">			<span class="comment">// 在和客户端连接成功之后,为了可以接收到客户端的信息,需要给通道设置读的权限。</span></span><br><span class="line">			channel.register(<span class="keyword">this</span>.selector, SelectionKey.OP_READ);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (selectionKey.isReadable()) &#123;<span class="comment">// 处理读的事件</span></span><br><span class="line">			<span class="comment">// 服务器可读取消息:得到事件发生的Socket通道</span></span><br><span class="line">			SocketChannel channel = (SocketChannel) selectionKey.channel();</span><br><span class="line">			<span class="comment">// 创建读取的缓冲区</span></span><br><span class="line">			ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);<span class="comment">//1kb</span></span><br><span class="line">			<span class="keyword">int</span> readData = channel.read(buffer);</span><br><span class="line">			<span class="keyword">if</span>(readData &gt; <span class="number">0</span>)&#123;</span><br><span class="line">				String msg = <span class="keyword">new</span> String(buffer.array(),<span class="string">&quot;GBK&quot;</span>).trim();<span class="comment">// 先讲缓冲区数据转化成byte数组,再转化成String</span></span><br><span class="line">				System.out.println(<span class="string">&quot;服务端收到信息：&quot;</span> + msg);</span><br><span class="line">				</span><br><span class="line">				<span class="comment">//回写数据</span></span><br><span class="line">				ByteBuffer writeBackBuffer = ByteBuffer.wrap(<span class="string">&quot;receive data&quot;</span>.getBytes(<span class="string">&quot;GBK&quot;</span>));</span><br><span class="line">				channel.write(writeBackBuffer);<span class="comment">// 将消息回送给客户端</span></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;客户端关闭咯...&quot;</span>);</span><br><span class="line">				<span class="comment">//SelectionKey对象会失效,这意味着Selector再也不会监控与它相关的事件</span></span><br><span class="line">				selectionKey.cancel();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 启动服务端测试</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		NioSocketDemo server = <span class="keyword">new</span> NioSocketDemo();</span><br><span class="line">		<span class="comment">// 初始化服务端</span></span><br><span class="line">		server.initServer(<span class="number">8888</span>);</span><br><span class="line">		<span class="comment">// 服务器端监听Selector事件</span></span><br><span class="line">		server.listenSelector();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>客户端代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guyu.netty.day1.nio;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.SelectionKey;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.Selector;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.SocketChannel;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line">  </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * NIO客户端 </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NIOClient</span> </span>&#123;  </span><br><span class="line">    <span class="comment">//通道管理器  </span></span><br><span class="line">    <span class="keyword">private</span> Selector selector;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得一个Socket通道，并对该通道做一些初始化的工作 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip 连接的服务器的ip </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> port  连接的服务器的端口号          </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initClient</span><span class="params">(String ip,<span class="keyword">int</span> port)</span> <span class="keyword">throws</span> IOException </span>&#123;  </span><br><span class="line">        <span class="comment">// 获得一个Socket通道  </span></span><br><span class="line">        SocketChannel channel = SocketChannel.open();  </span><br><span class="line">        <span class="comment">// 设置通道为非阻塞  </span></span><br><span class="line">        channel.configureBlocking(<span class="keyword">false</span>);  </span><br><span class="line">        <span class="comment">// 获得一个通道管理器  </span></span><br><span class="line">        <span class="keyword">this</span>.selector = Selector.open();  </span><br><span class="line">          </span><br><span class="line">        <span class="comment">// 客户端连接服务器,其实方法执行并没有实现连接，需要在listen（）方法中调  </span></span><br><span class="line">        <span class="comment">//用channel.finishConnect();才能完成连接  </span></span><br><span class="line">        channel.connect(<span class="keyword">new</span> InetSocketAddress(ip,port));  </span><br><span class="line">        <span class="comment">//将通道管理器和该通道绑定，并为该通道注册SelectionKey.OP_CONNECT事件。  </span></span><br><span class="line">        channel.register(selector, SelectionKey.OP_CONNECT);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 采用轮询的方式监听selector上是否有需要处理的事件，如果有，则进行处理 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;rawtypes&quot; &#125;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">listen</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;  </span><br><span class="line">        <span class="comment">// 轮询访问selector  </span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;  </span><br><span class="line">            selector.select();  </span><br><span class="line">            <span class="comment">// 获得selector中选中的项的迭代器  </span></span><br><span class="line">            Iterator ite = <span class="keyword">this</span>.selector.selectedKeys().iterator();  </span><br><span class="line">            <span class="keyword">while</span> (ite.hasNext()) &#123;  </span><br><span class="line">                SelectionKey key = (SelectionKey) ite.next();  </span><br><span class="line">                <span class="comment">// 删除已选的key,以防重复处理  </span></span><br><span class="line">                ite.remove();  </span><br><span class="line">                <span class="comment">// 连接事件发生  </span></span><br><span class="line">                <span class="keyword">if</span> (key.isConnectable()) &#123;  </span><br><span class="line">                    SocketChannel channel = (SocketChannel) key  </span><br><span class="line">                            .channel();  </span><br><span class="line">                    <span class="comment">// 如果正在连接，则完成连接  </span></span><br><span class="line">                    <span class="keyword">if</span>(channel.isConnectionPending())&#123;  </span><br><span class="line">                        channel.finishConnect();  </span><br><span class="line">                          </span><br><span class="line">                    &#125;  </span><br><span class="line">                    <span class="comment">// 设置成非阻塞  </span></span><br><span class="line">                    channel.configureBlocking(<span class="keyword">false</span>);  </span><br><span class="line">  </span><br><span class="line">                    <span class="comment">//在这里可以给服务端发送信息哦  </span></span><br><span class="line">                    channel.write(ByteBuffer.wrap(<span class="keyword">new</span> String(<span class="string">&quot;向服务端发送了一条信息&quot;</span>).getBytes()));  </span><br><span class="line">                    <span class="comment">//在和服务端连接成功之后，为了可以接收到服务端的信息，需要给通道设置读的权限。  </span></span><br><span class="line">                    channel.register(<span class="keyword">this</span>.selector, SelectionKey.OP_READ);  </span><br><span class="line">                      </span><br><span class="line">                    <span class="comment">// 获得了可读的事件  </span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.isReadable()) &#123;  </span><br><span class="line">                        read(key);  </span><br><span class="line">                &#125;  </span><br><span class="line">  </span><br><span class="line">            &#125;  </span><br><span class="line">  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 处理读取服务端发来的信息 的事件 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException  </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(SelectionKey key)</span> <span class="keyword">throws</span> IOException</span>&#123;  </span><br><span class="line">        <span class="comment">//和服务端的read方法一样  </span></span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 启动客户端测试 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException  </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;  </span><br><span class="line">        NIOClient client = <span class="keyword">new</span> NIOClient();  </span><br><span class="line">        client.initClient(<span class="string">&quot;localhost&quot;</span>,<span class="number">8888</span>);  </span><br><span class="line">        client.listen();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>select<br>poll<br>epoll 现在大梁使用的 this.select.select();</p>
<p>handler 是真正干活的 读写事件<br>acceptor 是分配活的（主从模型中是 main reactor    安全事件 管理注册事件握手等 boss<br>sub reactor 读写事件由于sub来和handler交互 worker<br>）</p>
<p>都是</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>netty</tag>
      </tags>
  </entry>
  <entry>
    <title>netty学习1.1-传统IO(BIO)</title>
    <url>/2018/01/15/netty%E5%AD%A6%E4%B9%A01-2-%E4%BC%A0%E7%BB%9FBIO/</url>
    <content><![CDATA[<h2 id="传统BIO"><a href="#传统BIO" class="headerlink" title="传统BIO"></a>传统<code>BIO</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tuling.netty.day1.bio;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传统Socket阻塞案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraditionalSocketDemo</span></span>&#123;</span><br><span class="line">	<span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">7777</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;服务端启动...&quot;</span>);</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">			<span class="comment">// 获取socket套接字</span></span><br><span class="line">			<span class="comment">// accept()阻塞点</span></span><br><span class="line">			Socket socket = serverSocket.accept();<span class="comment">// 一直在等待客户端的链接事件</span></span><br><span class="line">			System.out.println(<span class="string">&quot;有新客户端连接上来了...&quot;</span>);</span><br><span class="line">			<span class="comment">// 获取客户端输入流</span></span><br><span class="line">			InputStream is = socket.getInputStream();</span><br><span class="line">			<span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">			<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">				<span class="comment">// 循环读取数据</span></span><br><span class="line">				<span class="comment">// read() 阻塞点</span></span><br><span class="line">				<span class="keyword">int</span> data = is.read(b);</span><br><span class="line">				<span class="keyword">if</span>(data != -<span class="number">1</span>)&#123;</span><br><span class="line">					String info = <span class="keyword">new</span> String(b,<span class="number">0</span>,data,<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">					System.out.println(info);</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>在cmd里可以使用<code>telent 端口号</code> 链接<br>使用<code>send</code> 发送字符串</p>
</blockquote>
<p>传统的BIO一共有两个堵塞点</p>
<ul>
<li>等待客户端的链接<code>Socket socket = serverSocket.accept();</code></li>
<li>等待链接客户端的输入完成(就绪)<code>int data = is.read(b);</code></li>
</ul>
<p>特点即缺点</p>
<ul>
<li>一个服务端对应一个客户端</li>
</ul>
<p>在这个例子里可以把 <code>服务端</code> 比喻成 <code>服务员</code> ,把 <code>客户端</code> 比喻成 <code>顾客</code> 在这个例子就是一个 <code>服务员</code> 服务一个<code>顾客</code>.没有被服务的在门外排队  </p>
<p>接下来将是这个模型的改进版本 <code>多线程BIO</code></p>
<h2 id="多线程BIO"><a href="#多线程BIO" class="headerlink" title="多线程BIO"></a>多线程<code>BIO</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tuling.netty.day1.bio;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传统bio多线程版本</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraditionalSocketDemo2</span></span>&#123;</span><br><span class="line">	<span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">7777</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;服务端启动...&quot;</span>);</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">			<span class="comment">// 获取socket套接字</span></span><br><span class="line">			<span class="comment">// accept()阻塞点</span></span><br><span class="line">			Socket socket = serverSocket.accept();</span><br><span class="line">			System.out.println(<span class="string">&quot;有新客户端连接上来了...&quot;</span>);</span><br><span class="line">			<span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">				<span class="meta">@Override</span></span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						<span class="comment">// 获取客户端输入流</span></span><br><span class="line">						InputStream is = socket.getInputStream();</span><br><span class="line">						<span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">						<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">							<span class="comment">// 循环读取数据</span></span><br><span class="line">							<span class="comment">// read() 阻塞点</span></span><br><span class="line">							<span class="keyword">int</span> data = is.read(b);</span><br><span class="line">							<span class="keyword">if</span>(data != -<span class="number">1</span>)&#123;</span><br><span class="line">								String info = <span class="keyword">new</span> String(b,<span class="number">0</span>,data,<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">								System.out.println(info);</span><br><span class="line">							&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">								<span class="keyword">break</span>;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;).start();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这个版本改进了 <code>传统BIO</code> 应对多个客户端需要等待的问题.<br>在这个例子就是为每一个 <code>顾客</code> 都安排一个 <code>服务员</code> 来者不拒.<br>在实际情况下这个是 <code>非常糟糕的</code> 在高并发的情况下这回影响到系统资源. 没有一家店会拥有无限多的 <code>服务员</code>.</p>
<p><img src="/2018/01/15/netty%E5%AD%A6%E4%B9%A01-2-%E4%BC%A0%E7%BB%9FBIO/BIO%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%89%88%E6%9C%AC%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="BIO多线程版本示意图.png"></p>
<p>那么解决这种问题就要用到线程池</p>
<h2 id="伪异步IO版本-线程池BIO"><a href="#伪异步IO版本-线程池BIO" class="headerlink" title="伪异步IO版本(线程池BIO)"></a>伪异步IO版本(线程池<code>BIO</code>)</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tuling.netty.day1.bio;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传统BIO 多线程伪异步IO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraditionalSocketMultiThreadDemo</span> </span>&#123;</span><br><span class="line">	<span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">//		ExecutorService threadPool = Executors.newCachedThreadPool();// 自己管理线程 线程池,缓存，无限大  m:m = 请求：线程  n:m  n=&gt;m=1</span></span><br><span class="line">		ExecutorService threadPool = Executors.newFixedThreadPool(<span class="number">100</span>); <span class="comment">// 请求：线程 = n:m (n&gt;m)</span></span><br><span class="line">		ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">7777</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;服务端启动...&quot;</span>);</span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">			<span class="comment">// 获取socket套接字</span></span><br><span class="line">			<span class="comment">// accept()阻塞点</span></span><br><span class="line">			Socket socket = serverSocket.accept();</span><br><span class="line">			threadPool.execute(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">				<span class="meta">@Override</span></span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;有新客户端连接上来了...&quot;</span>);</span><br><span class="line">						<span class="comment">// 获取客户端输入流</span></span><br><span class="line">						InputStream is = socket.getInputStream();</span><br><span class="line">						<span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">						<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">							<span class="comment">// 循环读取数据</span></span><br><span class="line">							<span class="comment">// read() 阻塞点</span></span><br><span class="line">							<span class="keyword">int</span> data = is.read(b);</span><br><span class="line">							<span class="keyword">if</span> (data != -<span class="number">1</span>) &#123;</span><br><span class="line">								String info = <span class="keyword">new</span> String(b, <span class="number">0</span>, data, <span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">								System.out.println(info);</span><br><span class="line">							&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">								<span class="keyword">break</span>;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2018/01/15/netty%E5%AD%A6%E4%B9%A01-2-%E4%BC%A0%E7%BB%9FBIO/%E4%BC%AA%E5%BC%82%E6%AD%A5BIO%E7%89%88%E6%9C%AC%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="伪异步BIO版本示意图.png"></p>
<p>在这个模型中使用了线程池,使用了缓存.最最重要的点就是<code>复用</code>同一个线程复用多次.<br>无论 <code>顾客</code> 有多少 <code>服务员</code> 只有100个,没有排到的就等待</p>
<h2 id="BIO总结"><a href="#BIO总结" class="headerlink" title="BIO总结"></a><code>BIO</code>总结</h2><p><code>伪异步BIO</code>看起来已经是终极解决方案了,但是依然存在如下的问题</p>
<ul>
<li>每当一个新的客户端请求接入时，服务端必须创建一个线程来处理这条链路</li>
<li>如果在高性能高并发场景下肯定是没法用的   </li>
</ul>
<p><img src="/2018/01/15/netty%E5%AD%A6%E4%B9%A01-2-%E4%BC%A0%E7%BB%9FBIO/BIO%E6%80%BB%E4%BD%93%E6%A8%A1%E5%9E%8B.png" alt="BIO总体模型.png"></p>
<p>总的来说在<code>BIO</code>模型中是<code>一问一答</code></p>
<p>接下来只能抛弃传统的<code>BIO</code>,引入新的<code>NIO</code>(JKD1.4就已经存在)</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>netty</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs国内镜像</title>
    <url>/2017/12/26/nodejs%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<p>执行了以下命令之后可以直接使用cnpm来代替 npm</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL25wbS50YW9iYW8ub3JnLw==" title="http://npm.taobao.org/">http://npm.taobao.org/<i class="fa fa-external-link"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>python2与python3安装共存与修改国内镜像</title>
    <url>/2018/01/04/python2%E4%B8%8Epython3%E5%AE%89%E8%A3%85%E5%85%B1%E5%AD%98%E4%B8%8E%E4%BF%AE%E6%94%B9%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<p>先装3 再装2</p>
<h2 id="1-进入python官网"><a href="#1-进入python官网" class="headerlink" title="1.进入python官网"></a>1.进入python官网</h2><p>链接<span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy8=" title="https://www.python.org/">https://www.python.org/<i class="fa fa-external-link"></i></span></p>
<h2 id="2-直接下一步下一步"><a href="#2-直接下一步下一步" class="headerlink" title="2.直接下一步下一步"></a>2.直接下一步下一步</h2><p>（注：VS 2015及其以后版本需要的，如果你以后打算在VS 2015中配置python环境请勾选此项，点击Browse选择安装目录）</p>
<h2 id="3-输入命令查看是否安装成功"><a href="#3-输入命令查看是否安装成功" class="headerlink" title="3 输入命令查看是否安装成功"></a>3 输入命令查看是否安装成功</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python</span><br><span class="line">pip</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="4-报错解决"><a href="#4-报错解决" class="headerlink" title="4. 报错解决"></a>4. 报错解决</h2><p>如果没有成功查看报错，或者是否添加了环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在path中添加</span><br><span class="line">C:\Python36</span><br><span class="line">C:\Python36\Scripts</span><br></pre></td></tr></table></figure>

<h2 id="5-区分python3"><a href="#5-区分python3" class="headerlink" title="5. 区分python3"></a>5. 区分python3</h2><p>成功之后把<code>python.exe</code> 修改为<code>python3.exe</code>  把<code>pythonw.exe</code> 修改为<code>pythonw3.exe</code></p>
<h2 id="6-再次查看是否成功"><a href="#6-再次查看是否成功" class="headerlink" title="6. 再次查看是否成功"></a>6. 再次查看是否成功</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3</span><br><span class="line">pip3</span><br></pre></td></tr></table></figure>

<h2 id="7-开始安装python2"><a href="#7-开始安装python2" class="headerlink" title="7. 开始安装python2"></a>7. 开始安装python2</h2><h2 id="8-依然下一步下一步安装"><a href="#8-依然下一步下一步安装" class="headerlink" title="8. 依然下一步下一步安装"></a>8. 依然下一步下一步安装</h2><p>（中间会有个红叉需要是手动修复或者手动添加环境变量）</p>
<h2 id="9-修改阿里源"><a href="#9-修改阿里源" class="headerlink" title="9. 修改阿里源"></a>9. 修改阿里源</h2><p>在<code>C:\Users\Administrator\pip\pip.ini</code>(也有可能是.cfg)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">新版ubuntu要求使用https源，要注意。</span><br><span class="line"></span><br><span class="line">清华：https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br><span class="line"></span><br><span class="line">阿里云：http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">中国科技大学 https:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">华中理工大学：http:&#x2F;&#x2F;pypi.hustunique.com&#x2F;</span><br><span class="line"></span><br><span class="line">山东理工大学：http:&#x2F;&#x2F;pypi.sdutlinux.org&#x2F; </span><br><span class="line"></span><br><span class="line">豆瓣：http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F;</span><br></pre></td></tr></table></figure>


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br><span class="line">[install]</span><br><span class="line">trusted-host&#x3D;mirrors.aliyun.com</span><br></pre></td></tr></table></figure>

<h2 id="10-运行命令检验结果"><a href="#10-运行命令检验结果" class="headerlink" title="10. 运行命令检验结果"></a>10. 运行命令检验结果</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python</span><br><span class="line">pip2</span><br></pre></td></tr></table></figure>

<h2 id="11-最后说明"><a href="#11-最后说明" class="headerlink" title="11. 最后说明"></a>11. 最后说明</h2><p>这里pip可能会引起混淆 用pip2 和pip3 来区分版本（不需要是手动修改 python 默认这样）<br>python命令是2  python3是3  </p>
<h2 id="免修改终极大招"><a href="#免修改终极大招" class="headerlink" title="免修改终极大招"></a>免修改终极大招</h2><p>当python脚本需要python2运行时，只需在脚本前加上，然后运行py xxx.py即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#! python2</span><br></pre></td></tr></table></figure>

<p>当python脚本需要python3运行时，只需在脚本前加上，，然后运行py xxx.py即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#! python3</span><br></pre></td></tr></table></figure>

<p>就这么简单。<br>同时，这也完美解决了在pip在python2和python3共存的环境下报错，提示Fatal error in launcher: Unable to create process using ‘“‘的问题。</p>
<p>当需要python2的pip时，只需</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">py -2 -m pip install xxx</span><br></pre></td></tr></table></figure>

<p>当需要python3的pip时，只需</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">py -3 -m pip install xxx</span><br></pre></td></tr></table></figure>
<p>python2和python3的pip package就这样可以完美分开了。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitMQ远程登陆以及WEB界面安装</title>
    <url>/2018/05/09/rabbitMQ%E8%BF%9C%E7%A8%8B%E7%99%BB%E9%99%86%E4%BB%A5%E5%8F%8AWEB%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="RABBITMQ安装WEB界面方法"><a href="#RABBITMQ安装WEB界面方法" class="headerlink" title="RABBITMQ安装WEB界面方法"></a>RABBITMQ安装WEB界面方法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="http://127.0.0.1:15672/">http://127.0.0.1:15672/</a><br>用户名: guest<br>密码: guest</p>
</blockquote>
<h2 id="重启RABBITMQ"><a href="#重启RABBITMQ" class="headerlink" title="重启RABBITMQ"></a>重启RABBITMQ</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net stop RabbitMQ &amp;&amp; net start RabbitMQ</span><br></pre></td></tr></table></figure>

<p>在<code>rabbitMQ3.3.0</code>版本以后<code>guest</code>用户只能使用<code>localhost</code>来访问,远程访问需要开启</p>
<h2 id="开启guest的远程访问权限-不推荐"><a href="#开启guest的远程访问权限-不推荐" class="headerlink" title="开启guest的远程访问权限(不推荐)"></a>开启<code>guest</code>的远程访问权限(不推荐)</h2><p>在找到<code>ebin\rabbit.app</code>文件<br>删除<code>loopback_users</code>中的<code>&lt;&lt;&quot;guest&quot;&gt;&gt;</code> (38行)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;loopback_users, [&lt;&lt;&quot;guest&quot;&gt;&gt;]&#125;,   -&gt; &#123;loopback_users, []&#125;,</span><br></pre></td></tr></table></figure>

<h2 id="新增用户并赋予权限-推荐"><a href="#新增用户并赋予权限-推荐" class="headerlink" title="新增用户并赋予权限(推荐)"></a>新增用户并赋予权限(推荐)</h2><blockquote>
<p>官方不推荐使用<code>guest</code>用户来远程登陆,所以需要新建用户</p>
</blockquote>
<ol>
<li>登陆<a href="http://127.0.0.1:15672/">http://127.0.0.1:15672/</a></li>
<li>点击<code>Admin</code>标签,输入<code>用户名</code>,<code>密码</code>,并设置<code>身份</code>,点击<code>Add user</code><br><img src="/2018/05/09/rabbitMQ%E8%BF%9C%E7%A8%8B%E7%99%BB%E9%99%86%E4%BB%A5%E5%8F%8AWEB%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85/image-1.png" alt="填写用户名密码"></li>
<li>点击<code>用户名</code>设置<code>权限</code><br><img src="/2018/05/09/rabbitMQ%E8%BF%9C%E7%A8%8B%E7%99%BB%E9%99%86%E4%BB%A5%E5%8F%8AWEB%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85/image-2.png" alt="点击权限设置按钮"></li>
<li>直接点击<code>Set permission</code><br><img src="/2018/05/09/rabbitMQ%E8%BF%9C%E7%A8%8B%E7%99%BB%E9%99%86%E4%BB%A5%E5%8F%8AWEB%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85/image-3.png" alt="默认权限"></li>
<li>完成<br><img src="/2018/05/09/rabbitMQ%E8%BF%9C%E7%A8%8B%E7%99%BB%E9%99%86%E4%BB%A5%E5%8F%8AWEB%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85/image-4.png" alt="完成"></li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>rabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>redis学习1(redis基本介绍)</title>
    <url>/2018/01/07/redis%E5%AD%A6%E4%B9%A01/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis学习2-主从复制</title>
    <url>/2018/01/12/redis%E5%AD%A6%E4%B9%A02-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
    <content><![CDATA[<h1 id="Redis官网-https-redis-io"><a href="#Redis官网-https-redis-io" class="headerlink" title="Redis官网 https://redis.io/"></a>Redis官网 <span class="exturl" data-url="aHR0cHM6Ly9yZWRpcy5pby8=" title="https://redis.io/">https://redis.io/<i class="fa fa-external-link"></i></span></h1><h1 id="Redis中文-http-redis-cn"><a href="#Redis中文-http-redis-cn" class="headerlink" title="Redis中文 http://redis.cn/"></a>Redis中文 <span class="exturl" data-url="aHR0cDovL3JlZGlzLmNuLw==" title="http://redis.cn/">http://redis.cn/<i class="fa fa-external-link"></i></span></h1><h2 id="主从复制-单机版"><a href="#主从复制-单机版" class="headerlink" title="主从复制(单机版)"></a>主从复制(单机版)</h2><p>使用这种方法 <code>master</code> 可以查询修改 <code>slave</code> 只能查询<strong>不能修改</strong></p>
<ul>
<li>cp redis.conf redis2.conf</li>
<li>vim redis2.conf(slave)</li>
<li>slaveof 192.168.163.128 6379(281 根据master实际情况修改)</li>
<li>vim redis.conf (master)</li>
<li>bind 0.0.0.s0</li>
</ul>
<h2 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h2><p>集群存储信息会存入<code>16384</code>个<code>hash</code>槽点(<code>slot</code>),用<code>crc16</code>算法把所有的<code>key-value</code>都均匀分配到这槽点中(类似于算法),所以集群最大的节点数也是<code>16384</code></p>
<blockquote>
<p>他们直接的关系关系<br><code>cluster</code>&gt;<code>node</code>&gt;<code>slot</code>&gt;<code>key</code></p>
</blockquote>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis学习2-使用命令解析</title>
    <url>/2018/01/12/redis%E5%AD%A6%E4%B9%A02-%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h1 id="Redis官网-https-redis-io"><a href="#Redis官网-https-redis-io" class="headerlink" title="Redis官网 https://redis.io/"></a>Redis官网 <span class="exturl" data-url="aHR0cHM6Ly9yZWRpcy5pby8=" title="https://redis.io/">https://redis.io/<i class="fa fa-external-link"></i></span></h1><h1 id="Redis中文-http-redis-cn"><a href="#Redis中文-http-redis-cn" class="headerlink" title="Redis中文 http://redis.cn/"></a>Redis中文 <span class="exturl" data-url="aHR0cDovL3JlZGlzLmNuLw==" title="http://redis.cn/">http://redis.cn/<i class="fa fa-external-link"></i></span></h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>redis中以<code>key-value</code>的形式存在</p>
<h3 id="set-get"><a href="#set-get" class="headerlink" title="set get"></a><code>set</code> <code>get</code></h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> wk <span class="string">&#x27;hi&#x27;</span>     <span class="comment">#set 用于保存一个键值</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get wk          <span class="comment"># get 用于获取一个键值</span></span><br><span class="line"><span class="string">&quot;hi&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="keys"><a href="#keys" class="headerlink" title="keys"></a><code>keys</code></h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *          <span class="comment"># keys * 用于获取所有的键值</span></span><br><span class="line">1) <span class="string">&quot;wk&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> xx <span class="string">&#x27;word&#x27;</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys w*         <span class="comment"># keys 支持正则表达式的形式</span></span><br><span class="line">1) <span class="string">&quot;wk&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; get w*          <span class="comment"># get 不支持正则表达式</span></span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure>

<h3 id="exists"><a href="#exists" class="headerlink" title="exists"></a>exists</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; exists wk       <span class="comment"># 查看key是否存在 存在返回1 不存在返回0</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; exists wk1</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>

<h3 id="setnx"><a href="#setnx" class="headerlink" title="setnx"></a>setnx</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setnx wk ee     <span class="comment">#如果wk不存在就保存 0 失败</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; setnx wk3 ea    <span class="comment">#如果wk不存在就保存 1 成功</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; get wk</span><br><span class="line"><span class="string">&quot;hi&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; get wk3</span><br><span class="line"><span class="string">&quot;ea&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="del"><a href="#del" class="headerlink" title="del"></a>del</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; del abc           <span class="comment">#删除一个不存在的值</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; del wk3           <span class="comment">#删除一个存在的值</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; get wks           <span class="comment"># nil表示不存在</span></span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure>

<h3 id="expire-ttl-persist"><a href="#expire-ttl-persist" class="headerlink" title="expire ttl persist"></a>expire ttl persist</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; expire wk 10       <span class="comment">#设置有效时间</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; ttl wk             <span class="comment">#查看剩余时间</span></span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br><span class="line">127.0.0.1:6379&gt; ttl wk</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379&gt; ttl wk</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379&gt; get wk</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt; persist wk          <span class="comment"># 取消过期时间</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>
<h3 id="setex"><a href="#setex" class="headerlink" title="setex"></a>setex</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setex wk 10 <span class="string">&#x27;ff&#x27;</span>    <span class="comment">#保存key-value带有效时间</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

<h3 id="mset-mget"><a href="#mset-mget" class="headerlink" title="mset mget"></a>mset mget</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; mset k1 v1 k2 v2 k3 v3  <span class="comment">#一次存储多个值</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys k*</span><br><span class="line">1) <span class="string">&quot;k2&quot;</span></span><br><span class="line">2) <span class="string">&quot;k3&quot;</span></span><br><span class="line">3) <span class="string">&quot;k1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; mget k1 k2 k3           <span class="comment">#一次获取多个值</span></span><br><span class="line">1) <span class="string">&quot;v1&quot;</span></span><br><span class="line">2) <span class="string">&quot;v2&quot;</span></span><br><span class="line">3) <span class="string">&quot;v3&quot;</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<h3 id="incr-decr"><a href="#incr-decr" class="headerlink" title="incr  decr"></a>incr  decr</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> age 1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; incr age                <span class="comment"># 对key的value累加1</span></span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; incr age</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; incr age</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379&gt; decr age                <span class="comment"># 对key的value累减1</span></span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; decr age</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br></pre></td></tr></table></figure>

<h3 id="incrby"><a href="#incrby" class="headerlink" title="incrby"></a>incrby</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> age 1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; incrby age 5            <span class="comment">#对key的value累加任意值</span></span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line">127.0.0.1:6379&gt; incrby age 5</span><br><span class="line">(<span class="built_in">integer</span>) 14</span><br><span class="line">127.0.0.1:6379&gt; decrby age 5            <span class="comment">#对key的value累减任意值</span></span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line">127.0.0.1:6379&gt; decrby age 5</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure>

<h3 id="append"><a href="#append" class="headerlink" title="append"></a>append</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name a</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; append name bb        <span class="comment">#对字符串类型的value加长</span></span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line"><span class="string">&quot;abb&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="strlen"><a href="#strlen" class="headerlink" title="strlen"></a>strlen</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name ffff</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; strlen name                 <span class="comment">#获取value字符串的长度</span></span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br></pre></td></tr></table></figure>
<h3 id="select-move"><a href="#select-move" class="headerlink" title="select move"></a>select move</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; select 0    #选择0号数据库(默认16个)</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; move age 1  #把age移动到1号数据库去</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>


<h3 id="randomkey"><a href="#randomkey" class="headerlink" title="randomkey"></a>randomkey</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; randomkey       <span class="comment">#随机返回一个key</span></span><br><span class="line"><span class="string">&quot;k2&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="rename"><a href="#rename" class="headerlink" title="rename"></a>rename</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; rename k2 k22         <span class="comment">#重命名key</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

<h3 id="type"><a href="#type" class="headerlink" title="type"></a>type</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">type</span> k22          <span class="comment">#返回key的类型</span></span><br><span class="line">string</span><br></pre></td></tr></table></figure>


<h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; ping           <span class="comment">#查看是否ping通</span></span><br><span class="line">PONG</span><br></pre></td></tr></table></figure>

<h3 id="dbsize"><a href="#dbsize" class="headerlink" title="dbsize"></a>dbsize</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; dbsize          <span class="comment"># 查看key的数量</span></span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br></pre></td></tr></table></figure>

<h3 id="quit"><a href="#quit" class="headerlink" title="quit"></a>quit</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; quit            <span class="comment">#退出redis</span></span><br><span class="line">[root@localhost redis]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h3 id="info"><a href="#info" class="headerlink" title="info"></a>info</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; info            <span class="comment">#查看redis信息</span></span><br><span class="line"><span class="comment"># Server</span></span><br><span class="line">redis_version:4.0.6</span><br><span class="line">redis_git_sha1:00000000</span><br><span class="line">redis_git_dirty:0</span><br><span class="line">redis_build_id:9c424ed353d24d83</span><br><span class="line">redis_mode:standalone</span><br><span class="line">os:Linux 3.10.0-693.2.2.el7.x86_64 x86_64</span><br><span class="line">arch_bits:64</span><br><span class="line">multiplexing_api:epoll</span><br><span class="line">atomicvar_api:atomic-builtin</span><br><span class="line">gcc_version:4.8.5</span><br><span class="line">process_id:4094</span><br><span class="line">run_id:9556cd7fdb64d5a62ef4bef245a12a594bdd19c5</span><br><span class="line">tcp_port:6379</span><br><span class="line">uptime_in_seconds:20166</span><br><span class="line">uptime_in_days:0</span><br><span class="line">hz:10</span><br><span class="line">lru_clock:5568842</span><br><span class="line">executable:/opt/app/redis-4.0.6/bin/./redis-server</span><br><span class="line">config_file:/opt/app/redis-4.0.6/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Clients</span></span><br><span class="line">connected_clients:1</span><br><span class="line">client_longest_output_list:0</span><br><span class="line">client_biggest_input_buf:0</span><br><span class="line">blocked_clients:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Memory</span></span><br><span class="line">used_memory:827984</span><br><span class="line">used_memory_human:808.58K</span><br><span class="line">used_memory_rss:8273920</span><br><span class="line">used_memory_rss_human:7.89M</span><br><span class="line">used_memory_peak:827984</span><br><span class="line">used_memory_peak_human:808.58K</span><br><span class="line">used_memory_peak_perc:100.03%</span><br><span class="line">used_memory_overhead:815710</span><br><span class="line">used_memory_startup:765672</span><br><span class="line">used_memory_dataset:12274</span><br><span class="line">used_memory_dataset_perc:19.70%</span><br><span class="line">total_system_memory:1911832576</span><br><span class="line">total_system_memory_human:1.78G</span><br><span class="line">used_memory_lua:37888</span><br><span class="line">used_memory_lua_human:37.00K</span><br><span class="line">maxmemory:0</span><br><span class="line">maxmemory_human:0B</span><br><span class="line">maxmemory_policy:noeviction</span><br><span class="line">mem_fragmentation_ratio:9.99</span><br><span class="line">mem_allocator:jemalloc-4.0.3</span><br><span class="line">active_defrag_running:0</span><br><span class="line">lazyfree_pending_objects:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Persistence</span></span><br><span class="line">loading:0</span><br><span class="line">rdb_changes_since_last_save:1</span><br><span class="line">rdb_bgsave_in_progress:0</span><br><span class="line">rdb_last_save_time:1515517794</span><br><span class="line">rdb_last_bgsave_status:ok</span><br><span class="line">rdb_last_bgsave_time_sec:0</span><br><span class="line">rdb_current_bgsave_time_sec:-1</span><br><span class="line">rdb_last_cow_size:6385664</span><br><span class="line">aof_enabled:0</span><br><span class="line">aof_rewrite_in_progress:0</span><br><span class="line">aof_rewrite_scheduled:0</span><br><span class="line">aof_last_rewrite_time_sec:-1</span><br><span class="line">aof_current_rewrite_time_sec:-1</span><br><span class="line">aof_last_bgrewrite_status:ok</span><br><span class="line">aof_last_write_status:ok</span><br><span class="line">aof_last_cow_size:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Stats</span></span><br><span class="line">total_connections_received:2</span><br><span class="line">total_commands_processed:57</span><br><span class="line">instantaneous_ops_per_sec:0</span><br><span class="line">total_net_input_bytes:1547</span><br><span class="line">total_net_output_bytes:20795</span><br><span class="line">instantaneous_input_kbps:0.00</span><br><span class="line">instantaneous_output_kbps:0.00</span><br><span class="line">rejected_connections:0</span><br><span class="line">sync_full:0</span><br><span class="line">sync_partial_ok:0</span><br><span class="line">sync_partial_err:0</span><br><span class="line">expired_keys:2</span><br><span class="line">evicted_keys:0</span><br><span class="line">keyspace_hits:14</span><br><span class="line">keyspace_misses:7</span><br><span class="line">pubsub_channels:0</span><br><span class="line">pubsub_patterns:0</span><br><span class="line">latest_fork_usec:1505</span><br><span class="line">migrate_cached_sockets:0</span><br><span class="line">slave_expires_tracked_keys:0</span><br><span class="line">active_defrag_hits:0</span><br><span class="line">active_defrag_misses:0</span><br><span class="line">active_defrag_key_hits:0</span><br><span class="line">active_defrag_key_misses:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_replid:aebd0c8660256e8b928cda381a6c247a5860ffc2</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:0</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:0</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:0</span><br><span class="line">repl_backlog_histlen:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># CPU</span></span><br><span class="line">used_cpu_sys:8.84</span><br><span class="line">used_cpu_user:4.33</span><br><span class="line">used_cpu_sys_children:0.13</span><br><span class="line">used_cpu_user_children:0.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cluster</span></span><br><span class="line">cluster_enabled:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Keyspace</span></span><br><span class="line">db0:keys=6,expires=0,avg_ttl=0</span><br><span class="line">db1:keys=1,expires=0,avg_ttl=0</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>


<h3 id="config-get-set"><a href="#config-get-set" class="headerlink" title="config get|set"></a>config get|set</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; config get port     <span class="comment">#动态获取(修改)数据库配置</span></span><br><span class="line">1) <span class="string">&quot;port&quot;</span></span><br><span class="line">2) <span class="string">&quot;6379&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="hmset-hget"><a href="#hmset-hget" class="headerlink" title="hmset hget"></a>hmset hget</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hmset hashmap h1 v1 h2 v2  <span class="comment">#存储一个hashmap</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; hmget hashmap h1   <span class="comment">#读取hashmap的值</span></span><br><span class="line"><span class="string">&quot;v1&quot;</span></span><br></pre></td></tr></table></figure>


<h3 id="lpush-rpush-llen-lrange"><a href="#lpush-rpush-llen-lrange" class="headerlink" title="lpush rpush  llen lrange"></a>lpush rpush  llen lrange</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lpush list 1        #左侧插入list元素</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; lpush list 0</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; rpush list 2       #右侧插入list元素</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; llen list           #查看list长度</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; lrange list 0 2        #查看list元素</span><br><span class="line">1) &quot;0&quot;</span><br><span class="line">2) &quot;1&quot;</span><br><span class="line">3) &quot;2&quot;</span><br></pre></td></tr></table></figure>


<h3 id="sadd-smsmbers"><a href="#sadd-smsmbers" class="headerlink" title="sadd smsmbers"></a>sadd smsmbers</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd set aaa    #插入一个set</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd set aaa</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; smembers set       #查看set</span><br><span class="line">1) &quot;aaa&quot;</span><br></pre></td></tr></table></figure>

<h3 id="zset"><a href="#zset" class="headerlink" title="zset"></a>zset</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd db 1 redis  # 插入一个有序的zset</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; zadd db 2 mysql</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; zrangebyscore db 0 10  #排序zset</span><br><span class="line">1) &quot;redis&quot;</span><br><span class="line">2) &quot;mysql&quot;</span><br></pre></td></tr></table></figure>

<h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p>exec 开启事务<br>discard 取消事务<br>exec 执行事务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; multi         #开始事务</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; incr age</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; incr age</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; exec            #执行事务</span><br><span class="line">1) (integer) 1</span><br><span class="line">2) (integer) 2</span><br></pre></td></tr></table></figure>

<h3 id="发布与订阅"><a href="#发布与订阅" class="headerlink" title="发布与订阅"></a>发布与订阅</h3><p>订阅端</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; subscribe zwq</span><br><span class="line">Reading messages... (press Ctrl-C to quit)</span><br><span class="line">1) &quot;subscribe&quot;</span><br><span class="line">2) &quot;zwq&quot;</span><br><span class="line">3) (integer) 1</span><br></pre></td></tr></table></figure>

<p>发布端口 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; publish zwq myx</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>

<p>发布完成后会在订阅段显示myx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; subscribe zwq</span><br><span class="line">Reading messages... (press Ctrl-C to quit)</span><br><span class="line">1) &quot;subscribe&quot;</span><br><span class="line">2) &quot;zwq&quot;</span><br><span class="line">3) (integer) 1</span><br><span class="line">1) &quot;message&quot;</span><br><span class="line">2) &quot;zwq&quot;</span><br><span class="line">3) &quot;myx&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis学习2-安装</title>
    <url>/2018/01/07/redis%E5%AD%A6%E4%B9%A02-%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="Redis官网-https-redis-io"><a href="#Redis官网-https-redis-io" class="headerlink" title="Redis官网 https://redis.io/"></a>Redis官网 <span class="exturl" data-url="aHR0cHM6Ly9yZWRpcy5pby8=" title="https://redis.io/">https://redis.io/<i class="fa fa-external-link"></i></span></h1><h1 id="Redis中文-http-redis-cn"><a href="#Redis中文-http-redis-cn" class="headerlink" title="Redis中文 http://redis.cn/"></a>Redis中文 <span class="exturl" data-url="aHR0cDovL3JlZGlzLmNuLw==" title="http://redis.cn/">http://redis.cn/<i class="fa fa-external-link"></i></span></h1><h2 id="Redis-安装"><a href="#Redis-安装" class="headerlink" title="Redis 安装"></a>Redis 安装</h2><blockquote>
<p>准备工作(无特殊情况无需操作)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure>
</blockquote>
<p>下载redis,解压redis文件(可以去官网查询最新版本)</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /opt/data/</span></span><br><span class="line">[root@localhost data]<span class="comment"># wget http://download.redis.io/releases/redis-4.0.6.tar.gz</span></span><br><span class="line">[root@localhost data]<span class="comment"># tar -zxvf /opt/data/redis-4.0.6.tar.gz -C /opt/app</span></span><br><span class="line">[root@localhost data]<span class="comment"># cd /opt/app/redis-4.0.6/</span></span><br></pre></td></tr></table></figure>

<p>编译并测试安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost redis-4.0.6]<span class="comment"># make install PREFIX=/opt/app/redis-4.0.6  </span></span><br><span class="line">[root@localhost redis-4.0.6]<span class="comment"># make test</span></span><br></pre></td></tr></table></figure>


<p>出现如下文字表示通过安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">\o/ All tests passed without errors!</span><br><span class="line"></span><br><span class="line">Cleanup: may take some time... OK</span><br></pre></td></tr></table></figure>

<p>绑定软连接</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop app]<span class="comment"># ln -s redis-4.0.6/ redis</span></span><br></pre></td></tr></table></figure>



<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="Redis-启动"><a href="#Redis-启动" class="headerlink" title="Redis 启动"></a>Redis 启动</h2><p><code>&amp;</code>符号表示后台启动</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># cd bin</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ./redis-server ../redis.conf&amp;</span></span><br></pre></td></tr></table></figure>


<h2 id="Redis-查看是否启动"><a href="#Redis-查看是否启动" class="headerlink" title="Redis 查看是否启动"></a>Redis 查看是否启动</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ps -ef | grep redis</span></span><br></pre></td></tr></table></figure>

<h2 id="Redis-关闭"><a href="#Redis-关闭" class="headerlink" title="Redis 关闭"></a>Redis 关闭</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./redis-cli shutdown <span class="comment">#推荐方法</span></span><br><span class="line"><span class="built_in">kill</span> -9 进程号  <span class="comment">#暴力方法  进程号通过 ps -ef | grep redis 查看</span></span><br></pre></td></tr></table></figure>
<h2 id="Redis-连接"><a href="#Redis-连接" class="headerlink" title="Redis 连接"></a>Redis 连接</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># ./redis-cli -h 127.0.0.1</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis学习2-持久化初步</title>
    <url>/2018/01/12/redis%E5%AD%A6%E4%B9%A02-%E6%8C%81%E4%B9%85%E5%8C%96%E5%88%9D%E6%AD%A5/</url>
    <content><![CDATA[<h1 id="Redis官网-https-redis-io"><a href="#Redis官网-https-redis-io" class="headerlink" title="Redis官网 https://redis.io/"></a>Redis官网 <span class="exturl" data-url="aHR0cHM6Ly9yZWRpcy5pby8=" title="https://redis.io/">https://redis.io/<i class="fa fa-external-link"></i></span></h1><h1 id="Redis中文-http-redis-cn"><a href="#Redis中文-http-redis-cn" class="headerlink" title="Redis中文 http://redis.cn/"></a>Redis中文 <span class="exturl" data-url="aHR0cDovL3JlZGlzLmNuLw==" title="http://redis.cn/">http://redis.cn/<i class="fa fa-external-link"></i></span></h1><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><h3 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h3><p>11111</p>
<h3 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h3><p>111111</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>sharding-jdbc</title>
    <url>/2018/03/03/sharding-jdbc/</url>
    <content><![CDATA[<blockquote>
<p>官网: <span class="exturl" data-url="aHR0cDovL3NoYXJkaW5namRiYy5pby8=" title="http://shardingjdbc.io/">http://shardingjdbc.io/<i class="fa fa-external-link"></i></span></p>
</blockquote>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>sharding-jdbc</tag>
      </tags>
  </entry>
  <entry>
    <title>redis学习3-集群搭建</title>
    <url>/2018/01/12/redis%E5%AD%A6%E4%B9%A03-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<blockquote>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>关闭防火墙,selinux</li>
<li>所有机器上都安装好redis</li>
<li>所有机器上都安装好ruby(&gt;=2.2.2)</li>
<li>准备3台机器<ul>
<li>192.168.163.131</li>
<li>192.168.163.132</li>
<li>192.168.163.133</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="创建集群配置文件夹（所有机器）"><a href="#创建集群配置文件夹（所有机器）" class="headerlink" title="创建集群配置文件夹（所有机器）"></a>创建集群配置文件夹（所有机器）</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir /opt/app/redis/cluster-conf</span><br></pre></td></tr></table></figure>

<h2 id="创建集群端口文件夹（所有机器）"><a href="#创建集群端口文件夹（所有机器）" class="headerlink" title="创建集群端口文件夹（所有机器）"></a>创建集群端口文件夹（所有机器）</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app/redis/cluster-conf/7001</span><br><span class="line">mkdir -p /opt/app/redis/cluster-conf/7002</span><br></pre></td></tr></table></figure>

<h2 id="redis配置文件复制到7001（所有机器）"><a href="#redis配置文件复制到7001（所有机器）" class="headerlink" title="redis配置文件复制到7001（所有机器）"></a>redis配置文件复制到7001（所有机器）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;opt&#x2F;app&#x2F;redis&#x2F;redis.conf &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7001</span><br></pre></td></tr></table></figure>

<h2 id="创建redis产生的数据文件-所有机器"><a href="#创建redis产生的数据文件-所有机器" class="headerlink" title="创建redis产生的数据文件(所有机器)"></a>创建redis产生的数据文件(所有机器)</h2><p>建议放空间较大的目录下 本次存放路径为<code>/opt/app/redis/cluster-data/</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-data&#x2F;</span><br><span class="line">mkdir &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-data&#x2F;7001&#x2F;</span><br><span class="line">mkdir &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-data&#x2F;7002&#x2F;</span><br></pre></td></tr></table></figure>

<h2 id="修改配置文件-所有机器"><a href="#修改配置文件-所有机器" class="headerlink" title="修改配置文件(所有机器)"></a>修改配置文件(所有机器)</h2><p>注释原来的<code>6379</code><br>用<code>/prot 6379</code>来查找位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7001&#x2F;redis.conf</span><br><span class="line"></span><br><span class="line"># 先注释原来的6379</span><br><span class="line">port 7001</span><br><span class="line">logfile &quot;&#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7001&#x2F;redis.log&quot;</span><br><span class="line">dir &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-data&#x2F;7001&#x2F;</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line">appendonly yes</span><br><span class="line">bind 0.0.0.0</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>port</code></td>
<td>端口号</td>
</tr>
<tr>
<td><code>logfile</code></td>
<td>指定了记录日志的文件</td>
</tr>
<tr>
<td><code>dir</code></td>
<td>数据目录,数据库的写入会在这个目录.<code>rdb</code>,<code>aof</code>文件也会写在这个目录.</td>
</tr>
<tr>
<td><code>cluster-enabled</code></td>
<td>是否开启集群</td>
</tr>
<tr>
<td><code>cluster-config-file nodes.conf</code></td>
<td>集群配置文件的名称,每个节点都有一个集群相关的配置文件,持久化保存集群的信息.这个文件并不需要手动配置,这个配置文件有<code>Redis</code>生成并更新,每个<code>Redis</code>集群节点需要一个单独的配置文件,请确保与实例运行的系统中配置文件名称不冲突</td>
</tr>
<tr>
<td><code>cluster-node-timeout</code></td>
<td>节点互连超时的阀值, 集群节点超时毫秒数</td>
</tr>
<tr>
<td><code>appendonly </code></td>
<td>默认<code>redis</code>使用的是<code>rdb</code>方式持久化,这种方式在许多应用中已经足够用了.但是<code>redis</code>如果中途宕机,会导致可能有几分钟的数据丢失,根据<code>save</code>来策略进行持久化,<code>Append Only File</code>是另一种持久化方式,可以提供更好的持久化特性.<code>Redis</code>会把每次写入的数据在接收后都写入 <code>appendonly.aof</code> 文件,每次启动时<code>Redis</code>都会先把这个文件的数据读入内存里,先忽略RDB文件.</td>
</tr>
</tbody></table>
<h2 id="把7001的配置文件复制到7002-所有机器"><a href="#把7001的配置文件复制到7002-所有机器" class="headerlink" title="把7001的配置文件复制到7002(所有机器)"></a>把<code>7001</code>的配置文件复制到<code>7002</code>(所有机器)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7001&#x2F;redis.conf &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7002&#x2F;redis.conf</span><br></pre></td></tr></table></figure>

<h2 id="修改7002的配置文件"><a href="#修改7002的配置文件" class="headerlink" title="修改7002的配置文件"></a>修改<code>7002</code>的配置文件</h2><p>把端口号<code>7001</code>修改为<code>7002</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim  &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7002&#x2F;redis.conf</span><br><span class="line"></span><br><span class="line">port 7002</span><br><span class="line">logfile &quot;&#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7002&#x2F;redis.log&quot;</span><br><span class="line">dir &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-data&#x2F;7002&#x2F;</span><br></pre></td></tr></table></figure>
<h2 id="这样就配置完成了-启动所有服务"><a href="#这样就配置完成了-启动所有服务" class="headerlink" title="这样就配置完成了,启动所有服务"></a>这样就配置完成了,启动所有服务</h2><p>也可以使用<code>scp</code>来复制配置文件<br>现在只是单纯的启动多个,还没有在他们之间建立关系</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;opt&#x2F;app&#x2F;redis&#x2F;bin&#x2F;redis-server &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7001&#x2F;redis.conf &amp;</span><br><span class="line">&#x2F;opt&#x2F;app&#x2F;redis&#x2F;bin&#x2F;redis-server &#x2F;opt&#x2F;app&#x2F;redis&#x2F;cluster-conf&#x2F;7002&#x2F;redis.conf &amp;</span><br></pre></td></tr></table></figure>

<h2 id="检查是否启动成功"><a href="#检查是否启动成功" class="headerlink" title="检查是否启动成功"></a>检查是否启动成功</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop redis]# ps -ef | grep redis</span><br><span class="line">root       6705   3187  0 07:03 pts&#x2F;1    00:00:13 .&#x2F;redis-server 127.0.0.1:6379</span><br><span class="line">root       8991   6854  0 08:43 pts&#x2F;2    00:00:00 &#x2F;opt&#x2F;app&#x2F;redis&#x2F;bin&#x2F;redis-server 0.0.0.0:7001 [cluster]                     </span><br><span class="line">root       8997   6854  0 08:46 pts&#x2F;2    00:00:00 &#x2F;opt&#x2F;app&#x2F;redis&#x2F;bin&#x2F;redis-server 0.0.0.0:7002 [cluster]                     </span><br><span class="line">root       9002   6854  0 08:47 pts&#x2F;2    00:00:00 grep redis</span><br></pre></td></tr></table></figure>


<p>ruby extconf.rb –with-openssl-include=/usr/bin/openssl/include/ –with-openssl-lib=/usr/bin/openssl/lib</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>sourceTree安装笔记</title>
    <url>/2018/09/14/sourceTree%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>官网下载 <span class="exturl" data-url="aHR0cHM6Ly93d3cuc291cmNldHJlZWFwcC5jb20v" title="https://www.sourcetreeapp.com/">https://www.sourcetreeapp.com/<i class="fa fa-external-link"></i></span></p>
<h2 id="跳过注册"><a href="#跳过注册" class="headerlink" title="跳过注册"></a>跳过注册</h2><ol>
<li><p>找到目录：C:\Users\Administrator\AppData\Local\Atlassian\SourceTree</p>
</li>
<li><p>新建accounts.json文件里面输入</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;$id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;$type&quot;</span>: <span class="string">&quot;SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Authenticate&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;HostInstance&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;$id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">      <span class="string">&quot;$type&quot;</span>: <span class="string">&quot;SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Host&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;$id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;$type&quot;</span>: <span class="string">&quot;SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Id&quot;</span>: <span class="string">&quot;atlassian account&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;BaseUrl&quot;</span>: <span class="string">&quot;https://id.atlassian.com/&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;Credentials&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;$id&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">      <span class="string">&quot;$type&quot;</span>: <span class="string">&quot;SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Username&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Email&quot;</span>: <span class="literal">null</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;IsDefault&quot;</span>: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h2 id="安装Mercurial"><a href="#安装Mercurial" class="headerlink" title="安装Mercurial"></a>安装Mercurial</h2><p>直接通过官网下载 <span style="color:#0000FF"><span class="exturl" data-url="aHR0cHM6Ly93d3cubWVyY3VyaWFsLXNjbS5vcmcv" title="https://www.mercurial-scm.org/">https://www.mercurial-scm.org/<i class="fa fa-external-link"></i></span></span></p>
]]></content>
  </entry>
  <entry>
    <title>spring-boot配置</title>
    <url>/2018/05/15/spring-boot%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="创建springboot开启Run-Dashboard"><a href="#创建springboot开启Run-Dashboard" class="headerlink" title="创建springboot开启Run Dashboard"></a>创建springboot开启Run Dashboard</h2><ol>
<li>首先找到项目中.idea文件下的workspace.xml开打<br><img src="/2018/05/15/spring-boot%E9%85%8D%E7%BD%AE/image-5.png" alt="文件位置"></li>
<li>接下来找到<code>&lt;component name=&quot;RunDashboard&quot;&gt;</code><br><img src="/2018/05/15/spring-boot%E9%85%8D%E7%BD%AE/image-6.png" alt="修改位置"></li>
<li>加入代码<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;option name&#x3D;&quot;configurationTypes&quot;&gt;  </span><br><span class="line">      &lt;set&gt;  </span><br><span class="line">        &lt;option value&#x3D;&quot;SpringBootApplicationConfigurationType&quot; &#x2F;&gt;  </span><br><span class="line">      &lt;&#x2F;set&gt;  </span><br><span class="line"> &lt;&#x2F;option&gt;</span><br></pre></td></tr></table></figure></li>
<li>完成</li>
</ol>
<p><img src="/2018/05/15/spring-boot%E9%85%8D%E7%BD%AE/image-7.png" alt="结果截图"></p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot学习</title>
    <url>/2018/06/12/springboot%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h3 id="父级pom的作用"><a href="#父级pom的作用" class="headerlink" title="父级pom的作用"></a>父级pom的作用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">		&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">		&lt;version&gt;1.5.10.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">		&lt;relativePath&#x2F;&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">	&lt;&#x2F;parent&gt;</span><br></pre></td></tr></table></figure>

<h3 id="父级pom主要作用"><a href="#父级pom主要作用" class="headerlink" title="父级pom主要作用"></a>父级pom主要作用</h3><ul>
<li>所有jar包的统一管理</li>
<li>所有jar的依赖管理其中包含springboot给我们提供的许多starter启动器</li>
</ul>
<p>打开maven仓库可以<code>springboot</code>所依赖的所有的包,其中有starter等,这里主要看<code>spring-boot-parent</code></p>
<p><img src="/2018/06/12/springboot%E5%AD%A6%E4%B9%A0/image-31.png" alt="upload successful"></p>
<p>选择<code>1.5.10.RELEASE</code>版本,打开<code>pom</code>文件<code>dependencyManagement</code>这个标签下的作用是<span style="color:#FF0000">JAR版本管理</span>,如果需要使用必须主动引入,这样的好处是<span style="color:#FF0000">在父级中定义了子级可能出现的jar,子级只需要直接引入即可不需要关系引入jar的版本</span><br><img src="/2018/06/12/springboot%E5%AD%A6%E4%B9%A0/image-32.png" alt="upload successful"></p>
<p>仔细观察可以发现,他的jar又是通过一个父级的(爷爷级别的)<br><img src="/2018/06/12/springboot%E5%AD%A6%E4%B9%A0/image-33.png" alt="upload successful"><br>通过这个路劲再次找到这个<code>pom</code>文件,可以在其中找到springboot所需要的关键jar<br><img src="/2018/06/12/springboot%E5%AD%A6%E4%B9%A0/image-34.png" alt="upload successful"><br>通过以上步骤可以发现,spootboot的stater非常关键,他管理了统一的jar,以及依赖.</p>
<h3 id="多个springboot子模块协作开发"><a href="#多个springboot子模块协作开发" class="headerlink" title="多个springboot子模块协作开发"></a>多个springboot子模块协作开发</h3><p>如果同一个项目需要拆分成多个springboot,那么就要为他们创建统一的<code>自定义父级pom</code>,这样可以更方便的管理模块,以及版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">	xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">	&lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line">	&lt;groupId&gt;com.tuling.springboot&lt;&#x2F;groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;vip-springboot-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">	&lt;packaging&gt;pom&lt;&#x2F;packaging&gt;</span><br><span class="line"></span><br><span class="line">	&lt;name&gt;vip-springboot-parent&lt;&#x2F;name&gt;</span><br><span class="line">	&lt;url&gt;http:&#x2F;&#x2F;maven.apache.org&lt;&#x2F;url&gt;</span><br><span class="line"></span><br><span class="line">	&lt;properties&gt;</span><br><span class="line">		&lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;</span><br><span class="line">		&lt;project.reporting.outputEncoding&gt;UTF-8&lt;&#x2F;project.reporting.outputEncoding&gt;</span><br><span class="line">		&lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class="line">	&lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line">	&lt;dependencyManagement&gt;</span><br><span class="line">		&lt;dependencies&gt;</span><br><span class="line">			&lt;dependency&gt;</span><br><span class="line">				&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">				&lt;artifactId&gt;spring-boot-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">				&lt;version&gt;1.5.10.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">				&lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">				&lt;scope&gt;import&lt;&#x2F;scope&gt;		&lt;!--这里需要修改--&gt;</span><br><span class="line">			&lt;&#x2F;dependency&gt;</span><br><span class="line">		&lt;&#x2F;dependencies&gt;</span><br><span class="line">	&lt;&#x2F;dependencyManagement&gt;</span><br><span class="line">	&lt;build&gt;</span><br><span class="line">		&lt;plugins&gt;</span><br><span class="line">			&lt;plugin&gt;</span><br><span class="line">				&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">				&lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">				&lt;configuration&gt;</span><br><span class="line">					&lt;mainClass&gt;com.tuling.springboot.base.SpringBootStart&lt;&#x2F;mainClass&gt;</span><br><span class="line">				&lt;&#x2F;configuration&gt;</span><br><span class="line">				&lt;executions&gt;</span><br><span class="line">					&lt;execution&gt;</span><br><span class="line">						&lt;goals&gt;</span><br><span class="line">							&lt;goal&gt;repackage&lt;&#x2F;goal&gt;</span><br><span class="line">						&lt;&#x2F;goals&gt;</span><br><span class="line">					&lt;&#x2F;execution&gt;</span><br><span class="line">				&lt;&#x2F;executions&gt;</span><br><span class="line">			&lt;&#x2F;plugin&gt;</span><br><span class="line">		&lt;&#x2F;plugins&gt;</span><br><span class="line">	&lt;&#x2F;build&gt;</span><br><span class="line">	&lt;modules&gt;</span><br><span class="line">		&lt;module&gt;vip-springboot-base&lt;&#x2F;module&gt;</span><br><span class="line">	&lt;&#x2F;modules&gt;</span><br><span class="line">&lt;&#x2F;project&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="spring单元测试"><a href="#spring单元测试" class="headerlink" title="spring单元测试"></a>spring单元测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Ignore</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes=SampleController.class)</span></span><br><span class="line"><span class="meta">@WebAppConfiguration</span></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerTest</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> SampleController controller ;</span><br><span class="line">	</span><br><span class="line"><span class="comment">//	@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHome</span><span class="params">()</span></span>&#123;</span><br><span class="line">		TestCase.assertEquals(<span class="string">&quot;Hello World!&quot;</span>, controller.home());</span><br><span class="line">		System.out.println(controller.home());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="spring-boot-启动注解分析"><a href="#spring-boot-启动注解分析" class="headerlink" title="spring boot 启动注解分析"></a>spring boot 启动注解分析</h3><ol>
<li><p><code>@EnableAutoConfiguration</code>：开启自动配置功能<br><code>@ComponentScan(basePackages=&#123;&quot;com.example.boot&quot;&#125;)</code> 包扫描</p>
</li>
<li><p><code>@SpringBootApplication</code>配置详解：<br>他是一个组合注解，他内部主要包含三个子注解：<code>@SpringBootConfiguration</code>、<code>@EnableAutoConfiguration</code>、<code>ComponentScan</code><br><code>@SpringBootConfiguration</code>：他继承<code>@Configuration</code>，说明这是一个配置类，什么是配置类呢？就相当于我们以前写的<code>xml</code>配置，例如我们我们的<code>bean</code>标签，用来实例化一个<code>bean</code>。那么在这个配置类中就是实现以前我们<code>xml</code>配置的功能<br><code>@EnableAutoConfiguration</code>：开启自动配置功能，他会扫描带有<code>@Configuration</code>的类，然后初始化这些配置类中的信息并且加入到应用上下文中去，同时完成一些基本的初始化工作<br><code>@ComponentScan</code>：组件包扫描，也就是我现在需要扫描哪些包下面的注解，可自动发现和装配一些<code>bean</code>。默认扫描当前启动类所在包下面的类和下面的所有子包</p>
</li>
</ol>
<h3 id="对springboot的理解"><a href="#对springboot的理解" class="headerlink" title="对springboot的理解"></a>对springboot的理解</h3><p>他就是一个CI持续集成   (大管家)<br>可以集成各种各样的工具(mybatis,mysql,mvc)<br>并且对他们进行初始化</p>
<h3 id="springboot的热加载"><a href="#springboot的热加载" class="headerlink" title="springboot的热加载"></a>springboot的热加载</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-devtools&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&#96;&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line">### springboot打包配置</span><br><span class="line">修改boot-parent中pom.xml文件,增加如下内容（当然也可以把下面的内容复制到子模块中也是可以的）</span><br></pre></td></tr></table></figure>
 <build>
  <plugins>
   <plugin><!-- 项目的打包发布 -->
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-maven-plugin</artifactId>
    <configuration>
    <mainClass>com.example.boot.SpringBootMain</mainClass>
    </configuration>
    <executions>
     <execution>
      <goals>
       <goal>repackage</goal>
      </goals>
     </execution>
    </executions>
   </plugin>
  </plugins>
 </build>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">打包命令</span><br></pre></td></tr></table></figure>
mvn clean package -Dmaven.test.skip=true
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">启动命令</span><br></pre></td></tr></table></figure>
java -jar x_springboot.jar --server.port=8888
```
]]></content>
      <tags>
        <tag>java</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>sublime技巧总结</title>
    <url>/2020/03/06/sublime%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p><code>ctrl</code>+<code>D</code>    选中一个单词</p>
]]></content>
      <tags>
        <tag>sublime</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat监控、mysql备份、jar文件启动停止重启</title>
    <url>/2020/03/03/tomcat%E7%9B%91%E6%8E%A7%E3%80%81mysql%E5%A4%87%E4%BB%BD%E3%80%81jar%E6%96%87%E4%BB%B6%E5%90%AF%E5%8A%A8%E5%81%9C%E6%AD%A2%E9%87%8D%E5%90%AF/</url>
    <content><![CDATA[<h2 id="tomcat监控-自动重启-注意tomcat路径要根据实际情况更改"><a href="#tomcat监控-自动重启-注意tomcat路径要根据实际情况更改" class="headerlink" title="tomcat监控 自动重启 注意tomcat路径要根据实际情况更改"></a>tomcat监控 自动重启 注意tomcat路径要根据实际情况更改</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># 获取tomcat进程ID 注意tomcat路径要根据实际情况更改</span></span><br><span class="line">TomcatID=$(ps -ef |grep <span class="string">&#x27;/root/tomcat/bin&#x27;</span>|grep -v <span class="string">&#x27;grep&#x27;</span>| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="comment"># tomcat启动程序 注意tomcat路径要根据实际情况更改</span></span><br><span class="line">StartTomcat=/root/tomcat/bin/startup.sh</span><br><span class="line"><span class="comment"># 定义要监控的页面地址 </span></span><br><span class="line">WebUrl=http://localhost:8080</span><br><span class="line"><span class="comment"># 日志输出</span></span><br><span class="line">TomcatMonitorLog=/root/logs/tomcatMonitor.log</span><br><span class="line"><span class="comment"># 监控方法主体</span></span><br><span class="line">Monitor()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;[start]---[<span class="subst">$(date +&#x27;%F %H:%M:%S&#x27;)</span>]---&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">test</span> <span class="variable">$TomcatID</span> ;<span class="keyword">then</span> <span class="comment">#这里判断Tomcat进程是否存在</span></span><br><span class="line">            <span class="comment"># 检测是否启动成功(成功的话页面会返回状态&quot;200&quot;)</span></span><br><span class="line">            TomcatServiceCode=$(curl -s -m 1000 --connect-timeout 1000 <span class="variable">$WebUrl</span> -w %&#123;http_code&#125;)</span><br><span class="line">            <span class="keyword">if</span> [[ <span class="variable">$TomcatServiceCode</span> -eq 200 || <span class="variable">$TomcatServiceCode</span> -eq 000 ]];<span class="keyword">then</span>  </span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;[success]tomcatid:<span class="variable">$TomcatID</span>,code:<span class="variable">$TomcatServiceCode</span>&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;[error]tomcat页面出错，状态码为<span class="variable">$TomcatServiceCode</span>&quot;</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;[error]页面访问出错，开始重启tomcat&quot;</span></span><br><span class="line">                <span class="built_in">kill</span> -9 <span class="variable">$TomcatID</span> <span class="comment"># 杀掉原tomcat进程</span></span><br><span class="line">                sleep 5</span><br><span class="line">                <span class="comment">#rm -rf $TomcatCache # 清理tomcat缓存</span></span><br><span class="line">                <span class="variable">$StartTomcat</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;[error]tomcat进程不存在&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;[info]<span class="variable">$StartTomcat</span> 启动中&quot;</span></span><br><span class="line">            <span class="comment">#rm -rf $TomcatCache</span></span><br><span class="line">            <span class="variable">$StartTomcat</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;[end]---[<span class="subst">$(date +&#x27;%F %H:%M:%S&#x27;)</span>]---&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 清理日志文件方法</span></span><br><span class="line">cleanLog()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ! [ -f <span class="variable">$TomcatMonitorLog</span> ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;file not exist!&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="comment"># 大于10M 自动清空日志文件</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">test</span> `ls -l <span class="variable">$TomcatMonitorLog</span>|awk <span class="string">&#x27;&#123;print $5&#125;&#x27;</span>` -gt $((<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">10</span>)) </span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;[clean]---[<span class="subst">$(date +&#x27;%F %H:%M:%S&#x27;)</span>]---&quot;</span> &gt; <span class="variable">$TomcatMonitorLog</span> <span class="comment"># 清空</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 超过10M清空日志</span></span><br><span class="line">cleanLog</span><br><span class="line"><span class="comment"># 执行监控脚本</span></span><br><span class="line">Monitor &gt;&gt; <span class="variable">$TomcatMonitorLog</span></span><br></pre></td></tr></table></figure>

<h2 id="MySql定期自动备份-需要先配置账号密码到my-cnf中"><a href="#MySql定期自动备份-需要先配置账号密码到my-cnf中" class="headerlink" title="MySql定期自动备份 需要先配置账号密码到my.cnf中"></a>MySql定期自动备份 需要先配置账号密码到my.cnf中</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># mysql 自动备份、压缩、加密</span></span><br><span class="line"><span class="comment"># 文件名为 database_日期</span></span><br><span class="line">backupDatabase=database</span><br><span class="line"><span class="comment"># 代表数据库名_年月日 也可以根据需要修改 %Y%m%d%H%M%S</span></span><br><span class="line">fileName=<span class="variable">$&#123;backupDatabase&#125;</span>_`date +%Y%m%d`</span><br><span class="line"><span class="comment"># 存放备份的目录，可以是任意位置，先创建并赋权</span></span><br><span class="line">baseDir=/root/backup/files/mysql/<span class="variable">$&#123;backupDatabase&#125;</span>/</span><br><span class="line"><span class="comment"># 备份数据库</span></span><br><span class="line">mysqldump --defaults-extra-file=/etc/my.cnf <span class="variable">$&#123;backupDatabase&#125;</span> &gt; <span class="variable">$&#123;baseDir&#125;</span><span class="variable">$&#123;fileName&#125;</span>.sql</span><br><span class="line"><span class="comment"># 加密压缩 大写P 必须填入你自己想的压缩密码，解压时需要用到</span></span><br><span class="line">tar -zcPvf - <span class="variable">$&#123;baseDir&#125;</span><span class="variable">$&#123;fileName&#125;</span>.sql | openssl des3 -salt -k 你的自定义的压缩文件密码 -out <span class="variable">$&#123;baseDir&#125;</span><span class="variable">$&#123;fileName&#125;</span>.sql.tar.gz </span><br><span class="line"><span class="comment"># 删除刚刚备份的sql文件,留下压缩的</span></span><br><span class="line">rm -f <span class="variable">$&#123;baseDir&#125;</span><span class="variable">$&#123;fileName&#125;</span>.sql;</span><br><span class="line"><span class="comment"># 删除90天前备份的数据</span></span><br><span class="line">find <span class="variable">$&#123;baseDir&#125;</span> -mtime +90 -name <span class="string">&quot;<span class="variable">$&#123;backupDatabase&#125;</span>*.tar.gz&quot;</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<h2 id="启动-停止-重启-Jar文件的应用-xxx改为你的项目路径或文件名"><a href="#启动-停止-重启-Jar文件的应用-xxx改为你的项目路径或文件名" class="headerlink" title="启动/停止/重启 Jar文件的应用 xxx改为你的项目路径或文件名"></a>启动/停止/重启 Jar文件的应用 xxx改为你的项目路径或文件名</h2><p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动脚本，nohup方式后台运行jar包，其中参数需要根据实际情况调敿<span class="comment"># 参数说明如下</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -Xms128m    JVM初始分配的堆内存</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -Xmx1024m    JVM最大允许分配的堆内孿<span class="comment"># /root/java/xxx-1.0.0.jar</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --spring.profiles.active=prod    运行application-prod.properties</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &gt; logs/api.out    实时输出控制台信息到指定文件</span></span><br><span class="line">nohup java -jar -Xms128m -Xmx1024m /root/web/java/xxx/xxx-1.0.0.jar --spring.profiles.active=prod &gt; logs/xxx.out &amp;</span><br></pre></td></tr></table></figure>

<p>停止</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止脚本，其中 xxx-1.0.0.jar 需要替换成实际文件名，而且尽量确保名字唯一性，防止错杀</span></span><br><span class="line">xxxID=$(ps -ef |grep &#x27;xxx-1.0.0.jar&#x27;|grep -v &#x27;grep&#x27;| awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line"><span class="meta">#</span><span class="bash"> run</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断进程是否存在</span></span><br><span class="line">if test $xxxID ;then</span><br><span class="line">    # 杀死进程</span><br><span class="line">    kill -9 $xxxID</span><br><span class="line">    echo &quot;[SUCCESS] 进程已杀死&quot;</span><br><span class="line">else</span><br><span class="line">    # 提示不进程不存在</span><br><span class="line">    echo &quot;[ERROR] 进程不存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p>重启</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启脚本，实际上就是结合了前面2个脚本</span></span><br><span class="line">xxxID=$(ps -ef |grep &#x27;xxx-1.0.0.jar&#x27;|grep -v &#x27;grep&#x27;| awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line"><span class="meta">#</span><span class="bash"> run</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断进程是否存在</span></span><br><span class="line">if test $xxxID ;then</span><br><span class="line">    # 杀死进程</span><br><span class="line">    kill -9 $xxxID</span><br><span class="line">    echo &quot;[SUCCESS] 进程已杀死&quot;</span><br><span class="line">else</span><br><span class="line">    # 提示不进程不存在</span><br><span class="line">    echo &quot;[ERROR] 进程不存在&quot;</span><br><span class="line">fi</span><br><span class="line">sleep 5</span><br><span class="line">nohup java -jar -Xms128m -Xmx1024m /root/web/java/xxx/xxx-1.0.0.jar --spring.profiles.active=prod &gt; logs/xxx.out &amp;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>windowns技巧总结</title>
    <url>/2020/03/20/windowns%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="使用键盘移动窗口"><a href="#使用键盘移动窗口" class="headerlink" title="使用键盘移动窗口"></a>使用键盘移动窗口</h2><p>方法1：<code>ALT + SPACE</code><br>方法2：<code>Win + 方向键</code></p>
]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>windows开机启动</title>
    <url>/2018/05/14/windows%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[<blockquote>
<p>可以利用NSSM注册为服务达到开机启动的目的</p>
</blockquote>
<a id="more"></a>

<h2 id="使用NSSP方式"><a href="#使用NSSP方式" class="headerlink" title="使用NSSP方式"></a>使用NSSP方式</h2><p><a href="/file/nssm-2.24.zip">备份 nssm</a><br><img src="/2018/05/14/windows%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/image-20200202232838811.png" alt="image-20200202232838811"></p>
<h3 id="解压任意目录-设置环境变量"><a href="#解压任意目录-设置环境变量" class="headerlink" title="解压任意目录,设置环境变量"></a>解压任意目录,设置环境变量</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%NSSM_HOME%\win64</span><br></pre></td></tr></table></figure>

<h3 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h3><p>nssm install &lt;服务名&gt; </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nssm install hexo</span><br></pre></td></tr></table></figure>

<h3 id="编写启动命令脚本"><a href="#编写启动命令脚本" class="headerlink" title="编写启动命令脚本"></a>编写启动命令脚本</h3><p>在 <code>HEXO</code> 目录下创建 <code>startup.bat</code> 文件 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s --debug</span><br></pre></td></tr></table></figure>
<p><img src="/2018/05/14/windows%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/image-20200203000429047.png" alt="image-20200203000429047"></p>
<h3 id="填写NSSM参数并安装"><a href="#填写NSSM参数并安装" class="headerlink" title="填写NSSM参数并安装"></a>填写NSSM参数并安装</h3><blockquote>
<p>这里用bat的方式简化了<code>NSSM</code>的参数<br><img src="/2018/05/14/windows%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/image-20200203000806901.png" alt="image-20200203000806901"><br>完成之后点击 <code>Install service</code> 按钮</p>
</blockquote>
<h3 id="手动启动HEXO服务"><a href="#手动启动HEXO服务" class="headerlink" title="手动启动HEXO服务"></a>手动启动HEXO服务</h3><p>手动启动HEXO服务，并检查是否开机启动<br><code>Win+R</code> 输入 <code>services.msc</code><br><img src="/2018/05/14/windows%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/image-20200203001224635.png" alt="image-20200203001224635"></p>
<h3 id="NSSM常用命令"><a href="#NSSM常用命令" class="headerlink" title="NSSM常用命令"></a>NSSM常用命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nssm install servername //创建servername服务</span><br><span class="line">nssm start servername //启动服务</span><br><span class="line">nssm stop servername //暂停服务</span><br><span class="line">nssm restart servername //重新启动服务</span><br><span class="line">nssm remove servername //删除创建的servername服务</span><br></pre></td></tr></table></figure>




<h2 id="使用启动文件夹方式"><a href="#使用启动文件夹方式" class="headerlink" title="使用启动文件夹方式"></a>使用启动文件夹方式</h2><h3 id="创建vbs脚本"><a href="#创建vbs脚本" class="headerlink" title="创建vbs脚本"></a>创建vbs脚本</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set ws&#x3D;WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">ws.Run &quot;D:\\Users\\Administrator\\blog\\hexo-server.bat &#x2F;start&quot;,0</span><br></pre></td></tr></table></figure>

<h3 id="创建bat脚本"><a href="#创建bat脚本" class="headerlink" title="创建bat脚本"></a>创建bat脚本</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd E:&#x2F;WorkSpace&#x2F;webProject&#x2F;Hexo-Blog</span><br><span class="line">hexo s -d</span><br></pre></td></tr></table></figure>

<h3 id="将vbs脚本放到启动文件夹"><a href="#将vbs脚本放到启动文件夹" class="headerlink" title="将vbs脚本放到启动文件夹"></a>将vbs脚本放到启动文件夹</h3><p>注意360提示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\你的用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\startup</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>windows</tag>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper学习1(集群搭建)</title>
    <url>/2017/12/26/zookeeper1/</url>
    <content><![CDATA[<p>zookeeper学习1(集群搭建)</p>
<blockquote>
<p>互联网的基石<br>所用到的场景包括：单点、集群、状态、维护、协同</p>
</blockquote>
<p>虽然dubbo会使用zk作为注册中心但是他 使用的不是zk中最最核心的技术</p>
<h2 id="惊天大坑需要关闭防火墙-selinux"><a href="#惊天大坑需要关闭防火墙-selinux" class="headerlink" title="惊天大坑需要关闭防火墙,selinux"></a>惊天大坑需要关闭防火墙,selinux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop bin] service iptables stop </span><br><span class="line">[root@guyu-hadoop bin] chkconfig iptables off</span><br><span class="line">[root@guyu-hadoop bin] vi /etc/selinux/config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#SELINUX=enforcing #注释掉</span></span><br><span class="line"><span class="comment">#SELINUXTYPE=targeted #注释掉</span></span><br><span class="line">SELINUX=disabled <span class="comment">#增加</span></span><br></pre></td></tr></table></figure>

<h2 id="建立软连接方便之后管理-所有服务器"><a href="#建立软连接方便之后管理-所有服务器" class="headerlink" title="建立软连接方便之后管理(所有服务器)"></a>建立软连接方便之后管理(所有服务器)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop app]<span class="comment"># ln -s /opt/app/zookeeper-3.4.11/ /opt/app/zookeeper</span></span><br></pre></td></tr></table></figure>

<h2 id="复制示例配置文件zoo-cfg"><a href="#复制示例配置文件zoo-cfg" class="headerlink" title="复制示例配置文件zoo.cfg"></a>复制示例配置文件<code>zoo.cfg</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop conf]<span class="comment"># cp /opt/app/zookeeper/conf/zoo_sample.cfg  /opt/app/zookeeper/conf/zoo.cfg</span></span><br></pre></td></tr></table></figure>

<h2 id="创建数据目录与日志目录-所有服务器"><a href="#创建数据目录与日志目录-所有服务器" class="headerlink" title="创建数据目录与日志目录(所有服务器)"></a>创建数据目录与日志目录(所有服务器)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop zookeeper-3.4.11]<span class="comment"># mkdir -p /opt/app/zookeeper/dataDir</span></span><br><span class="line">[root@guyu-hadoop zookeeper-3.4.11]<span class="comment"># mkdir -p /opt/app/zookeeper/dataLogDir</span></span><br></pre></td></tr></table></figure>


<h2 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The number of milliseconds of each tick</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># The number of ticks that the initial </span></span><br><span class="line"><span class="comment"># synchronization phase can take</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># The number of ticks that can pass between </span></span><br><span class="line"><span class="comment"># sending a request and getting an acknowledgement</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># the directory where the snapshot is stored.</span></span><br><span class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just </span></span><br><span class="line"><span class="comment"># example sakes.</span></span><br><span class="line">dataDir=/opt/app/zookeeper/dataDir</span><br><span class="line">dataLogDir=/opt/app/zookeeper/dataLogDir</span><br><span class="line"><span class="comment"># the port at which the clients will connect</span></span><br><span class="line">clientPort=2181</span><br><span class="line"><span class="comment"># the maximum number of client connections.</span></span><br><span class="line"><span class="comment"># increase this if you need to handle more clients</span></span><br><span class="line"><span class="comment">#maxClientCnxns=60</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Be sure to read the maintenance section of the </span></span><br><span class="line"><span class="comment"># administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The number of snapshots to retain in dataDir</span></span><br><span class="line"><span class="comment">#autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="comment"># Purge task interval in hours</span></span><br><span class="line"><span class="comment"># Set to &quot;0&quot; to disable auto purge feature</span></span><br><span class="line"><span class="comment">#autopurge.purgeInterval=1</span></span><br><span class="line">server.1=192.168.163.131:2188:2888</span><br><span class="line">server.2=192.168.163.132:2188:2888</span><br><span class="line">server.3=192.168.163.133:2188:2888</span><br></pre></td></tr></table></figure>

<blockquote>
<p>值得注意的是上面配置文件中<code>clientPort</code> 是客户端链接的端口号,这里是<code>2181</code><br>最后所有服务起配置的 <code>2188</code> 是用于每个节点用于通讯的端口 <code>2888</code>是备用端口同时也会参加选举.节点之间会心跳检测<code>tickTime</code>来判断节点是否存活</p>
</blockquote>
<h2 id="Zoo-cfg-参数"><a href="#Zoo-cfg-参数" class="headerlink" title="Zoo.cfg 参数"></a>Zoo.cfg 参数</h2><table>
<thead>
<tr>
<th>参数</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>tickTime</td>
<td>每次心跳检测时间间隔</td>
</tr>
<tr>
<td>syncLimit</td>
<td>Leader 和 follower 之间的通 讯时长 最长不能超过 syncLimit*ticktime</td>
</tr>
<tr>
<td>initLimt</td>
<td>接受客户端链接 zk 初始化的最长等待心跳时长initLimt*ticktime</td>
</tr>
<tr>
<td>dataDir</td>
<td>数据目录</td>
</tr>
<tr>
<td>dataLogDir</td>
<td>日志文件</td>
</tr>
<tr>
<td>clientPort</td>
<td>客户端链接服务端端口号</td>
</tr>
<tr>
<td>Server.A=B:C:D</td>
<td><code>A</code> 服务器编号 <br> <code>B</code> 服务 <code>IP</code> <br><code>C</code> 代表 <code>Leader</code> 和 <code>follower</code> 通讯端口<br> <code>D</code> 备用选 <code>leader</code> 端口</td>
</tr>
</tbody></table>
<h2 id="把zoo-cfg分发到每台服务上"><a href="#把zoo-cfg分发到每台服务上" class="headerlink" title="把zoo.cfg分发到每台服务上"></a>把<code>zoo.cfg</code>分发到每台服务上</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop conf]<span class="comment"># scp /opt/app/zookeeper/conf/zoo.cfg root@h2:/opt/app/zookeeper/conf/zoo.cfg</span></span><br><span class="line">[root@guyu-hadoop conf]<span class="comment"># scp /opt/app/zookeeper/conf/zoo.cfg root@h3:/opt/app/zookeeper/conf/zoo.cfg</span></span><br></pre></td></tr></table></figure>


<h2 id="创建myid文件"><a href="#创建myid文件" class="headerlink" title="创建myid文件"></a>创建<code>myid</code>文件</h2><p>里面的值要和<code>server.1</code>的<code>1</code>对应的ip一样，必须是在<code>dataDir</code>目录下(根据配置文件中dataDir而定的)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop zookeeper]<span class="comment"># echo 1 &gt; /opt/app/zookeeper/dataDir/myid</span></span><br><span class="line">[root@guyu-hadoop2 zookeeper]<span class="comment"># echo 2 &gt; /opt/app/zookeeper/dataDir/myid</span></span><br><span class="line">[root@guyu-hadoop3 zookeeper]<span class="comment"># echo 3 &gt; /opt/app/zookeeper/dataDir/myid</span></span><br></pre></td></tr></table></figure>

<h2 id="启动zookeeper了"><a href="#启动zookeeper了" class="headerlink" title="启动zookeeper了"></a>启动zookeeper了</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop .ssh]<span class="comment"># sh /opt/app/zookeeper/bin/zkServer.sh start</span></span><br><span class="line">[root@guyu-hadoop2 .ssh]<span class="comment"># sh /opt/app/zookeeper/bin/zkServer.sh start</span></span><br><span class="line">[root@guyu-hadoop3 .ssh]<span class="comment"># sh /opt/app/zookeeper/bin/zkServer.sh start</span></span><br></pre></td></tr></table></figure>


<h2 id="在任意一台服务器上链接zookeeper"><a href="#在任意一台服务器上链接zookeeper" class="headerlink" title="在任意一台服务器上链接zookeeper"></a>在任意一台服务器上链接zookeeper</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@guyu-hadoop3 zookeeper]<span class="comment"># sh h /opt/app/zookeeper/bin/zkCli.sh -server h1:2181,h2:2181,h3:2181</span></span><br></pre></td></tr></table></figure>

<p>链接之后会进行一个session会话 org.apache.zookeeper.ClientCnxn 所有的客户端与服务端链接都走这个类 他会通过<code>sendThread</code>,<code>eventThread</code>这两个线程( 都继承自<code>zookeeperThread</code>)来链接,底层还是使用<code>netty</code></p>
<hr>
<p>zookeeper(T1 – 命令解析以及分析)</p>
<p>Zookeeper 部署<br>Zookeeper 有三种运行形式：集群模式、单机模式、伪集群模式。</p>
<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p><code>bin</code>目录下常用的脚本解释</p>
<table>
<thead>
<tr>
<th>命令文件</th>
<th>文件解释</th>
</tr>
</thead>
<tbody><tr>
<td><code>zkCleanup</code></td>
<td>清理 Zookeeper 历史数据，包括食物日志文件和快照数据文件</td>
</tr>
<tr>
<td><code>zkCli</code></td>
<td>Zookeeper 的一个简易客户端</td>
</tr>
<tr>
<td><code>zkEnv</code></td>
<td>设置 Zookeeper 的环境变量</td>
</tr>
<tr>
<td><code>zkServer</code></td>
<td>Zookeeper 服务器的启动、停止、和重启脚本</td>
</tr>
</tbody></table>
<h2 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h2><p>进入 <code>bin</code> 目录，使用 <code>zkServer.sh start</code> 启动服务<br>使用 <code>jps</code> 命令查看，存在 <code>QuorumPeerMain</code> 进程，表示 <code>Zookeeper</code> 已经启动</p>
<h2 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h2><p>在 <code>bin</code> 目录下，使用 <code>zkServer.sh stop</code> 停止服务<br>使用 <code>jps</code> 命令查看， <code>QuorumPeerMai</code>n 进程已不存在，表示 <code>Zookeeper</code> 已经关闭   </p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>在服务端开启的情况下，运行客户端，使用如下命令： <code>./zkCli.sh</code><br>连接服务端成功，若连接不同的主机，可使用如下命令： <code>./zkCli.sh -server ip:port</code><br>可以使用帮助命令 <code>help</code> 来查看客户端的操作</p>
<h2 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h2><p>使用 <code>create</code> 命令，可以创建一个 <code>Zookeeper</code> 节点， 如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create [-s] [-e] path data acl</span><br></pre></td></tr></table></figure>
<p>其中， <code>-s</code> 或<code>-e</code> 分别指定节点特性，顺序或临时节点，若不指定，则表示持久节点;<code>acl</code>用来进行权限控制。</p>
<ol>
<li>创建顺序节点<br>使用 create -s /zk-test 123 命令创建 zk-test 顺序节点<br>可以看到创建的 zk-test 节点后面添加了一串数字以示区别。</li>
<li>创建临时节点<br>使用 create -e /zk-temp 123 命令创建 zk-temp 临时节点</li>
</ol>
<p>临时节点在客户端会话结束后，就会自动删除，下面使用 quit 命令退出客户端<br>再次使用客户端连接服务端，并使用 ls / 命令查看根目录下的节点<br>可以看到根目录下已经不存在 zk-temp 临时节点了。<br>3. 创建永久节点<br>使用 create /zk-permanent 123 命令创建 zk-permanent 永久节点<br>可以看到永久节点不同于顺序节点，不会自动在后面添加一串数字。</p>
<h2 id="读取节点"><a href="#读取节点" class="headerlink" title="读取节点"></a>读取节点</h2><p>与读取相关的命令有 ls 命令和 get 命令， ls 命令可以列出 Zookeeper 指定节点下的<br>所有子节点，只能查看指定节点下的第一级的所有子节点； get 命令可以获取 Zookeeper<br>指定节点的数据内容和属性信息。其用法分别如下<br>ls path [watch]<br>get path [watch]<br>ls2 path [watch]<br>若获取根节点下面的所有子节点，使用 ls / 命令即可</p>
<p>若想获取根节点数据内容和属性信息，使用 get / 命令即可<br>也可以使用 ls2 / 命令查看<br>可以看到其子节点数量为 8。<br>若想获取/zk-permanent 的数据内容和属性，可使用如下命令： get<br>/zk-permanent<br>可以看到其数据内容为 123，还有其他的属性，之后会详细介绍。</p>
<h2 id="更新节点"><a href="#更新节点" class="headerlink" title="更新节点"></a>更新节点</h2><p>使用 set 命令，可以更新指定节点的数据内容，用法如下<br>set path data [version]<br>其中， data 就是要更新的新内容， version 表示数据版本，如将/zk-permanent 节<br>点的数据更新为 456，可以使用如下命令： set /zk-permanent 456<br>现在 dataVersion 已经变为 1 了，表示进行了更新。</p>
<h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><p>使用 delete 命令可以删除 Zookeeper 上的指定节点，用法如下<br>delete path [version]<br>其中 version 也是表示数据版本，使用 delete /zk-permanent 命令即可删除<br>/zk-permanent 节点<br>可以看到，已经成功删除/zk-permanent 节点。值得注意的是， 若删除节点存在子节<br>点，那么无法删除该节点，必须先删除子节点，再删除父节点。</p>
<p>##Znode 结构：<br>Stat：状态信息、版本、权限相关<br>状态属性 说明<br>czxid 节点创建时的 zxid<br>mzxid 节点最新一次更新发生时的 zxid<br>ctime 节点创建时的时间戳.<br>mtime 节点最新一次更新发生时的时间戳.<br>dataVersion 节点数据的更新次数.<br>cversion 其子节点的更新次数<br>aclVersion 节点 ACL(授权信息)的更新次数.<br>ephemeralOwner 如果该节点为 ephemeral 节点,<br>ephemeralOwner 值表示与该节点绑定的<br>session id. 如果该节点不是 ephemeral 节点,<br>ephemeralOwner 值为 0. 至于什么是<br>ephemeral 节点<br>dataLength 节点数据的字节数.<br>numChildren 子节点个数.</p>
<h2 id="节点类型："><a href="#节点类型：" class="headerlink" title="节点类型："></a>节点类型：</h2><p>2 大类、四种类型 持久、临时、持久有序、临时有序<br>PERSISTENT 持久类型，如果不手动删除 是一直存在的<br>PERSISTENT_SEQUENTIAL<br>EPHEMERAL 临时 客户端 session 失效就会随着删除节点 没有子节点<br>EPHEMERAL_SEQUENTIAL 有序 自增</p>
<p>顺序号：<br>创建 znode 时设置顺序标识， znode 名称后会附加一个值<br>顺序号是一个单调递增的计数器，由父节点维护<br>在分布式系统中，顺序号可以被用于为所有的事件进行全局排序，这样客户端可以通过顺<br>序号推断事件的顺序</p>
<p>ACL(Access Control List)<br>org.apache.zookeeper.ZooDefs<br>内置的 ACL schemes：<br>world：默认方式，相当于全世界都能访问<br>auth：代表已经认证通过的用户(cli 中可以通过 addauth digest user:pwd 来添加当<br>前上下文中的授权用户)<br>digest：即用户名:密码这种方式认证，这也是业务系统中最常用的<br>ip：使用 Ip 地址认证<br>ACL 支持权限：<br>CREATE: 能创建子节点<br>READ：能获取节点数据和列出其子节点<br>WRITE: 能设置节点数据<br>DELETE: 能删除子节点<br>ADMIN: 能设置权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 0] addauth digest wk:123 #创建一个用户wk密码是123</span><br><span class="line">[zk: localhost:2181(CONNECTED) 2] create -e &#x2F;xx</span><br><span class="line">Created &#x2F;xx</span><br><span class="line">[zk: localhost:2181(CONNECTED) 3] setAcl &#x2F;xx auth:wk:123:r #对&#x2F;xx节点进行授权wk密码是123授予读取权限</span><br></pre></td></tr></table></figure>
<p>只有当前链接是可以访问/xx的 其他直接访问是没有权限的</p>
<h2 id="Watcher-监听"><a href="#Watcher-监听" class="headerlink" title="Watcher:监听"></a>Watcher:监听</h2><p>可以对节点进行监听如果其他链接对这个节点操作，监听者就会收到信息<code>Worher</code>的监听只有一次,被出发后需要再次注册</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 0] create &#x2F;aa aa</span><br><span class="line">[zk: localhost:2181(CONNECTED) 1] ls2 &#x2F;aa watch</span><br></pre></td></tr></table></figure>

<p>在其他客户端删掉这个节点时:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 2]</span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:NodeDeleted path:&#x2F;aa</span><br></pre></td></tr></table></figure>

<ol>
<li>worker服务建立</li>
<li>监听对节点的操作</li>
<li>通知节点</li>
</ol>
<p>KeeperState EventType 触发条件 说明 操作<br>None<br>（-1）<br>客户端与服务端<br>成功建立连接<br>NodeCreated<br>（1）<br>Watcher 监听的<br>对应数据节点被<br>创建<br>Create<br>NodeDeleted<br>（2）<br>Watcher 监听的<br>对应数据节点被<br>删除<br>Delete/znode<br>NodeDataChang<br>ed<br>（3）<br>Watcher 监听的<br>对应数据节点的<br>数据内容发生变<br>更<br>setDate/znode<br>SyncConnected<br>（3）<br>NodeChildChang<br>ed<br>（4）<br>Wather 监听的<br>对应数据节点的<br>子节点列表发生<br>变更<br>此时客户端和服<br>务器处于连接状<br>态<br>Create/child<br>Disconnected<br>（0）<br>None<br>（-1）<br>客户端与<br>ZooKeeper 服务<br>器断开连接<br>此时客户端和服<br>务器处于断开连<br>接状态<br>Expired<br>（-112）<br>None<br>（-1）<br>会话超时 此时客户端会话<br>失效，通常同时<br>也会受到<br>SessionExpiredEx<br>ception 异常<br>AuthFailed<br>（4）<br>None<br>（-1）<br>通常有两种情<br>况， 1：使用错<br>误的 schema 进<br>行权限检查 2：<br>SASL 权限检查<br>失败<br>通常同时也会收<br>到<br>AuthFailedExcept<br>ion 异常</p>
<p>ZAB 协议： Zookeeper 的核心是原子广播，这个机制保证了各个 server 之间的同<br>步。实现这个机制的协议叫做 Zab 协议。 Zab 协议有两种模式，它们分别是恢复模式和广<br>播模式。 当服务启动或者在领导者崩溃后， Zab 就进入了恢复模式，当领导者被选举出<br>来，且大多数 server 的完成了和 leader 的状态同步以后，恢复模式就结束了。状态同步保<br>证了 leader 和 server 具有相同的系统状态。一旦 leader 已经和多数的 follower 进行了状态<br>同步后，他就可以开始广播消息了，即进入广播状态。<br>这时候当一个 server 加入 zookeeper 服务中，它会在恢复模式下启动，发现 leader，并和<br>leader 进行状态同步。待到同步结束，它也参与消息广播。<br>Zookeeper 服务一直维持在 Broadcast 状态，直到 leader 崩溃了或者 leader 失去了大部分的<br>followers 支持。<br>广播模式需要保证 proposal 被按顺序处理，因此 zk 采用了递增的事务 id 号(zxid)来保证。<br>所有的提议(proposal)都在被提出的时候加上了 zxid。实现中 zxid 是一个 64 为的数字，它<br>高 32 位是 epoch 用来标识 leader 关系是否改变，每次一个 leader 被选出来，它都会有一<br>个新的 epoch。低 32 位是个递增计数。<br>当 leader 崩溃或者 leader 失去大多数的 follower，这时候 zk 进入恢复模式，恢复模式需要<br>重新选举出一个新的 leader，让所有的 server 都恢复到一个正确的状态。</p>
<p>Leader 选举：<br>LOOKING, FOLLOWING, LEADING, OBSERVING</p>
<p>总结：<br>这节课我们讲了集群搭建、和常用命令使用。<br>Zookeeper 是一个有上下级关系（Leader、 follower、 Observer ）的集群。<br>客户端链接 zookeeper 集群是通过 Seesion 链接(TCP 长链接)。<br>客户端链接以后可以对节点(存储在 zookeeper 上 znode)增删改查。<br>Znode 有四种类型：临时、临时有序、持久、持久有序<br>对（znode）节点做增删改查时我们可以监控其动作（Watcher 机制）还可以对节点设置权<br>限访问。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper可视化客户端</title>
    <url>/2018/11/28/zookeeper%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    <content><![CDATA[<p>GITHUB: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0hlbGxvS2l0dHlOSUkvWm9vVmlld2Vy" title="https://github.com/HelloKittyNII/ZooViewer">https://github.com/HelloKittyNII/ZooViewer<i class="fa fa-external-link"></i></span></p>
<p>clone 之后直接 解压,简单好用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;HelloKittyNII&#x2F;ZooViewer.git</span><br><span class="line">cd ZooViewer</span><br><span class="line">unzip ZooViewer.zip</span><br></pre></td></tr></table></figure>
<p><img src="/2018/11/28/zookeeper%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%A2%E6%88%B7%E7%AB%AF/image-77.png" alt="upload successful"></p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>zsh安装指南</title>
    <url>/2018/11/26/zsh%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h2 id="Zsh-安装"><a href="#Zsh-安装" class="headerlink" title="Zsh 安装"></a>Zsh 安装</h2><ul>
<li>CentOS 安装<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install -y zsh</span><br></pre></td></tr></table></figure></li>
<li>Ubuntu 安装<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y zsh</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="使用-Zsh-扩展集合：oh-my-zsh"><a href="#使用-Zsh-扩展集合：oh-my-zsh" class="headerlink" title="使用 Zsh 扩展集合：oh-my-zsh"></a>使用 Zsh 扩展集合：oh-my-zsh</h2><ul>
<li><p>oh-my-zsh 帮我们整理了一些常用的 Zsh 扩展功能和主题<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvYmJ5cnVzc2VsbC9vaC1teS16c2g=" title="https://github.com/robbyrussell/oh-my-zsh">https://github.com/robbyrussell/oh-my-zsh<i class="fa fa-external-link"></i></span></p>
</li>
<li><p> 我们无需自己去捣搞 Zsh，直接用 oh-my-zsh 就足够了，如果你想继续深造的话那再去弄。</p>
</li>
<li><p>先安装 <code>git</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install -y git</span><br></pre></td></tr></table></figure></li>
<li><p>安装 oh-my-zsh（这个过程可能会有点慢，或者需要重试几次）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;raw.github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh -O - | sh</span><br></pre></td></tr></table></figure>

<h2 id="HOME-END-失灵问题"><a href="#HOME-END-失灵问题" class="headerlink" title="HOME/END 失灵问题"></a>HOME/END 失灵问题</h2></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Home &#x3D; Ctrl + a</span><br><span class="line">End &#x3D; Ctrl + e</span><br></pre></td></tr></table></figure>
<h2 id="Zsh-配置"><a href="#Zsh-配置" class="headerlink" title="Zsh 配置"></a>Zsh 配置</h2><p>自己总结常用的配置</p>
<h3 id="安装-zsh-syntax-highlighting-关键字颜色"><a href="#安装-zsh-syntax-highlighting-关键字颜色" class="headerlink" title="安装 zsh-syntax-highlighting (关键字颜色)"></a>安装 <code>zsh-syntax-highlighting</code> (关键字颜色)</h3><p>官网 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtc3ludGF4LWhpZ2hsaWdodGluZw==" title="https://github.com/zsh-users/zsh-syntax-highlighting">https://github.com/zsh-users/zsh-syntax-highlighting<i class="fa fa-external-link"></i></span> 查看<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtc3ludGF4LWhpZ2hsaWdodGluZy9ibG9iL21hc3Rlci9JTlNUQUxMLm1k" title="https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md">INSTALL.md<i class="fa fa-external-link"></i></span>    </p>
<ol>
<li><p>任意目录下,安装完成之后会自动删除</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-syntax-highlighting</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件，在插件最后加入 zsh-syntax-highlighting</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim ~&#x2F;.zshrc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plugins&#x3D;( [plugins...] zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure>
</li>
<li><p>刷新配置(如果不生效，重启或者重连客户端)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="安装-zsh-autosuggestions-补全历史命令"><a href="#安装-zsh-autosuggestions-补全历史命令" class="headerlink" title="安装 zsh-autosuggestions (补全历史命令)"></a>安装 <code>zsh-autosuggestions</code> (补全历史命令)</h3><p>官网 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtYXV0b3N1Z2dlc3Rpb25z" title="https://github.com/zsh-users/zsh-autosuggestions">https://github.com/zsh-users/zsh-autosuggestions<i class="fa fa-external-link"></i></span> 查看<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtYXV0b3N1Z2dlc3Rpb25zL2Jsb2IvbWFzdGVyL0lOU1RBTEwubWQ=" title="https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md">INSTALL.md<i class="fa fa-external-link"></i></span>    </p>
<ol>
<li><p>任意目录下,安装完成之后会自动删除</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-autosuggestions $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-autosuggestions</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件，在插件最后加入 zsh-syntax-highlighting</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim ~&#x2F;.zshrc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plugins&#x3D;( [plugins...] zsh-autosuggestions)</span><br></pre></td></tr></table></figure>
</li>
<li><p>刷新配置(如果不生效，重启或者重连客户端)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="常用插件总结"><a href="#常用插件总结" class="headerlink" title="常用插件总结"></a>常用插件总结</h3><ul>
<li>git (默认)</li>
<li>z (快速跳转)</li>
<li>zsh-syntax-highlighting (高亮)</li>
<li>zsh-autosuggestions (自动完成)<h3 id="切换-fishy主题"><a href="#切换-fishy主题" class="headerlink" title="切换 fishy主题"></a>切换 <code>fishy</code>主题</h3></li>
</ul>
<ol>
<li><p>所有主题名称以及截图 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvYmJ5cnVzc2VsbC9vaC1teS16c2gvd2lraS9UaGVtZXM=" title="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes">https://github.com/robbyrussell/oh-my-zsh/wiki/Themes<i class="fa fa-external-link"></i></span></p>
</li>
<li><p>修改配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim ~&#x2F;.zshrc</span><br><span class="line"></span><br><span class="line">ZSH_THEME&#x3D;&quot;fishy&quot;</span><br></pre></td></tr></table></figure></li>
<li><p>刷新配置(如果不生效，重启或者重连客户端)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source ~&#x2F;.zshrc</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h3 id="插件介绍"><a href="#插件介绍" class="headerlink" title="插件介绍"></a>插件介绍</h3><ul>
<li>启用 oh-my-zsh 中自带的插件。</li>
<li>oh-my-zsh 的插件列表介绍（太长了，用源码不精准地统计下有 149 个）：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvYmJ5cnVzc2VsbC9vaC1teS16c2gvd2lraS9QbHVnaW5z" title="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins">https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins<i class="fa fa-external-link"></i></span></li>
<li>我们看下安装 oh-my-zsh 的时候自带有多少个插件：ls -l /root/.oh-my-zsh/plugins |grep “^d”|wc -l，我这边得到的结果是：211</li>
<li>编辑配置文件：vim /root/.zshrc，找到下图的地方，怎么安装，原作者注释写得很清楚了，别装太多了，默认 git 是安装的</li>
</ul>
<h4 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h4><p>这个插件会记录你常去的那些目录，然后做一下权重记录，你可以用这个命令看到你的习惯：j –stat，如果这个里面有你的记录，那你就只要敲最后一个文件夹名字即可进入，比如我个人习惯的 program：j program，就可以直接到：/usr/program</p>
<ul>
<li>插件官网：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3d0aW5nL2F1dG9qdW1w" title="https://github.com/wting/autojump">https://github.com/wting/autojump<i class="fa fa-external-link"></i></span></li>
<li>官网插件下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3d0aW5nL2F1dG9qdW1wL2Rvd25sb2Fkcw==" title="https://github.com/wting/autojump/downloads">https://github.com/wting/autojump/downloads<i class="fa fa-external-link"></i></span></li>
<li>插件下载：wget <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Rvd25sb2Fkcy93dGluZy9hdXRvanVtcC9hdXRvanVtcF92MjEuMS4yLnRhci5neg==" title="https://github.com/downloads/wting/autojump/autojump_v21.1.2.tar.gz">https://github.com/downloads/wting/autojump/autojump_v21.1.2.tar.gz<i class="fa fa-external-link"></i></span></li>
<li>解压：tar zxvf autojump_v21.1.2.tar.gz</li>
<li>进入解压后目录并安装：cd autojump_v21.1.2/ ; ./install.sh</li>
<li>再执行下这个：source /etc/profile.d/autojump.sh</li>
<li>编辑配置文件，添加上 autojump 的名字：vim /root/.zshrc</li>
</ul>
<h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>修改class方法总结</title>
    <url>/2018/05/08/%E4%BF%AE%E6%94%B9class%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="使用jclasslib工具修改"><a href="#使用jclasslib工具修改" class="headerlink" title="使用jclasslib工具修改"></a>使用<code>jclasslib</code>工具修改</h2><p>源码       <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZ29rZWdlbC9qY2xhc3NsaWI=" title="https://github.com/ingokegel/jclasslib">https://github.com/ingokegel/jclasslib<i class="fa fa-external-link"></i></span><br>官方下载    <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZ29rZWdlbC9qY2xhc3NsaWIvcmVsZWFzZXM=" title="https://github.com/ingokegel/jclasslib/releases">https://github.com/ingokegel/jclasslib/releases<i class="fa fa-external-link"></i></span></p>
<p>例如需要修改方法中的常量<br>直接在Methods中找到对应的方法再找到Code中的需要修改的字符串<br>记住这个字符串的行号</p>
<p>比如需要修改此文件中<code>父节点为空</code>这个字符串</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.webside.ImagesManage.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.webside.ImagesManage.mapper.ImagesManageMapper;</span><br><span class="line"><span class="keyword">import</span> com.webside.ImagesManage.model.NodeModel;</span><br><span class="line"><span class="keyword">import</span> com.webside.base.baseservice.impl.AbstractService;</span><br><span class="line"><span class="keyword">import</span> com.webside.loginfo.model.LogInfoEntity;</span><br><span class="line"><span class="keyword">import</span> com.webside.shiro.ShiroAuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> com.webside.user.model.UserEntity;</span><br><span class="line"><span class="keyword">import</span> com.webside.util.CacheUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImagesManageService</span> <span class="keyword">extends</span> <span class="title">AbstractService</span>&lt;<span class="title">LogInfoEntity</span>, <span class="title">Long</span>&gt;</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> HashMap&lt;String, String&gt; zhixiashiMap = <span class="keyword">new</span> HashMap();</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> ImagesManageMapper mapper;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBaseMapper</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.setBaseMapper(<span class="keyword">this</span>.mapper);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;NodeModel&gt; <span class="title">getNodes</span><span class="params">(String parent_id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserEntity userEntity = ShiroAuthenticationManager.getUserEntity();</span><br><span class="line">    String branch = userEntity.getBranch();</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(branch)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;权限城市为空！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;zhixiashi&quot;</span>.equals(zhixiashiMap.get(branch))) &#123;</span><br><span class="line">      branch = <span class="string">&quot;zhixiashi&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (branch.contains(<span class="string">&quot;,&quot;</span>)) &#123;</span><br><span class="line">      branch = branch.replace(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;&#x27;,&#x27;&quot;</span>);</span><br><span class="line">      branch = <span class="string">&quot;&#x27;&quot;</span> + branch + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!branch.equals(<span class="string">&quot;zhixiashi&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">      branch = <span class="string">&quot;&#x27;&quot;</span> + branch + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((parent_id == <span class="keyword">null</span>) || (StringUtils.isEmpty(parent_id))) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;父节点为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    List childTreeNodes = <span class="keyword">this</span>.mapper.getChilds(parent_id, branch);</span><br><span class="line">    NodeModel testModel;</span><br><span class="line">    <span class="keyword">if</span> (childTreeNodes != <span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      testModel = (NodeModel)childTreeNodes.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">      String group_name = testModel.getGroup_name();</span><br><span class="line">      <span class="keyword">if</span> (group_name.matches(<span class="string">&quot;[0-9]+&quot;</span>))</span><br><span class="line">      &#123;</span><br><span class="line">        String parentId = testModel.getParent_id();</span><br><span class="line">        String city = <span class="keyword">this</span>.mapper.getParentId(parentId).split(<span class="string">&quot;_&quot;</span>)[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        String comment = <span class="keyword">this</span>.mapper.getComment(group_name, city);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (NodeModel nodeModel : childTreeNodes) &#123;</span><br><span class="line">          StringBuffer date = <span class="keyword">new</span> StringBuffer(nodeModel.getGroup_name());</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            nodeModel.setGroup_name(date.insert(<span class="number">8</span>, <span class="string">&quot;-&quot;</span>).toString());</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            nodeModel.setGroup_name(date.toString());</span><br><span class="line">          &#125;</span><br><span class="line">          nodeModel.setGroup_name(comment + nodeModel.getGroup_name());</span><br><span class="line">          nodeModel.setIsParent(Boolean.valueOf(<span class="keyword">true</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> childTreeNodes;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (NodeModel node : childTreeNodes) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">&quot;3&quot;</span>.equals(node.getGroup_flag()))</span><br><span class="line">      &#123;</span><br><span class="line">        List attrs = <span class="keyword">this</span>.mapper.getAttrs(node</span><br><span class="line">          .getParent_id(), node.getGroup_value());</span><br><span class="line">        node.setAttrs(attrs);</span><br><span class="line">        node.setIsParent(Boolean.valueOf(<span class="keyword">false</span>));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        node.setIsParent(Boolean.valueOf(<span class="keyword">true</span>));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> childTreeNodes;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> NodeModel <span class="title">getImagesTree</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    String parent_id = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line">    NodeModel root = <span class="keyword">this</span>.mapper.getrootNode();</span><br><span class="line">    String nodeid = root.getGroup_value();</span><br><span class="line">    NodeModel imagestree = (NodeModel)CacheUtil.getCache(<span class="string">&quot;imagesTree&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (imagestree == <span class="keyword">null</span>) &#123;</span><br><span class="line">      imagestree = recursiveTree(nodeid);</span><br><span class="line">      CacheUtil.putCache(<span class="string">&quot;imagesTree&quot;</span>, imagestree);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> imagestree;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> NodeModel <span class="title">recursiveTree</span><span class="params">(String nodeid)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    UserEntity userEntity = ShiroAuthenticationManager.getUserEntity();</span><br><span class="line">    String branch = userEntity.getBranch();</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(branch)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;权限城市为空！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (branch.contains(<span class="string">&quot;,&quot;</span>)) &#123;</span><br><span class="line">      branch = branch.replace(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;&#x27;,&#x27;&quot;</span>);</span><br><span class="line">      branch = <span class="string">&quot;&#x27;&quot;</span> + branch + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      branch = <span class="string">&quot;&#x27;&quot;</span> + branch + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    NodeModel node = <span class="keyword">this</span>.mapper.getreeNode(nodeid);</span><br><span class="line"></span><br><span class="line">    List childTreeNodes = <span class="keyword">this</span>.mapper.getChilds(nodeid, branch);</span><br><span class="line">    List attrs;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;3&quot;</span>.equals(node.getGroup_flag()))</span><br><span class="line">    &#123;</span><br><span class="line">      attrs = <span class="keyword">this</span>.mapper.getAttrs(node.getParent_id(), node</span><br><span class="line">        .getGroup_value());</span><br><span class="line">      node.setAttrs(attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (NodeModel child : childTreeNodes)</span><br><span class="line">    &#123;</span><br><span class="line">      NodeModel n = recursiveTree(child.getGroup_value());</span><br><span class="line">      node.getNodes().add(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span></span><br><span class="line">  &#123;</span><br><span class="line">    zhixiashiMap.put(<span class="string">&quot;重庆&quot;</span>, <span class="string">&quot;zhixiashi&quot;</span>);</span><br><span class="line">    zhixiashiMap.put(<span class="string">&quot;天津&quot;</span>, <span class="string">&quot;zhixiashi&quot;</span>);</span><br><span class="line">    zhixiashiMap.put(<span class="string">&quot;上海&quot;</span>, <span class="string">&quot;zhixiashi&quot;</span>);</span><br><span class="line">    zhixiashiMap.put(<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;zhixiashi&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过工具查看到这个常量的位置在160行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String: cp info #160</span><br></pre></td></tr></table></figure>


<p>编写如下代码(需要引入jar包jclasslib-library.jar,jclasslib-browser.jar都可以在工具安装目录下找到)<br>需要注意文件占用,可以重新生成到另一个路径</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.gjt.jclasslib.io.ClassFileWriter</span><br><span class="line"><span class="keyword">import</span> java.io.DataInputStream</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream</span><br><span class="line"><span class="keyword">import</span> org.gjt.jclasslib.structures.ClassFile</span><br><span class="line"><span class="keyword">import</span> org.gjt.jclasslib.structures.constants.ConstantUtf8Info</span><br><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/5/8/008</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args:<span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> filePath = <span class="string">&quot;C:\\Users\\Administrator\\Desktop\\ImagesManageService.class&quot;</span></span><br><span class="line">    <span class="keyword">var</span> fis = FileInputStream(filePath)</span><br><span class="line">    <span class="keyword">var</span> di = DataInputStream(fis)</span><br><span class="line">    <span class="keyword">var</span> cf = ClassFile()</span><br><span class="line">    cf.read(di)</span><br><span class="line">    <span class="keyword">var</span> infos = cf.getConstantPool();</span><br><span class="line">    <span class="keyword">var</span> count = infos.size;</span><br><span class="line">    <span class="comment">//for((index, value) in infos.withIndex())&#123;</span></span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span>  <span class="number">0</span>  until  count)&#123;</span><br><span class="line">        <span class="keyword">if</span>(infos[i] !=<span class="literal">null</span> )&#123;</span><br><span class="line">            print(i)</span><br><span class="line">            print(<span class="string">&quot; = &quot;</span>)</span><br><span class="line">            print(infos[i].verbose)</span><br><span class="line">            print(<span class="string">&quot; = &quot;</span>)</span><br><span class="line">            print(infos[i].tagVerbose)</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">160</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> uInfo = infos[i] <span class="keyword">as</span> ConstantUtf8Info</span><br><span class="line">                uInfo.bytes = <span class="string">&quot;SSSSSSSSSS&quot;</span>.toByteArray();</span><br><span class="line">                println(<span class="number">111</span>)</span><br><span class="line">                infos[i] = uInfo;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cf.setConstantPool(infos);</span><br><span class="line">    fis.close();</span><br><span class="line">    <span class="keyword">var</span> f = File(filePath);<span class="comment">//var f = File(filePath+&quot;.temp&quot;);/</span></span><br><span class="line">    ClassFileWriter.writeToFile(f, cf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="使用javassist修改"><a href="#使用javassist修改" class="headerlink" title="使用javassist修改"></a>使用<code>javassist</code>修改</h2><p>增加jar包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">compile &quot;org.javassist:javassist:3.18.1-GA&quot;</span><br></pre></td></tr></table></figure>

<p>被修改的示例文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guyu.kt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/5/8/008</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">javassistDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">aaa</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>修改文件代码</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guyu.kt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool</span><br><span class="line"><span class="keyword">import</span> javassist.CtNewMethod</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files</span><br><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/5/8/008</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args:<span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> pool = ClassPool.getDefault()</span><br><span class="line">    <span class="comment">//设置目标类的路径(即目标类的class路径，我这里的test2.class是在工程下WebRoot/WEB-INF/classes/com/hcj/javaassist)</span></span><br><span class="line">    pool.insertClassPath(<span class="string">&quot;out/production/classes/com/guyu/kt/&quot;</span>)</span><br><span class="line">    <span class="comment">//获得要修改的类（注意，一定要类的全称）</span></span><br><span class="line">    <span class="keyword">val</span> cc = pool.<span class="keyword">get</span>(<span class="string">&quot;com.guyu.kt.javassistDemo&quot;</span>)</span><br><span class="line">      <span class="keyword">var</span> method = cc.getDeclaredMethods();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        cc.getDeclaredMethod(<span class="string">&quot;g&quot;</span>)</span><br><span class="line">        println(<span class="string">&quot;g() is already defined in sample.Test.&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">        <span class="keyword">val</span> fMethod = cc.getDeclaredMethod(<span class="string">&quot;aaa&quot;</span>)</span><br><span class="line">        <span class="keyword">val</span> gMethod = CtNewMethod.copy(fMethod, <span class="string">&quot;g&quot;</span>, cc, <span class="literal">null</span>)</span><br><span class="line">        cc.addMethod(gMethod)</span><br><span class="line">        cc.writeFile() <span class="comment">// 更新class文件 注意文件占用</span></span><br><span class="line">        <span class="keyword">val</span> file = File(System.getProperty(<span class="string">&quot;user.dir&quot;</span>) + <span class="string">&quot;/out/production/classes/com/guyu/kt/javassistDemo2.class&quot;</span>)</span><br><span class="line">        file.createNewFile()</span><br><span class="line">        Files.write(file.toPath(), cc.toBytecode())</span><br><span class="line">        println(<span class="string">&quot;g() was added.&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>修改完成之后</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.guyu.kt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">javassistDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">javassistDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">aaa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">g</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="直接使用java编译修改"><a href="#直接使用java编译修改" class="headerlink" title="直接使用java编译修改"></a>直接使用java编译修改</h2><p>适用于修改官方库中某一个文件又不想下载全部工程全部编译</p>
<p>场景举例:<br>    在工程中引用了某个第三方的jar,但是他的代码中某个变量是private的,无法直接修改.为了方便需要改成public但是又不想下载整个工程进行编译</p>
<p>方法:</p>
<ol>
<li>反编译他的class文件,得到可以使用的java代码</li>
<li>在当前工程中使用创建与它相同的包路径,并放入java文件</li>
<li>编译之后直接替换原来的class文件</li>
</ol>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>class</tag>
      </tags>
  </entry>
  <entry>
    <title>临时手机邮箱</title>
    <url>/2020/02/03/%E4%B8%B4%E6%97%B6%E6%89%8B%E6%9C%BA%E9%82%AE%E7%AE%B1/</url>
    <content><![CDATA[<h2 id="临时手机"><a href="#临时手机" class="headerlink" title="临时手机"></a>临时手机</h2><p><span class="exturl" data-url="aHR0cHM6Ly95dW5kdWFueGluLm5ldC8=" title="https://yunduanxin.net/">免费在线接收手机短信验证码<i class="fa fa-external-link"></i></span></p>
<h2 id="临时邮箱"><a href="#临时邮箱" class="headerlink" title="临时邮箱"></a>临时邮箱</h2><p><span class="exturl" data-url="aHR0cHM6Ly8xMG1pbnV0ZW1haWwubmV0L3JlYWRtYWlsLmh0bWw/bWlkPUxsbXE3Qg==" title="https://10minutemail.net/readmail.html?mid=Llmq7B">十分钟邮箱<i class="fa fa-external-link"></i></span></p>
]]></content>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>利用q来查询csv</title>
    <url>/2018/09/20/%E5%88%A9%E7%94%A8sql%E6%9D%A5%E6%9F%A5%E8%AF%A2csv/</url>
    <content><![CDATA[<p>利用<code>q</code>来查询csv</p>
<blockquote>
<ul>
<li>官网 <span class="exturl" data-url="aHR0cDovL2hhcmVsYmEuZ2l0aHViLmlvL3EvaW5zdGFsbC5odG1s" title="http://harelba.github.io/q/install.html">http://harelba.github.io/q/install.html<i class="fa fa-external-link"></i></span>   </li>
<li>github <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hhcmVsYmEvcQ==" title="https://github.com/harelba/q">https://github.com/harelba/q<i class="fa fa-external-link"></i></span></li>
</ul>
</blockquote>
<a id="more"></a>

<p>这是介绍翻译</p>
<p><code>q</code> 允许对表格文本数据执行类似 <code>SQL</code> 的语句。<br>它的目的是使用 <code>Linux</code> 命令行带来 <code>SQL</code> 表达能力来操纵文本数据。<br>基本用法是 <code>q &lt;sql like query&gt;</code> ，其中表名只是常规文件名（使用 <code>-</code> 从标准输入读取）<br>当输入包含标题行时，将使用-H和列名称根据标题行内容进行设置。如果没有标题行，则列将自动命名为c1..cN。<br>自动检测列类型。使用-A以查看列名称/类型分析。<br>可以使用 <code>-d</code>（或 <code>-t</code> ）选项设置分隔符。可以使用 <code>-D</code> 设置输出分隔符<br>支持所有 <code>sqlite3 SQL</code> 构造。</p>
<p>        例子：</p>
<p>              例1：ls -ltrd * | q“从c1中选择c1，count（1） - ”<br>            此示例将打印当前文件夹中每个唯一权限字符串的计数。</p>
<p>          例2：seq 1 1000 | q“选择平均值（c1），总和（c1） - ”<br>            此示例将提供1到1000范围内的数字的平均值和总和</p>
<p>          例3：sudo find / tmp -ls | q“选择c5，c6，总和（c7）/1024.0/1024作为总数来自 - 组按c5，c6顺序总数desc”<br>            此示例将在/ tmp子树中输出每个用户+组的总大小（MB）</p>
<p>            有关详细信息，请参阅帮助或<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hhcmVsYmEvcS8lRTMlODAlODI=" title="https://github.com/harelba/q/%E3%80%82">https://github.com/harelba/q/。<i class="fa fa-external-link"></i></span></p>
<p>根据查询出的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@vm temp]# ll</span><br><span class="line">总用量 667380</span><br><span class="line">-rw-r--r-- 1 root root   8842660 9月   5 10:37 apache-maven-3.5.4-bin.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root   9621331 9月   5 10:18 apache-tomcat-8.5.33.tar.gz</span><br><span class="line">drwxr-xr-x 2 root root        64 7月   5 21:07 bat-v0.4.1-x86_64-unknown-linux-musl</span><br><span class="line">-rw-r--r-- 1 root root   2110108 7月   5 21:04 bat-v0.4.1-x86_64-unknown-linux-musl.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 127163815 9月   4 08:22 go1.11.linux-amd64.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root  54057234 8月  22 16:38 grafana-5.2.3-1.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 189736377 12月 10 2017 jdk-8u151-linux-x64.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root  56969154 7月   5 16:03 kafka_2.11-1.1.0.tgz</span><br><span class="line">-rw-r--r-- 1 root root      6140 11月 12 2015 mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">-rw-r--r-- 1 root root  40031472 9月   3 14:34 open-falcon-v0.2.1.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root     43428 9月  20 16:41 q-text-as-data-1.7.1-1.noarch1.rpm</span><br><span class="line">-rw-r--r-- 1 root root 158122606 8月  10 10:20 sonarqube-7.2.1.zip</span><br><span class="line">-rw-r--r-- 1 root root  36668066 12月 10 2017 zookeeper-3.4.11.tar.gz</span><br><span class="line">[root@vm temp]# ll | q &quot;select * from - order by c5&quot;</span><br><span class="line">总用量 667380       </span><br><span class="line">drwxr-xr-x 2 root root 64 7月 5 21:07 bat-v0.4.1-x86_64-unknown-linux-musl</span><br><span class="line">-rw-r--r-- 1 root root 6140 11月 12 2015 mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">-rw-r--r-- 1 root root 43428 9月 20 16:41 q-text-as-data-1.7.1-1.noarch1.rpm</span><br><span class="line">-rw-r--r-- 1 root root 2110108 7月 5 21:04 bat-v0.4.1-x86_64-unknown-linux-musl.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 8842660 9月 5 10:37 apache-maven-3.5.4-bin.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 9621331 9月 5 10:18 apache-tomcat-8.5.33.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 36668066 12月 10 2017 zookeeper-3.4.11.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 40031472 9月 3 14:34 open-falcon-v0.2.1.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 54057234 8月 22 16:38 grafana-5.2.3-1.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 56969154 7月 5 16:03 kafka_2.11-1.1.0.tgz</span><br><span class="line">-rw-r--r-- 1 root root 127163815 9月 4 08:22 go1.11.linux-amd64.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 158122606 8月 10 10:20 sonarqube-7.2.1.zip</span><br><span class="line">-rw-r--r-- 1 root root 189736377 12月 10 2017 jdk-8u151-linux-x64.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>查询CSV文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q -H -d &quot;,&quot; &quot;SELECT * FROM .&#x2F;H65V10bak.csv ORDER BY Gain&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>刷新IDEA项目</title>
    <url>/2020/02/04/%E5%88%B7%E6%96%B0IDEA%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h2 id="刷新IDEA项目"><a href="#刷新IDEA项目" class="headerlink" title="刷新IDEA项目"></a>刷新IDEA项目</h2><p>由于多人协作下需要容易改变项目结构，再次用<code>IDEA</code>打开时<code>IDEA</code>不一定可以感知这些变化</p>
<h3 id="直接删除IDEA所有配置"><a href="#直接删除IDEA所有配置" class="headerlink" title="直接删除IDEA所有配置"></a>直接删除IDEA所有配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">&quot;*.iml&quot;</span> | xargs rm -rf</span><br><span class="line">rm -rf ./.idea</span><br></pre></td></tr></table></figure>

<h3 id="创建脚本一劳永逸"><a href="#创建脚本一劳永逸" class="headerlink" title="创建脚本一劳永逸"></a>创建脚本一劳永逸</h3><p>在项目同级目录下创建<code>项目名-node</code><br>创建<code>refreh.sh</code>文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../netop</span><br><span class="line">mvn clean</span><br><span class="line">find . -name <span class="string">&quot;*.iml&quot;</span> | xargs rm -rf</span><br><span class="line">rm -rf ./.idea</span><br><span class="line">rm -rf ./logs</span><br></pre></td></tr></table></figure>
<p>冲刺以后只要双击此文件即可</p>
]]></content>
      <tags>
        <tag>idea</tag>
        <tag>java</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>刷新MAVEN仓库删除无用文件</title>
    <url>/2020/02/04/%E5%88%B7%E6%96%B0MAVEN%E4%BB%93%E5%BA%93%E5%88%A0%E9%99%A4%E6%97%A0%E7%94%A8%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="删除MAVEN仓库无用数据"><a href="#删除MAVEN仓库无用数据" class="headerlink" title="删除MAVEN仓库无用数据"></a>删除MAVEN仓库无用数据</h2><p>由于网络限制下载MAVEN仓库中时可能存在奇奇怪怪的文件 ，由于这些文件的存在会导致项目无法下载新的<code>jar</code>包。</p>
<h3 id="删除由于网络原因引起的异常POM-xml"><a href="#删除由于网络原因引起的异常POM-xml" class="headerlink" title="删除由于网络原因引起的异常POM.xml"></a>删除由于网络原因引起的异常POM.xml</h3><p>linux版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /mnt/e/jpackageHub/maven/repository -size 8933c -name <span class="string">&quot;*.pom&quot;</span> |xargs -I&#123;&#125; md5sum &#123;&#125;|grep <span class="string">&#x27;a6af53c698915601580f9079dad52b7a&#x27;</span> | awk -F <span class="string">&#x27;  &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs -I&#123;&#125; dirname &#123;&#125; | xargs rm -rf</span><br></pre></td></tr></table></figure>
<h3 id="删除lastUpdated文件"><a href="#删除lastUpdated文件" class="headerlink" title="删除lastUpdated文件"></a>删除lastUpdated文件</h3><p>linux版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /mnt/e/jpackageHub/maven/repository -name <span class="string">&quot;*lastUpdated*&quot;</span> | xargs rm -rf</span><br></pre></td></tr></table></figure>
<p>windows版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">rem create by NettQun</span><br><span class="line">  </span><br><span class="line">rem 这里写你的仓库路径</span><br><span class="line"><span class="built_in">set</span> REPOSITORY_PATH=E:\jpackageHub\maven\repository</span><br><span class="line">rem 正在搜索...</span><br><span class="line"><span class="keyword">for</span> /f <span class="string">&quot;delims=&quot;</span> %%i <span class="keyword">in</span> (<span class="string">&#x27;dir /b /s &quot;%REPOSITORY_PATH%\*lastUpdated*&quot;&#x27;</span>) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">echo</span> %%i</span><br><span class="line">    del /s /q <span class="string">&quot;%%i&quot;</span></span><br><span class="line">)</span><br><span class="line">rem 搜索完毕</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>十个最常用的JVM 配置参数</title>
    <url>/2020/02/08/%E5%8D%81%E4%B8%AA%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84JVM-%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h2 id="Xms"><a href="#Xms" class="headerlink" title="-Xms"></a>-Xms</h2><p>初始堆大小。只要启动，就占用的堆大小。</p>
<h2 id="Xmx"><a href="#Xmx" class="headerlink" title="-Xmx"></a>-Xmx</h2><p>最大堆大小。java.lang.OutOfMemoryError：Java heap这个错误可以通过配置-Xms和-Xmx参数来设置。</p>
<h2 id="Xss"><a href="#Xss" class="headerlink" title="-Xss"></a>-Xss</h2><p>栈大小分配。栈是每个线程私有的区域，通常只有几百K大小，决定了函数调用的深度，而局部变量、参数都分配到栈上。</p>
<p>当出现大量局部变量，递归时，会发生栈空间OOM（java.lang.StackOverflowError）之类的错误。</p>
<h2 id="XX-NewSize"><a href="#XX-NewSize" class="headerlink" title="-XX:NewSize"></a>-XX:NewSize</h2><p>设置新生代大小的绝对值。</p>
<h2 id="XX-NewRatio"><a href="#XX-NewRatio" class="headerlink" title="-XX:NewRatio"></a>-XX:NewRatio</h2><p>设置年轻代和年老代的比值。比如设置为3，则新生代：老年代=1:3，新生代占总heap的1/4。</p>
<h2 id="XX-MaxPermSize"><a href="#XX-MaxPermSize" class="headerlink" title="-XX:MaxPermSize"></a>-XX:MaxPermSize</h2><p>设置持久代大小。</p>
<p>java.lang.OutOfMemoryError:PermGenspace这个OOM错误需要合理调大PermSize和MaxPermSize大小。</p>
<h2 id="XX-SurvivorRatio"><a href="#XX-SurvivorRatio" class="headerlink" title="-XX:SurvivorRatio"></a>-XX:SurvivorRatio</h2><p>年轻代中Eden区与两个Survivor区的比值。注意，Survivor区有form和to两个。比如设置为8时，那么eden:form:to=8:1:1。</p>
<h2 id="XX-HeapDumpOnOutOfMemoryError"><a href="#XX-HeapDumpOnOutOfMemoryError" class="headerlink" title="-XX:HeapDumpOnOutOfMemoryError"></a>-XX:HeapDumpOnOutOfMemoryError</h2><p>发生OOM时转储堆到文件，这是一个非常好的诊断方法。</p>
<h2 id="XX-HeapDumpPath"><a href="#XX-HeapDumpPath" class="headerlink" title="-XX:HeapDumpPath"></a>-XX:HeapDumpPath</h2><p>导出堆的转储文件路径。</p>
<h2 id="XX-OnOutOfMemoryError"><a href="#XX-OnOutOfMemoryError" class="headerlink" title="-XX:OnOutOfMemoryError"></a>-XX:OnOutOfMemoryError</h2><p>OOM时，执行一个脚本，比如发送邮件报警，重启程序。后面跟着一个脚本的路径。</p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>博客样式合集</title>
    <url>/2020/01/31/%E5%8D%9A%E5%AE%A2%E6%A0%B7%E5%BC%8F%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<h2 id="通用文件头"><a href="#通用文件头" class="headerlink" title="通用文件头"></a>通用文件头</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">hexo</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">XWookey</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">博客</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">对hexo搭建修改过程的记录</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-01-30 22:41:12</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><code>Mrakdown</code> 写作的体验很棒，除了标准语法之外，Next 自带的 <code>Tag</code> 插件有还有一些特殊用法，这里仅对常用语法做下记录。更多全面的特殊语法案例，可以参考 NexT 官网：</p>
<p>NexT 中文网 : 文档适用于 6.0 以下版本</p>
<p>NexT 英文网 : 文档适用于 6.0 以上版本</p>
<h2 id="居中引用"><a href="#居中引用" class="headerlink" title="居中引用"></a>居中引用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125; 引用文字 &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<p>演示如下：</p>
<blockquote class="blockquote-center"><p>沒有一種工作是不委屈的…「熬過去」的日子裡，你經歷的，其實正是多數人經歷的一切 </p>
</blockquote>


<h2 id="彩色-Tags"><a href="#彩色-Tags" class="headerlink" title="彩色 Tags"></a>彩色 Tags</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% label [class] @ 标签内容 %&#125;</span><br><span class="line"></span><br><span class="line">class：</span><br><span class="line"> - default: 浅灰色,可留空</span><br><span class="line"> - primary: 浅紫色</span><br><span class="line"> - success: 浅绿色</span><br><span class="line"> - info: 浅蓝色</span><br><span class="line"> - warning: 浅黄色</span><br><span class="line"> - danger: 浅红色</span><br></pre></td></tr></table></figure>

<p>演示如下：</p>
<span class="label [default]"> default</span>
<span class="label [primary]"> primary</span>
<span class="label [success]"> success</span>
<span class="label [info]"> info</span>
<span class="label [warning]"> warning</span>
<span class="label [danger]"> danger</span>

<h2 id="彩色-Note"><a href="#彩色-Note" class="headerlink" title="彩色 Note"></a>彩色 Note</h2><p>避免将标签和内容写在同一行，可能引起编译错误。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note [class]%&#125; </span><br><span class="line">内容</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">class: </span><br><span class="line"> - default: 灰色</span><br><span class="line"> - primary: 紫色</span><br><span class="line"> - success: 绿色</span><br><span class="line"> - info: 蓝色</span><br><span class="line"> - warning: 黄色</span><br><span class="line"> - danger: 红色</span><br></pre></td></tr></table></figure>

<p>演示如下：</p>
<div class="note default">
            <p>default</p>
          </div>

<div class="note primary">
            <p>primary</p>
          </div>

<div class="note success">
            <p>success</p>
          </div>

<div class="note info">
            <p>info</p>
          </div>

<div class="note warning">
            <p>warning</p>
          </div>

<div class="note danger">
            <p>danger</p>
          </div>

<h2 id="切换-Tabs"><a href="#切换-Tabs" class="headerlink" title="切换 Tabs"></a>切换 Tabs</h2><p>使用 <code>tabs...endtabs</code> 标记 Tab 框架，框架内用 <code>&lt;!-- tab [name]--&gt;</code> 注释语句区分 Tab。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs [Class] %&#125; &#x2F;&#x2F; Class: 必填项，Tab的全局名称，唯一值，不能带有符号</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 1号Tab--&gt;</span><br><span class="line">这里是1号Tab内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 2号Tab--&gt;</span><br><span class="line">这里是2号Tab内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 3号Tab--&gt;</span><br><span class="line">这里是3号Tab内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p>演示如下：</p>
<div class="tabs" id="[class]"><ul class="nav-tabs"><li class="tab active"><a href="#[class]-1">1号Tab</a></li><li class="tab"><a href="#[class]-2">2号Tab</a></li><li class="tab"><a href="#[class]-3">3号Tab</a></li></ul><div class="tab-content"><div class="tab-pane active" id="[class]-1"><p>这里是1号Tab内容</p></div><div class="tab-pane" id="[class]-2"><p>这里是2号Tab内容</p></div><div class="tab-pane" id="[class]-3"><p>这里是3号Tab内容</p></div></div></div>

<h2 id="按钮-Btn"><a href="#按钮-Btn" class="headerlink" title="按钮 Btn"></a>按钮 Btn</h2><p>使用自带 <code>FontAwesome</code> 图标，在 FontAwesome 上找到相应的图标名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% btn [地址] , [内容] , [图标 规格] %&#125;</span><br><span class="line"></span><br><span class="line">[地址]：当使用外链绝对引用时，无按钮，样式类似Markdown链接跳转</span><br><span class="line">[图标 规格]: 使用无&#96;fa-&#96;开头的FontAwesome图标，可以用以下规格定义图标大小</span><br><span class="line">fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x</span><br></pre></td></tr></table></figure>

<p>演示如下：</p>
<p>相对引用：<a class="btn" href="https://www.baidu.com/ "><i class="fa fa-home fa-fw"></i>百度</a><br>绝对引用：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFpZHUuY29tLw==" title="https://www.baidu.com/">百度<i class="fa fa-external-link"></i></span><br>图标规格：</p>
<h2 id="显示文件修改"><a href="#显示文件修改" class="headerlink" title="显示文件修改"></a>显示文件修改</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ key1: 0000  #删除这一行</span></span><br><span class="line">key2： 1111</span><br><span class="line"><span class="deletion">- key3: 0000  #增加这一行</span></span><br><span class="line">key4: 1111</span><br></pre></td></tr></table></figure>


<h2 id="一级标签"><a href="#一级标签" class="headerlink" title="一级标签"></a>一级标签</h2><p>ddfasdfasdf </p>
<h3 id="二级标签"><a href="#二级标签" class="headerlink" title="二级标签"></a>二级标签</h3><p>奥术大师方法萨斯发</p>
<h3 id="二级标签-1"><a href="#二级标签-1" class="headerlink" title="二级标签"></a>二级标签</h3><p>奥术大师方法萨斯发</p>
<h4 id="sadfaf"><a href="#sadfaf" class="headerlink" title="sadfaf"></a>sadfaf</h4><p>asdfasdfas</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>同一台电脑多开tomcat</title>
    <url>/2017/12/26/%E5%90%8C%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%A4%9A%E5%BC%80tomcat/</url>
    <content><![CDATA[<p>有些特殊情况需要在同一台电脑上多开tomcat<br>这时需要修改<code>conf\server.xml</code>文件(共3处)</p>
<ol>
<li><p>http访问端口　(大约69行)<br>8080  -&gt;  8888</p>
</li>
<li><p>shutdown端口　(大约22行)<br>8005  -&gt;  8885</p>
</li>
<li><p>链接服务端口　(大约116行)<br>8009  -&gt;  8889</p>
</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>多数据源 dynamic-datasource-spring-boot-starter</title>
    <url>/2018/11/07/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90dynamic-datasource-spring-boot-starter/</url>
    <content><![CDATA[<p>在项目中增加了<code>dynamic-datasource-spring-boot-starter</code>之后发现无法访问静态资源<br>经过不断尝试之后需要增加如下配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/11/7/007</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 惊天大坑   加了 dynamic-datasource-spring-boot-starter 之后需要增加此项配置 (可能加了类似于<span class="doctag">@EnableWebMVC</span> 的注解)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoWebMvcConfigurerAdapter</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                <span class="comment">//.addResourceLocations(&quot;resources/&quot;,&quot;static/&quot;,&quot;public/&quot;,&quot;META-INF/resources/&quot;)</span></span><br><span class="line">                .addResourceLocations(<span class="string">&quot;classpath:/views/&quot;</span>,<span class="string">&quot;classpath:/static/&quot;</span>); <span class="comment">// static-locations: classpath:/static/,classpath:/views/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>安装宝塔Linux面板</title>
    <url>/2018/01/04/%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94Linux%E9%9D%A2%E6%9D%BF/</url>
    <content><![CDATA[<p>安装宝塔面板可以方便的管理服务器</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYnQuY24vYmJzL3RocmVhZC0xMTg2LTEtMS5odG1s" title="https://www.bt.cn/bbs/thread-1186-1-1.html">https://www.bt.cn/bbs/thread-1186-1-1.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p>以centos为例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>常用工具下载地址</title>
    <url>/2020/02/05/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<h2 id="fernflower-jar"><a href="#fernflower-jar" class="headerlink" title="fernflower.jar"></a>fernflower.jar</h2><p><span class="exturl" data-url="aHR0cDovL3RoZS5ieXRlY29kZS5jbHViL2Zlcm5mbG93ZXIuamFy" title="http://the.bytecode.club/fernflower.jar">fernflower.jar直接可用<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzYxNjgyMThjL0Zlcm5mbG93ZXJVSQ==" title="https://github.com/6168218c/FernflowerUI">fernflower.jar的第三方UI界面<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0pldEJyYWlucy9pbnRlbGxpai1jb21tdW5pdHkvdHJlZS9tYXN0ZXIvcGx1Z2lucy9qYXZhLWRlY29tcGlsZXIvZW5naW5l" title="https://github.com/JetBrains/intellij-community/tree/master/plugins/java-decompiler/engine">fernflower.jar (github)<i class="fa fa-external-link"></i></span>源码</p>
<h2 id="jclasslib"><a href="#jclasslib" class="headerlink" title="jclasslib"></a>jclasslib</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZ29rZWdlbC9qY2xhc3NsaWIvcmVsZWFzZXM=" title="https://github.com/ingokegel/jclasslib/releases">jclasslib(github)<i class="fa fa-external-link"></i></span></p>
<h2 id="postman"><a href="#postman" class="headerlink" title="postman"></a>postman</h2><p><span class="exturl" data-url="aHR0cHM6Ly9kbC5wc3Rtbi5pby9kb3dubG9hZC9sYXRlc3Qvd2luNjQ=" title="https://dl.pstmn.io/download/latest/win64">postman最新版<i class="fa fa-external-link"></i></span><br>也可以去<span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdG1hbi5jb20v" title="https://www.postman.com/">官网<i class="fa fa-external-link"></i></span>查看</p>
<h2 id="postwoman"><a href="#postwoman" class="headerlink" title="postwoman"></a>postwoman</h2><p><span class="exturl" data-url="aHR0cHM6Ly9wb3N0d29tYW4uaW8v" title="https://postwoman.io/">postwoman<i class="fa fa-external-link"></i></span></p>
<h2 id="jd-gui"><a href="#jd-gui" class="headerlink" title="jd-gui"></a>jd-gui</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phdmEtZGVjb21waWxlci9qZC1ndWkvcmVsZWFzZXM=" title="https://github.com/java-decompiler/jd-gui/releases">jd-gui (github)<i class="fa fa-external-link"></i></span></p>
<h2 id="bytecode-viewer"><a href="#bytecode-viewer" class="headerlink" title="bytecode-viewer"></a>bytecode-viewer</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0tvbmxvY2gvYnl0ZWNvZGUtdmlld2VyL3JlbGVhc2Vz" title="https://github.com/Konloch/bytecode-viewer/releases">bytecode-viewer (github)<i class="fa fa-external-link"></i></span></p>
<h2 id="wiremock"><a href="#wiremock" class="headerlink" title="wiremock"></a>wiremock</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RvbWFrZWh1cnN0L3dpcmVtb2NrL3JlbGVhc2Vz" title="https://github.com/tomakehurst/wiremock/releases">wiremock源码下载<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3dpcmVtb2NrLm9yZy8=" title="http://wiremock.org/">wiremock官网 可以看文档<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9yZXBvMS5tYXZlbi5vcmcvbWF2ZW4yL2NvbS9naXRodWIvdG9tYWtlaHVyc3Qvd2lyZW1vY2stc3RhbmRhbG9uZS8yLjI2LjAvd2lyZW1vY2stc3RhbmRhbG9uZS0yLjI2LjAuamFy" title="https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.26.0/wiremock-standalone-2.26.0.jar">wiremock官网下载<i class="fa fa-external-link"></i></span></p>
<h2 id="阿里诊断工具arthas"><a href="#阿里诊断工具arthas" class="headerlink" title="阿里诊断工具arthas"></a>阿里诊断工具arthas</h2><p><span class="exturl" data-url="aHR0cDovL3JlcG9zaXRvcnkuc29uYXR5cGUub3JnL3NlcnZpY2UvbG9jYWwvYXJ0aWZhY3QvbWF2ZW4vcmVkaXJlY3Q/cj1jZW50cmFsLXByb3h5Jmc9Y29tLnRhb2Jhby5hcnRoYXMmYT1hcnRoYXMtcGFja2FnaW5nJmU9emlwJmM9YmluJnY9TEFURVNU" title="http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.taobao.arthas&a=arthas-packaging&e=zip&c=bin&v=LATEST">下载<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvYXJ0aGFz" title="https://github.com/alibaba/arthas">Github<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9hbGliYWJhLmdpdGh1Yi5pby9hcnRoYXMv" title="https://alibaba.github.io/arthas/">文档<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1dhbmdKaTkyL2FydGhhcy1pZGVhLXBsdWdpbg==" title="https://github.com/WangJi92/arthas-idea-plugin">扩展-IDEA插件<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1hoaW5MaWFuZy9hcnRoYXMtbXZlbA==" title="https://github.com/XhinLiang/arthas-mvel">扩展-MVEL<i class="fa fa-external-link"></i></span></p>
<h2 id="去哪儿诊断工具Bistoury"><a href="#去哪儿诊断工具Bistoury" class="headerlink" title="去哪儿诊断工具Bistoury"></a>去哪儿诊断工具Bistoury</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3F1bmFyY29ycC9iaXN0b3VyeQ==" title="https://github.com/qunarcorp/bistoury">github<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3F1bmFyY29ycC9iaXN0b3VyeS9yZWxlYXNlcw==" title="https://github.com/qunarcorp/bistoury/releases">下载(github)<i class="fa fa-external-link"></i></span></p>
<h2 id="唯品会诊断工具vjtools"><a href="#唯品会诊断工具vjtools" class="headerlink" title="唯品会诊断工具vjtools"></a>唯品会诊断工具vjtools</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZpcHNob3Avdmp0b29scw==" title="https://github.com/vipshop/vjtools">github<i class="fa fa-external-link"></i></span></p>
<h2 id="JMETER"><a href="#JMETER" class="headerlink" title="JMETER"></a>JMETER</h2><p><span class="exturl" data-url="aHR0cHM6Ly9qbWV0ZXIuYXBhY2hlLm9yZy9kb3dubG9hZF9qbWV0ZXIuY2dp" title="https://jmeter.apache.org/download_jmeter.cgi">apache地址<i class="fa fa-external-link"></i></span></p>
<h2 id="writage"><a href="#writage" class="headerlink" title="writage"></a>writage</h2><p><span class="exturl" data-url="aHR0cDovL3d3dy53cml0YWdlLmNvbS8=" title="http://www.writage.com/">WORD 的 MARKDOWN插件<i class="fa fa-external-link"></i></span></p>
<h2 id="pandoc"><a href="#pandoc" class="headerlink" title="pandoc"></a>pandoc</h2><p><span class="exturl" data-url="aHR0cHM6Ly9wYW5kb2Mub3JnLw==" title="https://pandoc.org/">官网<i class="fa fa-external-link"></i></span></p>
<h2 id="bat"><a href="#bat" class="headerlink" title="bat"></a>bat</h2><p>高亮查看文件<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NoYXJrZHAvYmF0" title="https://github.com/sharkdp/bat">GITHUB<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NoYXJrZHAvYmF0L3JlbGVhc2VzL2Rvd25sb2FkL3YwLjEyLjEvYmF0LXYwLjEyLjEteDg2XzY0LXBjLXdpbmRvd3MtbXN2Yy56aXA=" title="https://github.com/sharkdp/bat/releases/download/v0.12.1/bat-v0.12.1-x86_64-pc-windows-msvc.zip">下载地址WINDOWS<i class="fa fa-external-link"></i></span></p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>快速反编译java程序</title>
    <url>/2018/07/24/%E5%BF%AB%E9%80%9F%E5%8F%8D%E7%BC%96%E8%AF%91java%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<blockquote>
<p>项目<code>github</code>地址 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Zlc2gwci9mZXJuZmxvd2Vy" title="https://github.com/fesh0r/fernflower">https://github.com/fesh0r/fernflower<i class="fa fa-external-link"></i></span><br>下载地址  <span class="exturl" data-url="aHR0cDovL3RoZS5ieXRlY29kZS5jbHViL2Zlcm5mbG93ZXIuamFy" title="http://the.bytecode.club/fernflower.jar">http://the.bytecode.club/fernflower.jar<i class="fa fa-external-link"></i></span></p>
</blockquote>
<ol>
<li><p>如果是<code>class</code>文件,需要把<code>class</code>文件压缩成<code>zip</code>包</p>
</li>
<li><p>开始反编译</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -jar fernflower.jar classes.zip zzCode&#x2F;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用工具批量解压</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>class</tag>
      </tags>
  </entry>
  <entry>
    <title>[1/5]快速掌握Jenkins原理与核心功能</title>
    <url>/2018/08/20/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1Jenkins%E5%8E%9F%E7%90%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h1 id="jenkins-概述与环境配置"><a href="#jenkins-概述与环境配置" class="headerlink" title="jenkins 概述与环境配置"></a>jenkins 概述与环境配置</h1><blockquote>
<p>知识点：</p>
<ol>
<li>关于可持续化集成 （CI）</li>
<li>jenkins 概述</li>
<li>下载安装jenkins </li>
<li>基础环境配置与常用插件下载</li>
</ol>
</blockquote>
<a id="more"></a>
<h2 id="关于可持续化集成"><a href="#关于可持续化集成" class="headerlink" title="关于可持续化集成"></a>关于可持续化集成</h2><p>相信大家都知道<code>jenkins</code>是用来做可持续集成的? 但部问题是很多人并不明白什么叫可持续化集成。讲概念之前我们先来举一个场景：<br>一个团队正着手开发一个项目，在需求评审之后由小组长把项目拆成了若干个模块，分给不同的小伙伴去实现。2个星期以后各自模块的功能都实现了，大家都很开心。这时该合在一起提测了吧。这一合小组长傻眼了，功能没一个能用的，要么公共类冲突了，要么配置冲突….<br>经过上次的教训，小组长变聪明了，在也不等功能开发之后在合并提测了，而是每天集成提测，如果发现冲突当天就要解决。</p>
<p>持续集成即 <code>Continuous integration（CI）</code> 是一种软件开发实践，即团队开发成员经常集成他们的工作，每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽快地发现集成错误，让团队能够更高效的开发软件。</p>
<p><img src="/2018/08/20/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1Jenkins%E5%8E%9F%E7%90%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD/image-62.png" alt="upload successful"></p>
<blockquote>
<p>持续集成要点：</p>
<ul>
<li>统一的代码库(git)</li>
<li>统一的依赖包管理(nexus)</li>
<li>测试自动化</li>
<li>构建全自动化(maven)</li>
<li>部署自动化</li>
<li>可追踪的集成记录</li>
</ul>
</blockquote>
<h2 id="jenkins-概述"><a href="#jenkins-概述" class="headerlink" title="jenkins 概述"></a>jenkins 概述</h2><p><code>jenkins</code> 就是为了满足上述持续集成的要点而设计的一款工具，其主体框架采用<code>JAVA</code>开发，实质内部功能都是由各种插件实现，极大提高了系统的扩展性。其不仅可以满足JAVA系统的集成，也可以实现PHP等语言的集成发布。通过其 <code>pipeline</code> 插件，用户可以随自己需要定制集成流程。</p>
<h2 id="下载安装jenkins"><a href="#下载安装jenkins" class="headerlink" title="下载安装jenkins"></a>下载安装jenkins</h2><ul>
<li><p><strong>下载</strong>：jenkins 支持Docker、yum、msi 等安装，在这里推荐大家直接选择下载他对应的WAR包进行安装。<br><span class="exturl" data-url="aHR0cHM6Ly9qZW5raW5zLmlvL2Rvd25sb2FkLw==" title="https://jenkins.io/download/">https://jenkins.io/download/<i class="fa fa-external-link"></i></span>   </p>
</li>
<li><p><strong>启动</strong>：下载完成之后直接可通过 jar -jar 命令启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -jar jenkins.war --httpPort&#x3D;8080</span><br></pre></td></tr></table></figure>
<p>也可以将其放至到 <code>servlet</code> 容器<code>（tomcat\jetty\jboss）</code>中直接启动，无需过多的配置，一切插件化这是 <code>jenkins</code> 比较优秀的设计。</p>
</li>
<li><p><strong>配置：</strong>下载完成之后进入启动页<a href="(http://127.0.0.1:8080/">http://127.0.0.1:8080/</a> 会有一个 验证过程，验证码存储在 <code>$&#123;user_home&#125;\.jenkins\secrets\initialAdminPassword</code> 中，接着就是进入安装插件页，选择默认即可，这个过程稍长。</p>
</li>
</ul>
<h2 id="基础环境配置与常用插件下载"><a href="#基础环境配置与常用插件下载" class="headerlink" title="基础环境配置与常用插件下载"></a>基础环境配置与常用插件下载</h2><p>在集成的时候,<code>jenkins</code> 用到了 <code>Maven</code> 、<code>Git</code>  所以服务器中必须提前安装好这些环境，具体参照前面的<code>git</code>与 <code>maven</code> 课程。</p>
<blockquote>
<p>** 插件下载 **<br>更换源 -&gt;系统管理-&gt;管理插件-&gt;高级 -&gt;升级站点<br>把：<span class="exturl" data-url="aHR0cDovL3VwZGF0ZXMuamVua2lucy1jaS5vcmcvdXBkYXRlLWNlbnRlci5qc29u" title="http://updates.jenkins-ci.org/update-center.json">http://updates.jenkins-ci.org/update-center.json<i class="fa fa-external-link"></i></span><br>换成：<span class="exturl" data-url="aHR0cDovL21pcnJvci5lc3VuaS5qcC9qZW5raW5zL3VwZGF0ZXMvdXBkYXRlLWNlbnRlci5qc29u" title="http://mirror.esuni.jp/jenkins/updates/update-center.json">http://mirror.esuni.jp/jenkins/updates/update-center.json<i class="fa fa-external-link"></i></span><br>镜像源查询：<span class="exturl" data-url="aHR0cDovL21pcnJvcnMuamVua2lucy1jaS5vcmcvc3RhdHVzLmh0bWw=" title="http://mirrors.jenkins-ci.org/status.html">http://mirrors.jenkins-ci.org/status.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p>基本插件列表</p>
<table>
<thead>
<tr>
<th>插件名称</th>
<th>插件描述</th>
</tr>
</thead>
<tbody><tr>
<td>Maven Integration     maven</td>
<td>管理插件</td>
</tr>
<tr>
<td>Deploy to container</td>
<td>容器部署插件</td>
</tr>
<tr>
<td>Pipeline</td>
<td>管道集成插件</td>
</tr>
<tr>
<td>Email Extension</td>
<td>邮件通知插件</td>
</tr>
<tr>
<td>SSH</td>
<td>用于ssh 通信</td>
</tr>
</tbody></table>
<h1 id="基于jenkins-实现可持续化集成"><a href="#基于jenkins-实现可持续化集成" class="headerlink" title="基于jenkins 实现可持续化集成"></a>基于jenkins 实现可持续化集成</h1><blockquote>
<p>知识点：</p>
<ol>
<li>持续化集成完成的目标</li>
<li>持续化集成配置</li>
<li>集成实现原理</li>
</ol>
</blockquote>
<h2 id="持续化集成完成的目标"><a href="#持续化集成完成的目标" class="headerlink" title="持续化集成完成的目标"></a>持续化集成完成的目标</h2><p>需要到达的目标如下：</p>
<ol>
<li>自动基于分支构建项目</li>
<li>构建好的项目自动部署至Tomcat容器</li>
<li>构建好的项目自动上传至Nexus 私服存档</li>
<li>保存构建历史记录，并可以下载历史记录</li>
</ol>
<h2 id="持续化集成配置"><a href="#持续化集成配置" class="headerlink" title="持续化集成配置"></a>持续化集成配置</h2><h3 id="新建maven-job"><a href="#新建maven-job" class="headerlink" title="新建maven job"></a>新建maven job</h3><p><img src="/2018/08/20/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1Jenkins%E5%8E%9F%E7%90%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD/image-63.png" alt="upload successful"></p>
<h3 id="配置checkout-源码"><a href="#配置checkout-源码" class="headerlink" title="配置checkout 源码"></a>配置checkout 源码</h3><p><img src="/2018/08/20/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1Jenkins%E5%8E%9F%E7%90%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD/image-64.png" alt="upload successful"></p>
<h3 id="编写-maven构建-命令"><a href="#编写-maven构建-命令" class="headerlink" title="编写 maven构建 命令"></a>编写 maven构建 命令</h3><p><img src="/2018/08/20/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1Jenkins%E5%8E%9F%E7%90%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD/image-65.png" alt="upload successful"></p>
<h3 id="自动部署至Tomcat配置"><a href="#自动部署至Tomcat配置" class="headerlink" title="自动部署至Tomcat配置"></a>自动部署至Tomcat配置</h3><p>添加构建后操作：<code>Deploy war/ear to container</code> 项目<br><img src="/2018/08/20/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1Jenkins%E5%8E%9F%E7%90%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD/image-66.png" alt="upload successful"></p>
<p>自动部署的前提条件：</p>
<ol>
<li>需要下载 <code>Deploy to container</code> 插件</li>
<li>设置Tomcat manager 用户和密码，以下配置加入至 <code>Tomcat conf/tomcat-users.xml</code> 中</li>
<li><code>tomcat webapp</code>  中必须保留 <code>manager</code> 项目<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-script&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;manager&quot;</span> <span class="attr">password</span>=<span class="string">&quot;manager&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;manager-gui,manager-script&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">password</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;admin-gui,manager-gui&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="存档配置"><a href="#存档配置" class="headerlink" title="存档配置"></a>存档配置</h3><p>构建后操作添加 <code>Deploy war/ear to a container</code> 项目<br><img src="/2018/08/20/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1Jenkins%E5%8E%9F%E7%90%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD/image-67.png" alt="upload successful"><br>配置setting.xml 用于获取上传至nexus 的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.m2/settings.xml</span><br></pre></td></tr></table></figure>
<p>添加一个 <code>server  id</code> 与 存档配置当中的 <code>repository id</code> 相对应。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexusReleases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">username</span>&gt;</span>deployment<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">password</span>&gt;</span>111111<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="集成实现原理"><a href="#集成实现原理" class="headerlink" title="集成实现原理"></a>集成实现原理</h2><p><img src="/2018/08/20/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1Jenkins%E5%8E%9F%E7%90%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD/image-68.png" alt="upload successful"></p>
<h1 id="jenkins-pipeline-核心应用"><a href="#jenkins-pipeline-核心应用" class="headerlink" title="jenkins pipeline 核心应用"></a>jenkins pipeline 核心应用</h1><p>知识点：</p>
<ol>
<li>pipeline 概要</li>
<li>pipeline 基础语法</li>
<li>pipeline Demo演示</li>
</ol>
<h2 id="pipeline-概要"><a href="#pipeline-概要" class="headerlink" title="pipeline 概要"></a>pipeline 概要</h2><p>前面我们演示的 使用 <code>maven</code> 来进行自动化构建，其流程分别是：<code>构建环境准备==》源码下载 ==》构建 ==》存档 ==》部署</code>。这是一种固化的构建流程，如果你们的需求是多个项目需要进行依赖构建这种复杂的构建场景 时该怎么办？<code>jenkins pipeline</code> 可以做到这一点。<br>   <code>Jenkins</code>从根本上讲是一种支持多种自动化模式的自动化引擎。<code>Pipeline</code> 在 <code>Jenkins</code>上添加了一套强大的自动化工具，支持从简单的连续集成到全面的连续输送 <code>Pipeline</code> 的用例。用户可以基于他实现更为复杂的建模场景。   </p>
<h2 id="pipeline-基础语法"><a href="#pipeline-基础语法" class="headerlink" title="pipeline 基础语法"></a>pipeline 基础语法</h2><p>以下就是一个非常简单的 pipeline 脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any </span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Build&#x27;</span>) &#123; </span><br><span class="line">            steps &#123; </span><br><span class="line">                sh <span class="string">&#x27;make&#x27;</span> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;Test&#x27;</span>)&#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;make check&#x27;</span></span><br><span class="line">                junit <span class="string">&#x27;reports/**/*.xml&#x27;</span> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;Deploy&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh <span class="string">&#x27;make publish&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>agent</strong>: 表示 <code>Jenkins</code> 应该为 <code>Pipeline</code> 的这一部分分配一个执行者和工作区。</li>
<li><strong>stage</strong>: 描述了这条 <code>Pipeline</code> 的一个阶段。</li>
<li><strong>steps</strong>: 描述了要在其中运行的步骤 <code>stage</code></li>
<li><strong>sh</strong>: 执行给定的 <code>shell</code> 命令</li>
<li><strong>junit</strong>: 是由 <code>JUnit</code> 插件提供的 用于聚合测试报告的 <code>Pipeline</code> 步骤。</li>
</ul>
<h2 id="pipeline-Demo演示"><a href="#pipeline-Demo演示" class="headerlink" title="pipeline Demo演示"></a>pipeline Demo演示</h2><p>前提条件   </p>
<ol>
<li>Jenkins 2.x或更高版本</li>
<li>Pipeline插件</li>
</ol>
<p>可以通过以下任一方式创建基本 <code>Pipeline</code></p>
<ol>
<li>直接在 <code>Jenkins</code> 网页界面中输入脚本。</li>
<li>通过创建一个 <code>Jenkinsfile</code> 可以检入项目的源代码管理库。<br>用任一方法定义 <code>Pipeline</code>的语法是一样的，从项目源码中检入 <code>jenkinsfile</code> 文件会更方便一些。</li>
</ol>
<p>基于脚本构建 <code>pipeline</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Checkout&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;Checkout&#x27;</span></span><br><span class="line">        stage(<span class="string">&#x27;Build&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;Building&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;test&#x27;</span>)&#123;</span><br><span class="line">            steps&#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;test&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>基于Jenkinsfile 构建</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any </span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;checkout&#x27;</span>) &#123; </span><br><span class="line">            steps &#123; </span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;checkout&#x27;</span> </span><br><span class="line">                checkout([<span class="variable">$class</span>: <span class="string">&#x27;GitSCM&#x27;</span>, branches: [[name: <span class="string">&#x27;*/master&#x27;</span>]], doGenerateSubmoduleConfigurations: <span class="literal">false</span>, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: <span class="string">&#x27;gogs_luban&#x27;</span>, url: <span class="string">&#x27;http://git.jiagouedu.com/java-vip/tuling-api-gateway&#x27;</span>]]])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;build&#x27;</span>)&#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                 <span class="built_in">echo</span> <span class="string">&#x27;build&#x27;</span></span><br><span class="line">                 sh <span class="string">&#x27;mvn clean install&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&#x27;save&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">               <span class="built_in">echo</span> <span class="string">&#x27;save&#x27;</span></span><br><span class="line">               archiveArtifacts <span class="string">&#x27;target/*.war&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>[1/2]git企业私服搭建</title>
    <url>/2018/08/06/%E6%90%AD%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%A7%81%E6%9C%89git%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="git支持的四种通信协议"><a href="#git支持的四种通信协议" class="headerlink" title="git支持的四种通信协议"></a>git支持的四种通信协议</h2><ol>
<li>   Local(本地协议)</li>
<li>   ssh</li>
<li>   http(Dumb、Smart)</li>
<li>   git<a id="more"></a>/

</li>
</ol>
<h3 id="Local-本地协议"><a href="#Local-本地协议" class="headerlink" title="Local(本地协议)"></a>Local(本地协议)</h3><p>基于本地文件系统或共享（NFS）文件系统进行访问。<br><strong>优点：</strong>简单，直接使用了现有的文件权限和网络访问权限，小团队小项目建立一个这样的版本管理系统是非常轻松的一件事。<br><strong>缺点：</strong>这种协议缺陷就是本身共享文件系统的局限，只能在局域网，而且速度也慢。<br><strong>适应场景：</strong>小团队，小项目临时搭建版本服务。   </p>
<p>如果在 URL 开头明确的指定 file://，那么 Git 的行为会略有不同。 如果仅是指定路径，Git 会尝试使用硬链接（hard link）或直接复制所需要的文件。 如果指定 file://，Git 会触发平时用于网路传输资料的进程，传输过来的是打包好的文件,更节约硬盘空间(使用 git gc 来手动打包项目)。</p>
<p>创建一个裸项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init --bare luban.git </span><br></pre></td></tr></table></figure>
<p>手动共享刚才创建的文件夹</p>
<p>可以直接使用以下3种方法拉取项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 换一个目录</span></span><br><span class="line">从本地 f/git/atals 目录克隆项目</span><br><span class="line">git <span class="built_in">clone</span> /f/git/luban.git/</span><br><span class="line"><span class="comment"># 即使是 bare仓库也可以正常下载</span></span><br><span class="line">git <span class="built_in">clone</span> /f/git/atals.git</span><br><span class="line"><span class="comment"># 基于file 协议克隆本地项目</span></span><br><span class="line">git <span class="built_in">clone</span> file:///f/git/atals/</span><br></pre></td></tr></table></figure>

<h3 id="ssh-协议"><a href="#ssh-协议" class="headerlink" title="ssh 协议"></a>ssh 协议</h3><p> git 支持支持利用ssh 协议进行通信，这是绝大部分linux、uninx系统都支持的，所以利用该协议架设GIT版本服务是非常方便的<br><strong>优点：</strong>首先SSH 架设相对简单、其次通过 SSH 访问是安全的、另外SSH 协议很高效，在传输前也会尽量压缩数据。<br><strong>缺点：</strong>权限体系不灵活，必须提供操作系统的帐户密码，哪怕是只需要读取版本。<br><strong>适应场景：</strong>小团队、小项目、临时项目</p>
<p>这里我们把git 服务必须先安装到linux 系统上，然后才能使用ssh  协议跟git 服务进行通信。</p>
<h4 id="linux-安装git服务"><a href="#linux-安装git服务" class="headerlink" title="linux 安装git服务"></a>linux 安装git服务</h4><h5 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure>
<h5 id="下载并解压源码"><a href="#下载并解压源码" class="headerlink" title="下载并解压源码"></a>下载并解压源码</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://github.com/git/git/archive/v2.3.0.zip</span><br><span class="line">$ unzip v2.3.0.zip</span><br><span class="line">$ <span class="built_in">cd</span> git-2.3.0</span><br></pre></td></tr></table></figure>
<blockquote>
<p>备用下载链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWN6d0V6OA==" title="https://pan.baidu.com/s/1czwEz8">https://pan.baidu.com/s/1czwEz8<i class="fa fa-external-link"></i></span> 密码: y3hn</p>
</blockquote>
<h5 id="编译-安装（如果没有权限就加上sudo）"><a href="#编译-安装（如果没有权限就加上sudo）" class="headerlink" title="编译 安装（如果没有权限就加上sudo）"></a>编译 安装（如果没有权限就加上sudo）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make prefix=/usr/<span class="built_in">local</span>/git all</span><br><span class="line">make prefix=/usr/<span class="built_in">local</span>/git install</span><br></pre></td></tr></table></figure>
<h5 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=/root/svr/git/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<h5 id="如果成功显示版本号表示添加成功"><a href="#如果成功显示版本号表示添加成功" class="headerlink" title="如果成功显示版本号表示添加成功"></a>如果成功显示版本号表示添加成功</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --version</span><br><span class="line">git version 2.3.0</span><br></pre></td></tr></table></figure>
<h4 id="创建一个祼项目"><a href="#创建一个祼项目" class="headerlink" title="创建一个祼项目"></a>创建一个祼项目</h4><p>在linux服务器上创建一个祼项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --bare init luban.git</span><br></pre></td></tr></table></figure>
<h4 id="本地基于远程克隆仓库"><a href="#本地基于远程克隆仓库" class="headerlink" title="本地基于远程克隆仓库"></a>本地基于远程克隆仓库</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> root@192.168.0.147:/data/git-repository/luban.git</span><br><span class="line"><span class="built_in">cd</span> luban/</span><br></pre></td></tr></table></figure>
<h4 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;this is luban&quot;</span> &gt;&gt; README.MF</span><br></pre></td></tr></table></figure>
<h4 id="本地添加、提交、并推送至远程"><a href="#本地添加、提交、并推送至远程" class="headerlink" title="本地添加、提交、并推送至远程"></a>本地添加、提交、并推送至远程</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add -A; git commit -am <span class="string">&#x27;first commit&#x27;</span>; git push;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>可能的错误：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git-upload-pack: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>
<blockquote>
<p>因是 ssh 协议下只能访问/usr/bin 下的目录，解决办法如下</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/git/bin/git-upload-pack /usr/bin/git-upload-pack</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/git/bin/git-receive-pack /usr/bin/git-receive-pack</span><br></pre></td></tr></table></figure>

<h3 id="http-Dumb、Smart"><a href="#http-Dumb、Smart" class="headerlink" title="http(Dumb、Smart)"></a>http(Dumb、Smart)</h3><p><code>Git http</code> 协议实现是依懒 <code>WEB</code>容器(<code>apache</code>、<code>nginx</code>)及<code>cgi</code> 组件进行通信交互，并利用WEB容器本身权限体系进行授权验证。在 <code>Git 1.6.6</code>  前只支持<code>http Dumb</code>（哑）协议，该协议只能下载不能提交，通常会配合ssh 协议一起使用，<code>ssh</code> 分配提交帐号，<code>http dumb</code>提供只读帐号。<code>1.6.6</code> 之后 <code>git</code> 提供了<code>git-http-backend</code> 的 <code>CGI</code> 用于实现接收远程推送等功能。</p>
<p><strong>优点：</strong>解决了 <code>local</code> 与 <code>ssh</code> 权限验证单一的问题、可基于<code>http url</code> 提供匿名服务，从而可以放到公网上去。而 <code>local</code> 与 <code>ssh</code> 是很难做到这一点,必如实现一个类似 <code>github</code> 这样的网站。<br><strong>缺点：</strong>架设复杂一些需要部署 <code>WEB</code> 服务器，和 <code>https</code> 证书之类的配置<br><strong>适应场景：</strong>大型团队、需要对权限精准控制、需要把服务部署到公网上去   </p>
<h4 id="http-Dumb-配置与使用"><a href="#http-Dumb-配置与使用" class="headerlink" title="http Dumb 配置与使用"></a>http Dumb 配置与使用</h4><h4 id="创建服务端版本仓库"><a href="#创建服务端版本仓库" class="headerlink" title="创建服务端版本仓库"></a>创建服务端版本仓库</h4><p>创建一个裸项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/git-repository</span><br><span class="line">git --bare init luban.git</span><br></pre></td></tr></table></figure>
<p>nginx 静态访问配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  git.tl.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root  /data/git-repository;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="重命名钩子"><a href="#重命名钩子" class="headerlink" title="重命名钩子"></a>重命名钩子</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp hooks/post-update.sample hooks/post-update</span><br></pre></td></tr></table></figure>
<p>**原理解释： **<br>以下是<code>hooks/post-update</code>,每一次提交时会自动执行，这个脚本的作用是更新索引</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># An example hook script to prepare a packed repository for use over</span></span><br><span class="line"><span class="comment"># dumb transports.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To enable this hook, rename this file to &quot;post-update&quot;.</span></span><br><span class="line"><span class="built_in">exec</span> git update-server-info</span><br></pre></td></tr></table></figure>


<h4 id="本地克隆远程服务"><a href="#本地克隆远程服务" class="headerlink" title="本地克隆远程服务"></a>本地克隆远程服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> http://git.tl.com/luban.git</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：<code>http  Smart</code> 协议 是基于 <code>CG</code>I 配合 <code>GIT  git-http-backend</code> 脚本进行使用，配置较复杂，现在一般不会这么去做，而是采用 <code>gitlab</code> 、<code>gogs</code> 之类的<code>web</code>管理进行代替，在此就不在演示。</p>
</blockquote>
<h3 id="GIT-协议"><a href="#GIT-协议" class="headerlink" title="GIT 协议"></a>GIT 协议</h3><p><code>Git</code> 协议是包含在 <code>Git</code> 里的一个特殊的守护进程；它监听在一个特定的端口 <code>9418</code>，类似于 <code>SSH</code> 服务，但是访问无需任何授权。</p>
<p><strong>优点：</strong>目前，<code>Git</code> 协议是 <code>Git</code> 使用的网络传输协议里最快的。 如果你的项目有很大的访问量，或者你的项目很庞大并且不需要为写进行用户授权，架设 <code>Git</code> 守护进程来提供服务是不错的选择。 它使用与 <code>SSH</code> 相同的数据传输机制，但是省去了加密和授权的开销。<br><strong>缺点：</strong><code>Gi</code>t 协议缺点是缺乏授权机制。 而且<code>9418</code>是一个非标准端口，一般防火墙不会开放。</p>
<h4 id="GIT协议的使用"><a href="#GIT协议的使用" class="headerlink" title="GIT协议的使用"></a>GIT协议的使用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/git-repository</span><br><span class="line">git --bare init luban.git</span><br><span class="line"><span class="built_in">cd</span> luban.git/</span><br></pre></td></tr></table></figure>
<h4 id="创建一个空文件，表示开放该项目"><a href="#创建一个空文件，表示开放该项目" class="headerlink" title="创建一个空文件，表示开放该项目"></a>创建一个空文件，表示开放该项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch git-daemon-export-ok</span><br></pre></td></tr></table></figure>
<h4 id="启动守护进程"><a href="#启动守护进程" class="headerlink" title="启动守护进程"></a>启动守护进程</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$nohub</span> git daemon --reuseaddr --base-path=/data/git-repository/ /data/git-repository/ &amp;</span><br></pre></td></tr></table></figure>
<h4 id="本地克隆远程项目"><a href="#本地克隆远程项目" class="headerlink" title="本地克隆远程项目"></a>本地克隆远程项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://192.168.0.147:9418/luban.git</span><br></pre></td></tr></table></figure>

<h2 id="gogs安装"><a href="#gogs安装" class="headerlink" title="gogs安装"></a>gogs安装</h2><p><code>Gogs</code> 是一款开源的轻量级<code>Git web</code>服务，其特点是简单易用完档齐全、国际化做的相当不错。其主要功能如下:</p>
<ol>
<li>   提供 <code>Http</code> 与 <code>ssh</code> 两种协议访问源码服务</li>
<li>   提供可 <code>WEB</code> 界面可查看修改源码代码</li>
<li>   提供较完善的权限管理功能、其中包括组织、团队、个人等仓库权限</li>
<li>   提供简单的项目viki功能</li>
<li>   提供工单管理与里程碑管理。</li>
</ol>
<h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>官网：<span class="exturl" data-url="aHR0cHM6Ly9nb2dzLmlvLw==" title="https://gogs.io/">https://gogs.io<i class="fa fa-external-link"></i></span><br>下载：<span class="exturl" data-url="aHR0cHM6Ly9nb2dzLmlvL2RvY3MvaW5zdGFsbGF0aW9u" title="https://gogs.io/docs/installation">https://gogs.io/docs/installation<i class="fa fa-external-link"></i></span> 选择 linx amd64 下载安装<br>文档：<span class="exturl" data-url="aHR0cHM6Ly9nb2dzLmlvL2RvY3MvaW5zdGFsbGF0aW9uL2luc3RhbGxfZnJvbV9iaW5hcnk=" title="https://gogs.io/docs/installation/install_from_binary">https://gogs.io/docs/installation/install_from_binary<i class="fa fa-external-link"></i></span>   </p>
<p><strong>前台运行</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gogs web</span><br></pre></td></tr></table></figure>
<p>后台运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gogs web &amp;</span><br></pre></td></tr></table></figure>
<p>默认端口：3000<br>初次访问 <code>http://&lt;host&gt;:3000</code> 会进到初始化页,进行引导配置。<br>可选择 <code>mysql</code> 或 <code>sqlite</code> 等数据。这里选的是 <code>sqllite</code></p>
<blockquote>
<p>注：mysql 索引长度的问题没有安装成功,需要用mysql5.7 以上版本</p>
</blockquote>
<h3 id="gogs-基础配置"><a href="#gogs-基础配置" class="headerlink" title="gogs 基础配置"></a>gogs 基础配置</h3><p>邮件配置说明：<br>邮件配置是用于注册时邮件确认，和找回密码时候的验证邮件发送。其配置分为两步：   </p>
<ol>
<li>创建一个开通了 <code>smtp</code> 服务的邮箱帐号，一般用公司管理员邮箱。我这里用的是QQ邮箱。   </li>
<li>在 <code>&#123;gogs_home&#125;/custom/conf/app.ini</code> 文件中配置。</li>
</ol>
<h4 id="QQ邮箱开通smtp服务"><a href="#QQ邮箱开通smtp服务" class="headerlink" title="QQ邮箱开通smtp服务"></a>QQ邮箱开通smtp服务</h4><ol>
<li>点击设置<br><img src="/2018/08/06/%E6%90%AD%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%A7%81%E6%9C%89git%E6%9C%8D%E5%8A%A1/image-56.png" alt="upload successful"></li>
<li>开启smtp<br><img src="/2018/08/06/%E6%90%AD%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%A7%81%E6%9C%89git%E6%9C%8D%E5%8A%A1/image-57.png" alt="upload successful"></li>
<li>邮件设置<br>设置文件：{gogs_home}/custom/conf/app.ini<br><img src="/2018/08/06/%E6%90%AD%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%A7%81%E6%9C%89git%E6%9C%8D%E5%8A%A1/image-58.png" alt="upload successful"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENABLED = <span class="literal">true</span></span><br><span class="line"><span class="comment">#ENABLED =true 表示启用邮件服务</span></span><br><span class="line">HOST=smtp.qq.com:465</span><br><span class="line"><span class="comment">#host 为smtp 服务器地址，（需要对应邮箱开通smtp服务 且必须为ssl 的形式访问）</span></span><br><span class="line">FROM=tuling&lt;2877438881@qq.com&gt;</span><br><span class="line"><span class="comment">#from 发送人名称地址</span></span><br><span class="line">USER=</span><br><span class="line"><span class="comment">#user 发送帐号</span></span><br><span class="line">PASSWD=</span><br><span class="line"><span class="comment">#passwd 开通smtp 帐户时会有对应的授权码</span></span><br></pre></td></tr></table></figure>
重启后可直接测试<br>管理员登录==》控制面版==》应用配置管理==》邮件配置==》发送测试邮件   </li>
</ol>
<h3 id="gogs定时备份与恢复"><a href="#gogs定时备份与恢复" class="headerlink" title="gogs定时备份与恢复"></a>gogs定时备份与恢复</h3><h4 id="查看备份相关参数"><a href="#查看备份相关参数" class="headerlink" title="查看备份相关参数"></a>查看备份相关参数</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gogs backup -h</span><br></pre></td></tr></table></figure>

<h4 id="默认备份-备份在当前目录"><a href="#默认备份-备份在当前目录" class="headerlink" title="默认备份,备份在当前目录"></a>默认备份,备份在当前目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gogs backup</span><br></pre></td></tr></table></figure>

<h4 id="参数化备份-target-输出目录-database-only-只备份-db"><a href="#参数化备份-target-输出目录-database-only-只备份-db" class="headerlink" title="参数化备份  --target 输出目录 --database-only 只备份 db"></a>参数化备份  <code>--target</code> 输出目录 <code>--database-only</code> 只备份 <code>db</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gogs backup --target=./backupes --database-only --exclude-repos</span><br></pre></td></tr></table></figure>

<h4 id="恢复。执行该命令前要先删除-custom-bak"><a href="#恢复。执行该命令前要先删除-custom-bak" class="headerlink" title="恢复。执行该命令前要先删除 custom.bak"></a>恢复。执行该命令前要先删除 <code>custom.bak</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gogs restore --from=gogs-backup-20180411062712.zip</span><br></pre></td></tr></table></figure>

<h4 id="自动备份脚本"><a href="#自动备份脚本" class="headerlink" title="自动备份脚本"></a>自动备份脚本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh -e</span></span><br><span class="line">gogs_home=<span class="string">&quot;/home/apps/svr/gogs/&quot;</span></span><br><span class="line">backup_dir=<span class="string">&quot;<span class="variable">$gogs_home</span>/backups&quot;</span></span><br><span class="line"><span class="comment">#执行备份命令</span></span><br><span class="line">./gogs backup --target=<span class="variable">$backup_dir</span></span><br></pre></td></tr></table></figure>

<h4 id="查找并删除-7天前的备份"><a href="#查找并删除-7天前的备份" class="headerlink" title="查找并删除 7天前的备份"></a>查找并删除 7天前的备份</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find <span class="variable">$backup_dir</span> -name <span class="string">&#x27;*.zip&#x27;</span> -mtime +7 -<span class="built_in">type</span> f |xargs rm -f;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;delete expire back data!&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="添加定时任务-每天4：00执行备份"><a href="#添加定时任务-每天4：00执行备份" class="headerlink" title="添加定时任务 每天4：00执行备份"></a>添加定时任务 每天4：00执行备份</h4><p>打开任务编辑器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>
<p>输入如下命令 00 04 * * * 每天凌晨4点执行 do-backup.sh 并输出日志至 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#backup.log</span></span><br><span class="line">00 04 * * * /home/apps/svr/gogs/do-backup.sh &gt;&gt; /home/apps/svr/gogs/backup.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h3 id="客户端公钥配置与添加"><a href="#客户端公钥配置与添加" class="headerlink" title="客户端公钥配置与添加"></a>客户端公钥配置与添加</h3><h4 id="Git安装完之后，需做最后一步配置。打开git-bash，分别执行以下两句命令"><a href="#Git安装完之后，需做最后一步配置。打开git-bash，分别执行以下两句命令" class="headerlink" title="Git安装完之后，需做最后一步配置。打开git bash，分别执行以下两句命令"></a>Git安装完之后，需做最后一步配置。打开git bash，分别执行以下两句命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<h4 id="git-自动记住用户和密码操作"><a href="#git-自动记住用户和密码操作" class="headerlink" title="git 自动记住用户和密码操作"></a>git 自动记住用户和密码操作</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure>
<h3 id="SSH公钥创建"><a href="#SSH公钥创建" class="headerlink" title="SSH公钥创建"></a>SSH公钥创建</h3><p>1、打开<code>git bash</code><br>2、执行生成公钥和私钥的命令：<code>ssh-keygen -t rsa</code> 并按回车3下<br>3、执行查看公钥的命令：<code>cat ~/.ssh/id_rsa.pub </code><br>4、拷贝id_rsa.pub 内容至至服务<code>~~/.ssh/authorized_keys</code> 中</p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>文件内容搜索以及查看</title>
    <url>/2018/01/12/%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E6%90%9C%E7%B4%A2%E4%BB%A5%E5%8F%8A%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<blockquote>
<p>linux 命令推荐学习地址<br><span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29tL2xpbnV4Lw==" title="http://www.runoob.com/linux/">http://www.runoob.com/linux/<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL21hbi5saW51eGRlLm5ldC8=" title="http://man.linuxde.net/">http://man.linuxde.net/<i class="fa fa-external-link"></i></span></p>
</blockquote>
<p>工具推荐:</p>
<ul>
<li><code>awk</code>,<code>ag</code>,<code>ack</code>,<code>grep</code>,<code>cut</code>,</li>
<li><code>cat</code>,<code>more</code>,<code>less</code>,<code>tail</code>,<code>head</code>,<code>wc</code>,<code>cut</code></li>
</ul>
<h2 id="常用总结"><a href="#常用总结" class="headerlink" title="常用总结"></a>常用总结</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在当前目录下查找包含`java`字符串的方法</span></span><br><span class="line">grep -rni <span class="string">&quot;java&quot;</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 动态读取最后10行</span></span><br><span class="line">tail -f file</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="超级工具ACK"><a href="#超级工具ACK" class="headerlink" title="超级工具ACK"></a>超级工具ACK</h2><h3 id="linux下安装"><a href="#linux下安装" class="headerlink" title="linux下安装"></a>linux下安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl https:&#x2F;&#x2F;beyondgrep.com&#x2F;ack-2.22-single-file &gt; ~&#x2F;bin&#x2F;ack &amp;&amp; chmod 0755 ~&#x2F;bin&#x2F;ack</span><br></pre></td></tr></table></figure>

<h3 id="windows安装-1"><a href="#windows安装-1" class="headerlink" title="windows安装(1)"></a>windows安装(1)</h3><p>使用choclatey安装</p>
<h3 id="windows安装-2"><a href="#windows安装-2" class="headerlink" title="windows安装(2)"></a>windows安装(2)</h3><p>首先需要安装<code>perl </code><br>下载地址：<span class="exturl" data-url="aHR0cDovL3N0cmF3YmVycnlwZXJsLmNvbS8=" title="http://strawberryperl.com/">http://strawberryperl.com/ <i class="fa fa-external-link"></i></span><br>下载成功后直接安装</p>
<p>安装ack模块<br>在所有程序中打开<code>Perl (command line)</code>输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cpan App:Ack</span><br></pre></td></tr></table></figure>
<p>通过cpan模块来下载、测试、安装ack模块，可能会出现安装失败。<br>强制安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cpan -f App:Ack</span><br></pre></td></tr></table></figure>

<p>安装后输入<code>ack –version</code>显示版本即安装成功！</p>
<h2 id="查找文件含有某字符串的所有文件-grep"><a href="#查找文件含有某字符串的所有文件-grep" class="headerlink" title="查找文件含有某字符串的所有文件 grep"></a>查找文件含有某字符串的所有文件 grep</h2><p>在当前目录下查找包含<code>java</code>字符串的方法</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">grep -rni <span class="string">&quot;java&quot;</span> *</span><br></pre></td></tr></table></figure>



<p>常用示例</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查找该目录下所有包含java 的文件 递归+行号+不区分大小写</span></span><br><span class="line">grep -rni <span class="string">&quot;java&quot;</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有不包含`#`的行 </span></span><br><span class="line">grep -v <span class="string">&quot;#&quot;</span> /etc/apache2/sites-available/default-ssl </span><br><span class="line"></span><br><span class="line"><span class="comment">#查找mp3文件 包含`JayZ`不包含`remix`</span></span><br><span class="line">find . -name <span class="string">&quot;.mp3&quot;</span> | grep -i JayZ | grep -vi <span class="string">&quot;remix&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看ifconfig输出结果中带有inet的前后两行</span></span><br><span class="line">ifconfig | grep -C 2 inet</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看inet6出现次数</span></span><br><span class="line">ifconfig | grep -c inet6 </span><br><span class="line"></span><br><span class="line"><span class="comment">#以单词为单位 精确匹配RUNNING</span></span><br><span class="line">sudo ifconfig | grep -w <span class="string">&quot;RUNNING&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查找压缩文件</span></span><br><span class="line">zgrep -i error /var/<span class="built_in">log</span>/syslog.2.gz </span><br></pre></td></tr></table></figure>



<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>*</code></td>
<td><strong>表示当前目录所有文件，也可以是某个文件名</strong></td>
</tr>
<tr>
<td><code>-r</code></td>
<td><strong>递归查找</strong></td>
</tr>
<tr>
<td><code>-n</code></td>
<td><strong>显示行号</strong></td>
</tr>
<tr>
<td><code>-i</code></td>
<td><strong>忽略大小写(只适用于单字符)</strong></td>
</tr>
<tr>
<td><code>-F</code></td>
<td><strong>不使用正则表达式</strong></td>
</tr>
<tr>
<td><code>-A 数字N</code></td>
<td>找到所有的匹配行，并显示匹配行后N行</td>
</tr>
<tr>
<td><code>-B 数字N</code></td>
<td>找到所有的匹配行，并显示匹配行前面<code>N</code>行</td>
</tr>
<tr>
<td><code>-C 数字N</code></td>
<td>找到所有的匹配行，并显示匹配前后<code>N</code>行</td>
</tr>
<tr>
<td><code>-f fileA fileB</code></td>
<td>不使用正则表达式 把<code>fileA</code>作为参数在<code>fileB</code>中查找</td>
</tr>
<tr>
<td><code>-m</code></td>
<td>数字N    最多匹配<code>N</code>个后停止</td>
</tr>
<tr>
<td><code>-c</code></td>
<td>只输出匹配行的计数</td>
</tr>
<tr>
<td><code>-h</code></td>
<td>查询多文件时不显示文件名</td>
</tr>
<tr>
<td><code>-l</code></td>
<td>查询多文件时只输出包含匹配字符的文件名</td>
</tr>
<tr>
<td><code>-s</code></td>
<td>不显示不存在或无匹配文本的错误信息</td>
</tr>
<tr>
<td><code>-v</code></td>
<td>显示不包含匹配文本的所有行</td>
</tr>
<tr>
<td><code>-a</code></td>
<td>将<code>binary</code>文件以<code>text</code>文件的方式搜寻数据</td>
</tr>
</tbody></table>
<p>正则表达式提示</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>\</td>
<td>忽略正则表达式中特殊字符的原有含义</td>
</tr>
<tr>
<td><code>^</code></td>
<td>匹配正则表达式的开始行</td>
</tr>
<tr>
<td><code>$</code></td>
<td>匹配正则表达式的结束行</td>
</tr>
<tr>
<td><code>\&lt;</code></td>
<td><strong>从匹配正则表达 式的行开始</strong></td>
</tr>
<tr>
<td><code>\&gt;</code></td>
<td><strong>到匹配正则表达式的行结束</strong></td>
</tr>
<tr>
<td><code>[ ]</code></td>
<td>单个字符，如<code>[A]</code>即<code>A</code>符合要求</td>
</tr>
<tr>
<td><code>[ - ]</code></td>
<td>范围，如<code>[A-Z]</code>,即<code>A</code>、<code>B</code>、<code>C</code>一直到Z都符合要求</td>
</tr>
<tr>
<td><code>.</code></td>
<td>所有的单个字符</td>
</tr>
<tr>
<td><code>*</code></td>
<td>有字符，长度可以为<code>0</code></td>
</tr>
</tbody></table>
<h2 id="快速查看文件"><a href="#快速查看文件" class="headerlink" title="快速查看文件"></a>快速查看文件</h2><h3 id="用cat-查看文件"><a href="#用cat-查看文件" class="headerlink" title="用cat 查看文件"></a>用<code>cat</code> 查看文件</h3><p>cat [选项] [文件]…</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>意义</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-v</code></td>
<td>–show-nonprinting</td>
<td><strong>使用<code>^</code>和<code>M-</code>引用，除了<code>LFD</code>和<code>TAB</code>之外</strong></td>
</tr>
<tr>
<td><code>-E</code></td>
<td>–show-ends</td>
<td><strong>在每行结束处显示<code>$</code></strong></td>
</tr>
<tr>
<td><code>-T</code></td>
<td>–show-tabs</td>
<td><strong>将跳格字符显示为<code>^I</code></strong></td>
</tr>
<tr>
<td><code>-A</code></td>
<td>–show-all</td>
<td>等价于 <code>-vET</code></td>
</tr>
<tr>
<td><code>-e</code></td>
<td></td>
<td>等价于 <code>-vE</code></td>
</tr>
<tr>
<td><code>-t</code></td>
<td></td>
<td>等价于 <code>-vT</code></td>
</tr>
<tr>
<td><code>-b</code></td>
<td>–number-nonblank</td>
<td>对非空输出行编号</td>
</tr>
<tr>
<td><code>-n</code></td>
<td>–number</td>
<td>对输出的所有行编号</td>
</tr>
<tr>
<td><code>-s</code></td>
<td>–squeeze-blank</td>
<td>不输出多行空行</td>
</tr>
<tr>
<td><code>-u</code></td>
<td></td>
<td>(被忽略)</td>
</tr>
<tr>
<td></td>
<td>–help</td>
<td>显示此帮助信息并离</td>
</tr>
</tbody></table>
<p>cat使用例子</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#最简单的查看文件</span></span><br><span class="line">cat abcd.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#用cat查看多个文件</span></span><br><span class="line"> cat /etc/fstab /etc/profile </span><br><span class="line"></span><br><span class="line"><span class="comment">#对于超大文件可以通过管道传送给more</span></span><br><span class="line">cat /etc/fstab /etc/profile | more </span><br><span class="line"></span><br><span class="line"><span class="comment">#用cat新建</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat &gt; linuxsir.org.txt &lt;&lt; EOF</span></span><br><span class="line">&gt; f</span><br><span class="line">&gt; f</span><br><span class="line">&gt; EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#用cat追加</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat &gt;&gt; linuxsir.org.txt &lt;&lt; EOF</span></span><br><span class="line">&gt; 1</span><br><span class="line">&gt; 2</span><br><span class="line">&gt; EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用cat &gt; 多个文件合并</span></span><br><span class="line">cat sir01.txt sir02.txt sir03.txt &gt; sir04.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用cat &gt;&gt; 多个文件追加到已存在的文件</span></span><br><span class="line">cat sir01.txt sir02.txt sir03.txt &gt;&gt; sir04.txt</span><br></pre></td></tr></table></figure>

<h3 id="用-more-查看文件"><a href="#用-more-查看文件" class="headerlink" title="用 more 查看文件"></a>用 <code>more</code> 查看文件</h3><p>more [参数选项] [文件]</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>+</code>num</td>
<td>从第<code>num</code>行开始显示</td>
</tr>
<tr>
<td><code>-</code>num</td>
<td>定义屏幕大小，为<code>num</code>行</td>
</tr>
<tr>
<td><code>+/</code>pattern</td>
<td>从<code>pattern</code>前两行开始显示</td>
</tr>
<tr>
<td><code>-c</code></td>
<td>从顶部清屏然后显示</td>
</tr>
<tr>
<td>-<code>d</code></td>
<td>提示<code>Press space to continue, &#39;q&#39; to quit.</code>（按空格键继续，按q键退出），禁用响铃功能</td>
</tr>
<tr>
<td><code>-l</code></td>
<td>忽略<code>Ctrl</code>+<code>l </code>（换页）字符</td>
</tr>
<tr>
<td><code>-p</code></td>
<td>通过清除窗口而不是滚屏来对文件进行换页。和-c参数有点相似</td>
</tr>
<tr>
<td><code>-s</code></td>
<td>把连续的多个空行显示为一行</td>
</tr>
<tr>
<td><code>-u</code></td>
<td>把文件内容中的下划线去掉</td>
</tr>
</tbody></table>
<p>动作指令</p>
<table>
<thead>
<tr>
<th>指令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>Enter</code></td>
<td>向下n行，需要定义，默认为<code>1</code>行</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>f</code></td>
<td>向下滚动一屏</td>
</tr>
<tr>
<td><code>空格键</code></td>
<td>向下滚动一屏</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>b</code></td>
<td>返回上一屏</td>
</tr>
<tr>
<td><code>=</code></td>
<td>输出当前行的行号</td>
</tr>
<tr>
<td><code>:f</code></td>
<td>输出文件名和当前行的行号</td>
</tr>
<tr>
<td><code>v</code></td>
<td>调用vi编辑器</td>
</tr>
<tr>
<td><code>!</code>+<code>命令</code></td>
<td>调用<code>Shell</code>，并执行命令</td>
</tr>
<tr>
<td><code>q</code></td>
<td>退出<code>more</code>当我们查看某一文件时，想调用<code>vi</code>来编辑它，不要忘记了<code>v</code>动作指令，这是比较方便的</td>
</tr>
</tbody></table>
<p>使用例子</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#比如我们列一个目录下的文件，由于内容太多，我们应该学会用more来分页显示。这得和管道 | 结合起来，比如： </span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls -l /etc |more </span></span><br></pre></td></tr></table></figure>

<h3 id="less"><a href="#less" class="headerlink" title="less"></a><code>less</code></h3><p>less [参数] 文件 </p>
<table>
<thead>
<tr>
<th>指令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-c</code></td>
<td>从顶部（从上到下）刷新屏幕，并显示文件内容。而不是通过底部滚动完成刷新</td>
</tr>
<tr>
<td><code>-f</code></td>
<td>强制打开文件，二进制文件显示时，不提示警告</td>
</tr>
<tr>
<td><code>-i</code></td>
<td>搜索时忽略大小写,除非搜索串中包含大写字母</td>
</tr>
<tr>
<td><code>-I</code></td>
<td>搜索时忽略大小写,除非搜索串中包含小写字母</td>
</tr>
<tr>
<td><code>-m</code></td>
<td>显示读取文件的百分比</td>
</tr>
<tr>
<td><code>-M</code></td>
<td>显法读取文件的百分比、行号及总行数</td>
</tr>
<tr>
<td><code>-N</code></td>
<td>在每行前输出行号</td>
</tr>
<tr>
<td><code>-p</code></td>
<td>pattern 搜索pattern,比如在/etc/profile搜索单词<code>MAIL</code>，就用 <code>less -p MAIL /etc/profile </code></td>
</tr>
<tr>
<td><code>-s</code></td>
<td>把连续多个空白行作为一个空白行显示</td>
</tr>
<tr>
<td><code>-Q</code></td>
<td>在终端下不响铃</td>
</tr>
</tbody></table>
<p>动作指令</p>
<table>
<thead>
<tr>
<th>指令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>回车键</td>
<td>向下移动一行</td>
</tr>
<tr>
<td><code>y </code></td>
<td>向上移动一行</td>
</tr>
<tr>
<td><code>空格键</code></td>
<td>向下滚动一屏</td>
</tr>
<tr>
<td><code>b</code></td>
<td>向上滚动一屏</td>
</tr>
<tr>
<td><code>d</code></td>
<td>向下滚动半屏</td>
</tr>
<tr>
<td><code>h</code></td>
<td>less的帮助</td>
</tr>
<tr>
<td><code>u</code></td>
<td>向上洋动半屏</td>
</tr>
<tr>
<td><code>w</code></td>
<td>可以指定显示哪行开始显示，是从指定数字的下一行显示</td>
</tr>
<tr>
<td><code>g</code></td>
<td>跳到第一行</td>
</tr>
<tr>
<td><code>G</code></td>
<td>跳到最后一行</td>
</tr>
<tr>
<td><code>p</code></td>
<td><code>n%</code> 跳到<code>n%</code>，比如 <code>10%</code>，也就是说比整个文件内容的<code>10%</code>处开始显示</td>
</tr>
<tr>
<td><code>/</code>pattern</td>
<td>搜索<code>pattern</code> ，比如 <code>/MAIL</code>表示在文件中搜索<code>MAIL</code>单词</td>
</tr>
<tr>
<td><code>v</code></td>
<td>调用<code>vi</code>编辑器</td>
</tr>
<tr>
<td><code>q</code></td>
<td>退出<code>less</code></td>
</tr>
<tr>
<td><code>!</code>command</td>
<td>调用<code>SHELL</code>，可以运行命令,比如<code>!ls</code> 显示当前列当前目录下的所有文件</td>
</tr>
</tbody></table>
<p>使用例子</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#我们在显示/etc/profile的内容时，让其显示行号：</span></span><br><span class="line">less -N    /etc/profile </span><br></pre></td></tr></table></figure>

<h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a><code>tail</code></h3><table>
<thead>
<tr>
<th>指令</th>
<th>意义</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-c&lt;N&gt;</code></td>
<td><code>——bytes=&lt;N&gt;</code></td>
<td>输出文件尾部的N（N为整数）个字节内容</td>
</tr>
<tr>
<td><code>-f&lt;name/descriptor&gt;</code></td>
<td><code>--follow&lt;nameldescript&gt;</code></td>
<td>显示文件最新追加的内容。<code>name</code>表示以文件名的方式监视文件的变化。<code>-f</code>与<code>-fdescriptor</code>等效</td>
</tr>
<tr>
<td><code>--pid=&lt;进程号&gt;</code></td>
<td><code>-f</code>选项连用，当指定的进程号的进程终止后，自动退出<code>tail</code>命令</td>
<td></td>
</tr>
<tr>
<td><code>-s</code>&lt;秒数&gt;</td>
<td><code>--sleep-interal=</code>&lt;秒数&gt;</td>
<td>与<code>-f</code>选项连用,指定监视文件变化时间隔的秒数</td>
</tr>
<tr>
<td><code>--retry</code></td>
<td></td>
<td>即是在<code>tail</code>命令启动时，文件不可访问或者文件稍后变得不可访问，都始终尝试打开文件。使用此选项时需要与选项<code>--follow=name</code>连用</td>
</tr>
<tr>
<td><code>-F</code></td>
<td></td>
<td>与选项<code>-follow=name</code>和<code>--retry</code>连用时功能相同</td>
</tr>
<tr>
<td><code>-n&lt;N&gt;</code></td>
<td><code>--line=&lt;N&gt;</code></td>
<td>输出文件的尾部N(<code>N</code>位数字)行内容。</td>
</tr>
<tr>
<td><code>-q</code></td>
<td><code>--quie</code> <br> <code>--silent</code></td>
<td>当有多个文件参数时，不输出各个文件名</td>
</tr>
<tr>
<td><code>-v</code></td>
<td><code>-verbose</code></td>
<td>当有多个文件参数时，总是输出各个文件名</td>
</tr>
<tr>
<td><code>--help</code></td>
<td></td>
<td>显示指令的帮助信息</td>
</tr>
<tr>
<td><code>--version</code></td>
<td></td>
<td>显示指令的版本信息</td>
</tr>
</tbody></table>
<p>使用示例</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#显示文件file的最后10行</span></span><br><span class="line">tail file </span><br><span class="line"></span><br><span class="line"><span class="comment">#显示文件file的内容，从第20行至文件末尾</span></span><br><span class="line">tail +20 file </span><br><span class="line"></span><br><span class="line"><span class="comment">#显示文件file的最后10个字符</span></span><br><span class="line">tail -c 10 file </span><br><span class="line"></span><br><span class="line"><span class="comment">#动态读取最后10行</span></span><br><span class="line">tail -f file</span><br></pre></td></tr></table></figure>

<h3 id="head"><a href="#head" class="headerlink" title="head"></a><code>head</code></h3><p>head(选项)(参数)</p>
<table>
<thead>
<tr>
<th>指令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-n</code>&lt;数字&gt;</td>
<td>指定显示头部内容的行数</td>
</tr>
<tr>
<td><code>-c</code>&lt;字符数&gt;</td>
<td>指定显示头部内容的字符数</td>
</tr>
<tr>
<td><code>-v</code></td>
<td>总是显示文件名的头信息</td>
</tr>
<tr>
<td><code>-q</code></td>
<td>不显示文件名的头信息</td>
</tr>
</tbody></table>
<p>使用示例</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># t.txt文件内容</span></span><br><span class="line">cat t.txt   </span><br><span class="line">Apple  </span><br><span class="line">Banana  </span><br><span class="line">Cherry  </span><br><span class="line">Durian  </span><br><span class="line">Fig  </span><br><span class="line">Grape  </span><br><span class="line">Haw  </span><br><span class="line">Jujube  </span><br><span class="line">Kumquat  </span><br><span class="line">Lemon  </span><br><span class="line">Mango  </span><br><span class="line">Orange  </span><br><span class="line">Peach  </span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">cat t.txt |wc  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认显示前10行</span></span><br><span class="line">head t.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示前7个字节（含回车换行）     </span></span><br><span class="line">head -c7 t.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示前2行  </span></span><br><span class="line">head -n2 t.txt   </span><br><span class="line">      </span><br><span class="line"><span class="comment">#只显示除了最后87个字节以外的内容（即前7个字节）  </span></span><br><span class="line">head -c-87 t.txt  </span><br><span class="line"></span><br><span class="line"><span class="comment">#只显示除了最后10行以外的内容（即前3行）  </span></span><br><span class="line">head -n-10 t.txt   </span><br></pre></td></tr></table></figure>

<h3 id="wc"><a href="#wc" class="headerlink" title="wc"></a><code>wc</code></h3><p>wc [-clw][–help][–version][文件…]</p>
<table>
<thead>
<tr>
<th>指令</th>
<th>意义</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>-c</code></td>
<td><code>--bytes</code><br><code>--chars</code></td>
<td>只显示<code>Bytes</code>数</td>
</tr>
<tr>
<td><code>-l</code></td>
<td><code>--lines</code> 只显示行数</td>
<td></td>
</tr>
<tr>
<td><code>-w</code></td>
<td><code>--words</code> 只显示字数</td>
<td></td>
</tr>
<tr>
<td><code>-L</code></td>
<td></td>
<td>打印最长行的长度</td>
</tr>
<tr>
<td><code>--help</code></td>
<td></td>
<td>在线帮助</td>
</tr>
<tr>
<td><code>--version</code></td>
<td></td>
<td>显示版本信息</td>
</tr>
</tbody></table>
<p>使用示例</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看进程 的 件的行数 单词数9 字节数598 </span></span><br><span class="line">[root@localhost ~]<span class="comment"># ps -ef | wc </span></span><br><span class="line">    224    2124   19521</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>新系统安装软件汇总</title>
    <url>/2018/01/04/%E6%96%B0%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<ol>
<li>sublime</li>
<li>idea</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v" title="https://code.visualstudio.com/">VS Code<i class="fa fa-external-link"></i></span></li>
<li>python2 3共存 并修改源</li>
<li>maven 修改源</li>
<li>nodejs 修改源</li>
<li>(Linux)修改yum源</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>装机</tag>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>查看class版本方法</title>
    <url>/2018/06/14/%E6%9F%A5%E7%9C%8Bclass%E7%89%88%E6%9C%AC%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="使用工具查看"><a href="#使用工具查看" class="headerlink" title="使用工具查看"></a>使用工具查看</h2><ul>
<li>editplus</li>
<li>sublime</li>
</ul>
<h2 id="使用命令查看"><a href="#使用命令查看" class="headerlink" title="使用命令查看"></a>使用命令查看</h2><ul>
<li>使用<code>vim</code>打开需要查看的文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim -b SparkUtils.class</span><br></pre></td></tr></table></figure>
<img src="/2018/06/14/%E6%9F%A5%E7%9C%8Bclass%E7%89%88%E6%9C%AC%E6%96%B9%E6%B3%95/image-36.png" alt="upload successful"></li>
<li>将当前文本转化为16进制格式<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:%!xxd</span><br></pre></td></tr></table></figure>
<img src="/2018/06/14/%E6%9F%A5%E7%9C%8Bclass%E7%89%88%E6%9C%AC%E6%96%B9%E6%B3%95/image-1.png" alt="upload successful"></li>
<li>完成<br><img src="/2018/06/14/%E6%9F%A5%E7%9C%8Bclass%E7%89%88%E6%9C%AC%E6%96%B9%E6%B3%95/image-37.png" alt="upload successful"></li>
<li>如果在16进制下修改了文件,不要保存,要使用以下命令再切换成文本状态格式再保存.<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:%!xxd -r</span><br></pre></td></tr></table></figure>

</li>
</ul>
<a id="more"></a>

<h2 id="class版本分析"><a href="#class版本分析" class="headerlink" title="class版本分析"></a>class版本分析</h2><p><img src="/2018/06/14/%E6%9F%A5%E7%9C%8Bclass%E7%89%88%E6%9C%AC%E6%96%B9%E6%B3%95/image-35.png" alt="upload successful"></p>
<p>这里可以很快的得出结论,这个class是JDK1.7编译的<br>以下给出所有对应数字</p>
<table>
<thead>
<tr>
<th>版本号</th>
<th>十进制</th>
<th>对应JDK版本号</th>
</tr>
</thead>
<tbody><tr>
<td>34</td>
<td>52</td>
<td>JDK1.8</td>
</tr>
<tr>
<td>33</td>
<td>51</td>
<td>JDK1.7</td>
</tr>
<tr>
<td>32</td>
<td>50</td>
<td>JDK1.6</td>
</tr>
<tr>
<td>31</td>
<td>49</td>
<td>JDK1.5</td>
</tr>
<tr>
<td>30</td>
<td>48</td>
<td>JDK1.4</td>
</tr>
<tr>
<td>2F</td>
<td>47</td>
<td>JDK1.3</td>
</tr>
<tr>
<td>2E</td>
<td>46</td>
<td>JDK1.2</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>class</tag>
      </tags>
  </entry>
  <entry>
    <title>测试工具</title>
    <url>/2020/02/09/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="MOCK工具"><a href="#MOCK工具" class="headerlink" title="MOCK工具"></a>MOCK工具</h2><h3 id="moco"><a href="#moco" class="headerlink" title="moco"></a>moco</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RyZWFtaGVhZC9tb2Nv" title="https://github.com/dreamhead/moco">https://github.com/dreamhead/moco<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdGFuZ3FpdS9wLzk0OTMxNDcuaHRtbA==" title="https://www.cnblogs.com/tangqiu/p/9493147.html">https://www.cnblogs.com/tangqiu/p/9493147.html<i class="fa fa-external-link"></i></span></p>
<h3 id="wiremock"><a href="#wiremock" class="headerlink" title="wiremock"></a>wiremock</h3><p><span class="exturl" data-url="aHR0cDovL3dpcmVtb2NrLm9yZy8=" title="http://wiremock.org/">http://wiremock.org/<i class="fa fa-external-link"></i></span></p>
<h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><h3 id="postman"><a href="#postman" class="headerlink" title="postman"></a>postman</h3><h3 id="jmeter"><a href="#jmeter" class="headerlink" title="jmeter"></a>jmeter</h3><h3 id="Wireshar"><a href="#Wireshar" class="headerlink" title="Wireshar"></a>Wireshar</h3><h3 id="postwoman"><a href="#postwoman" class="headerlink" title="postwoman"></a>postwoman</h3><h3 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h3><h3 id="Talend-API-Tester"><a href="#Talend-API-Tester" class="headerlink" title="Talend API Tester"></a>Talend API Tester</h3><p>chrome 插件</p>
<h2 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h2><h3 id="ab"><a href="#ab" class="headerlink" title="ab"></a>ab</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlbG91bmdlLmNvbS9kb3dubG9hZC8=" title="https://www.apachelounge.com/download/">https://www.apachelounge.com/download/<i class="fa fa-external-link"></i></span><br>httpd里面带有工具ab</p>
<h3 id="hey-Boom"><a href="#hey-Boom" class="headerlink" title="hey(Boom)"></a>hey(Boom)</h3><p>Boom是一个用Go语言实现的压力测试工具，就是和Apache Bench类似的工具。它提供了一个很有意思的UI，这就是我为什么推荐他的原因了：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Jha3lsbC9ib29t" title="https://github.com/rakyll/boom">https://github.com/rakyll/boom<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Jha3lsbC9oZXk=" title="https://github.com/rakyll/hey">https://github.com/rakyll/hey<i class="fa fa-external-link"></i></span></p>
<h2 id="契约测试"><a href="#契约测试" class="headerlink" title="契约测试"></a>契约测试</h2><h3 id="Pact"><a href="#Pact" class="headerlink" title="Pact"></a>Pact</h3><h3 id="EOLINKER-API-Studio"><a href="#EOLINKER-API-Studio" class="headerlink" title="EOLINKER API Studio"></a>EOLINKER API Studio</h3><h2 id="运维工具"><a href="#运维工具" class="headerlink" title="运维工具"></a>运维工具</h2><h3 id="Fabric"><a href="#Fabric" class="headerlink" title="Fabric"></a>Fabric</h3>]]></content>
  </entry>
  <entry>
    <title>离线docker安装</title>
    <url>/2018/01/04/%E7%A6%BB%E7%BA%BFdocker%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="1-通过阿里云下载docker"><a href="#1-通过阿里云下载docker" class="headerlink" title="1. 通过阿里云下载docker"></a>1. 通过阿里云下载docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://mirrors.aliyun.com/docker-engine/yum/repo/main/centos/7/Packages/</span><br></pre></td></tr></table></figure>
<h2 id="2-上传到linux-解压"><a href="#2-上传到linux-解压" class="headerlink" title="2. 上传到linux 解压"></a>2. 上传到linux 解压</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip -n -d . docker-engine.zip </span><br></pre></td></tr></table></figure>

<h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh docker-*</span><br></pre></td></tr></table></figure>

<h2 id="4-设置开机启动"><a href="#4-设置开机启动" class="headerlink" title="4. 设置开机启动"></a>4. 设置开机启动</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>

<h2 id="5-修改配置文件拉取镜像"><a href="#5-修改配置文件拉取镜像" class="headerlink" title="5. 修改配置文件拉取镜像"></a>5. 修改配置文件拉取镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /etc/docker</span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;192.168.163.128:5000&quot;</span>],</span><br><span class="line">  <span class="string">&quot;insecure-registries&quot;</span>:[<span class="string">&quot;172.30.4.221:5000&quot;</span>,<span class="string">&quot;192.168.163.128:5000&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-重启docker"><a href="#6-重启docker" class="headerlink" title="6.重启docker"></a>6.重启docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h2 id="这里需要注意几个大坑"><a href="#这里需要注意几个大坑" class="headerlink" title="这里需要注意几个大坑"></a>这里需要注意几个<code>大坑</code></h2><ol>
<li><em>IP必须在同一网段</em></li>
<li><em>修改配置文件之后需要重启docker</em> <code>systemctl restart docker</code><br>3）服务端重启之后必须重新启动registry <code>docker start registry</code></li>
<li>使用<code>push</code>上传,使用<code>pull</code>下载</li>
<li>下载完成之后需要tag改回来<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;172.30.4.104:5000&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;insecure-registries&quot;</span>:[<span class="string">&quot;172.30.4.221:5000&quot;</span>,<span class="string">&quot;192.168.163.128:5000&quot;</span>,<span class="string">&quot;172.30.4.104:5000&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>端口占用</title>
    <url>/2018/07/25/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -aon|findstr &quot;4000&quot;	#win</span><br><span class="line">netstat -tln | grep 8080      #linux</span><br></pre></td></tr></table></figure>
</blockquote>
<a id="more"></a>
<h2 id="Windows解决方案"><a href="#Windows解决方案" class="headerlink" title="Windows解决方案"></a>Windows解决方案</h2><ol>
<li><p>查看占用端口的<code>pid</code>，这里查看端口为<code>4000</code>,得到了<code>pid</code>为<code>4108</code></p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">netstat -aon|<span class="built_in">findstr</span> &quot;<span class="number">4000</span>&quot;	</span><br><span class="line"></span><br><span class="line">  TCP    <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>         <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>:<span class="number">0</span>              LISTENING       <span class="number">2044</span></span><br><span class="line">  TCP    <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>         <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">14863</span>        CLOSE_WAIT      <span class="number">2044</span></span><br><span class="line">  TCP    <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">14863</span>        <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>         FIN_WAIT_2      <span class="number">4108</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>查看<code>pid</code>为<code>4108</code>的程序，可以看到这里是360浏览器占用了4000</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">tasklist|<span class="built_in">findstr</span> &quot;<span class="number">4108</span>&quot;</span><br><span class="line"></span><br><span class="line">  <span class="number">360</span>se.exe                     <span class="number">4108</span> Console                    <span class="number">1</span>    <span class="number">241</span>,<span class="number">484</span> K</span><br></pre></td></tr></table></figure>
</li>
<li><p>杀死被占用的程序</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">taskkill</span> /f /t /im <span class="number">360</span>se.exe</span><br><span class="line"></span><br><span class="line">  成功: 已终止 PID <span class="number">6848</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  错误: 无法终止 PID <span class="number">6952</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  原因: 拒绝访问。</span><br><span class="line">  成功: 已终止 PID <span class="number">6916</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">5004</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">8108</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">7984</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">9816</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">5716</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">4116</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">1260</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">7904</span> (属于 PID <span class="number">4108</span> 子进程)的进程。</span><br><span class="line">  成功: 已终止 PID <span class="number">4108</span> (属于 PID <span class="number">4664</span> 子进程)的进程。</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="Linux解决方案"><a href="#Linux解决方案" class="headerlink" title="Linux解决方案"></a>Linux解决方案</h2><ol>
<li><p>查看端口使用情况</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -tln | grep 8080</span><br><span class="line"></span><br><span class="line">  tcp6       0      0:::8080                 :::*                    LISTEN </span><br></pre></td></tr></table></figure>
</li>
<li><p>查看端口属于哪个程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i :8080</span><br><span class="line"></span><br><span class="line">  COMMAND  PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">  java    2068 root   48u  IPv6  32752      0t0  TCP *:webcache (LISTEN)</span><br></pre></td></tr></table></figure>
</li>
<li><p>杀掉占用端口的进程</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 2068</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义注解使用SpEL表达式检查并设置Bean默认值</title>
    <url>/2020/03/13/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A3%80%E6%9F%A5%E5%B9%B6%E8%AE%BE%E7%BD%AEBean%E9%BB%98%E8%AE%A4%E5%80%BC/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>判断方法返回值是否为null<ul>
<li>为null时 <ul>
<li><code>@DefaultIfNull(true)</code>: 返回默认实体，需要搭配<code>@DefaultIfNullField</code>使用</li>
<li><code>@DefaultIfNull()</code>:返回使用空构造器创建的对象    </li>
</ul>
</li>
<li>不null时 <ul>
<li><code>@DefaultIfNull(true)</code>: 逐一判断属性属性为空则返回默认值，需要搭配 <code>@DefaultIfNullField</code> 使用 </li>
<li><code>@DefaultIfNull()</code>:不做任何处理</li>
</ul>
</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="Mybatis解决方法"><a href="#Mybatis解决方法" class="headerlink" title="Mybatis解决方法"></a>Mybatis解决方法</h2><h3 id="使用IFNULL"><a href="#使用IFNULL" class="headerlink" title="使用IFNULL"></a>使用<code>IFNULL</code></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(<span class="keyword">name</span>,<span class="string">&#x27;jack&#x27;</span>), <span class="keyword">IFNULL</span>(age,<span class="number">0</span>) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<h3 id="重写mybatis方法"><a href="#重写mybatis方法" class="headerlink" title="重写mybatis方法"></a>重写mybatis方法</h3><h2 id="通用解决方法"><a href="#通用解决方法" class="headerlink" title="通用解决方法"></a>通用解决方法</h2><h3 id="SPEL表达式解析类"><a href="#SPEL表达式解析类" class="headerlink" title="SPEL表达式解析类"></a>SPEL表达式解析类</h3><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy56aHllYS5jb20vMjAxOS8xMS8yNy9zcHJpbmdib290LWJhc2UtMDQtdXNlLXNwZWwuaHRtbA==" title="http://www.zhyea.com/2019/11/27/springboot-base-04-use-spel.html">http://www.zhyea.com/2019/11/27/springboot-base-04-use-spel.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SPEL表达式工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.ObjectUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.Expression;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.ExpressionParser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.spel.standard.SpelExpressionParser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpElParser</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expr spel表达式</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">parse</span><span class="params">(String expr)</span> </span>&#123;</span><br><span class="line">        ExpressionParser expressionParser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">        Expression expression = expressionParser.parseExpression(expr);</span><br><span class="line">        <span class="keyword">return</span> (T) expression.getValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expr spel表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 返回值类型</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">parse</span><span class="params">(String expr, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        ExpressionParser expressionParser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">        Expression expression = expressionParser.parseExpression(expr);</span><br><span class="line">        <span class="keyword">return</span> expression.getValue(clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SpElParser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer intValue = SpElParser.parse(<span class="string">&quot;123&quot;</span>,Integer.class);</span><br><span class="line">        String  strValue = SpElParser.parse(<span class="string">&quot;123&quot;</span>,String.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="自定义属性注解-DefaultIfNullField"><a href="#自定义属性注解-DefaultIfNullField" class="headerlink" title="自定义属性注解 @DefaultIfNullField"></a>自定义属性注解 @DefaultIfNullField</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> DefaultIfNullField &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="自定义扫描注解-DefaultIfNull"><a href="#自定义扫描注解-DefaultIfNull" class="headerlink" title="自定义扫描注解 @DefaultIfNull"></a>自定义扫描注解 @DefaultIfNull</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> DefaultIfNull &#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 是否需要判断对象的属性，并填充默认值</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">chekField</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="工具类实现"><a href="#工具类实现" class="headerlink" title="工具类实现"></a>工具类实现</h3><p>解析注解核心方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.Expression;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.ExpressionParser;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.spel.standard.SpelExpressionParser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在AOP时使用。根据point获得改方法的返回类型</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> point</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title">getReturnType</span><span class="params">(ProceedingJoinPoint point)</span> <span class="keyword">throws</span> NoSuchMethodException </span>&#123;</span><br><span class="line">        Object[] args = point.getArgs();</span><br><span class="line">        Class&lt;?&gt;[] paramsCls = <span class="keyword">new</span> Class&lt;?&gt;[args.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; args.length; ++i) &#123;</span><br><span class="line">            paramsCls[i] = args[i].getClass();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取方法</span></span><br><span class="line">        Method method = point.getTarget().getClass().getMethod(point.getSignature().getName(), paramsCls);</span><br><span class="line">        <span class="comment">//获取返回值类型</span></span><br><span class="line">        <span class="keyword">return</span> method.getReturnType();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得变量类型，根据类型逐一判断是否为null，</span></span><br><span class="line"><span class="comment">     * 为null时则 使用<span class="doctag">@DefaultIfNullField</span>的值填充</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> t 需要校验的变量</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">defaultValueNullField</span><span class="params">(T t)</span> </span>&#123;</span><br><span class="line">        Class c = t.getClass();</span><br><span class="line">        <span class="comment">// 获取所有变量</span></span><br><span class="line">        Field[] fields = c.getDeclaredFields();</span><br><span class="line">        <span class="comment">// 循环每一个变量</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="comment">// 判断是否存在 DefaultIfNull 注解</span></span><br><span class="line">            <span class="keyword">if</span> (field.isAnnotationPresent(DefaultIfNullField.class)) &#123;</span><br><span class="line">                DefaultIfNullField annotation = field.getAnnotation(DefaultIfNullField.class);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 解除private限制</span></span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                    <span class="comment">// 当属性不为空时跳过</span></span><br><span class="line">                    <span class="keyword">if</span> (field.get(t) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 获取该变量类型</span></span><br><span class="line">                    Class&lt;?&gt; type = field.getType();</span><br><span class="line">                    <span class="comment">// 开始计算EL表达式</span></span><br><span class="line">                    ExpressionParser expressionParser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">                    <span class="comment">// 用注解 DefaultIfNull 的值，来计算EL表达式</span></span><br><span class="line">                    Expression expression = expressionParser.parseExpression(annotation.value());</span><br><span class="line">                    <span class="comment">// 根据类型获取EL表达式的结果,这里会把结果转化为type</span></span><br><span class="line">                    Object value = expression.getValue(type);</span><br><span class="line">                    <span class="comment">// 对属性赋值</span></span><br><span class="line">                    field.set(t, value);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        B1 b1 = <span class="keyword">new</span> B1();</span><br><span class="line">        System.out.println(b1);</span><br><span class="line">        Object aaa = BeanUtils.defaultValueNullField(b1);</span><br><span class="line">        System.out.println(aaa);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="AOP实现-DefaultIfNullAspect"><a href="#AOP实现-DefaultIfNullAspect" class="headerlink" title="AOP实现 DefaultIfNullAspect"></a>AOP实现 DefaultIfNullAspect</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultIfNullAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@SneakyThrows</span></span><br><span class="line">	<span class="meta">@Around(&quot;@annotation(defaultIfNull)&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint point, DefaultIfNull defaultIfNull)</span> </span>&#123;</span><br><span class="line">		Object obj = point.proceed();</span><br><span class="line">		<span class="comment">// 返回对象为NULL，根据返回值类型创建一个。</span></span><br><span class="line">		<span class="keyword">if</span>(obj==<span class="keyword">null</span>)&#123;</span><br><span class="line">			Class returnType = BeanUtils.getReturnType(point);</span><br><span class="line">			<span class="comment">// 重新复制OBJ</span></span><br><span class="line">			obj = returnType.newInstance();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 注解规定校验每个变量</span></span><br><span class="line">		<span class="keyword">if</span>(defaultIfNull.chekField())&#123;</span><br><span class="line">			<span class="keyword">return</span> BeanUtils.defaultValueNullField(obj);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> obj;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="具体使用方法"><a href="#具体使用方法" class="headerlink" title="具体使用方法"></a>具体使用方法</h3><h4 id="测试实体类"><a href="#测试实体类" class="headerlink" title="测试实体类"></a>测试实体类</h4><blockquote>
<p>只需要在属性上<code>@DefaultIfNullField()</code>注解即可。其中value值是<code>SPEL</code>表达式,返回值自动根据属性类型强制转换。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaowuqing.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B1</span> </span>&#123;</span><br><span class="line">    <span class="meta">@DefaultIfNullField(&quot;&#x27;fff&#x27;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String strValue;</span><br><span class="line">    <span class="meta">@DefaultIfNullField(&quot;1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer intValue;</span><br><span class="line">    <span class="meta">@DefaultIfNullField(&quot;0.1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Double doubleValue;</span><br><span class="line">    <span class="meta">@DefaultIfNullField(&quot;new String(&#x27;66666666666&#x27;)&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Object objValue;</span><br><span class="line">    <span class="meta">@DefaultIfNullField(&quot;new java.math.BigDecimal(1.1)&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal bigDecimalValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试service"><a href="#测试service" class="headerlink" title="测试service"></a>测试service</h4><blockquote>
<p>在需要校验的方法上加上@DefaultIfNull注解即可。<br><strong>默认</strong> 当@DefaultIfNull(false) 时，只有返回值为null时，才会自定生成默认值的实体（一般在查询数据库时非常管用）<br>当@DefaultIfNull(true) 时，会逐一判断对象的虽有属性，属性为null时就会用默认值填充</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B1Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> B1 <span class="title">getNullB1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> B1 <span class="title">getFullB1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> B1.builder().bigDecimalValue(<span class="keyword">new</span> BigDecimal(<span class="number">9.1</span>)).doubleValue(<span class="number">9.1</span>).intValue(<span class="number">91</span>).objValue(<span class="keyword">new</span> String(<span class="string">&quot;91&quot;</span>)).strValue(<span class="string">&quot;91&quot;</span>).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DefaultIfNull</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> B1 <span class="title">getNullB1Anno</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DefaultIfNull</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> B1 <span class="title">getFullB1Anno</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> B1.builder().bigDecimalValue(<span class="keyword">new</span> BigDecimal(<span class="number">9.1</span>)).doubleValue(<span class="number">9.1</span>).intValue(<span class="number">91</span>).objValue(<span class="keyword">new</span> String(<span class="string">&quot;91&quot;</span>)).strValue(<span class="string">&quot;91&quot;</span>).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DefaultIfNull(chekField = true)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> B1 <span class="title">getNullB1AnnoTrue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DefaultIfNull</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> B1 <span class="title">getFullB1AnnoTrue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> B1.builder().bigDecimalValue(<span class="keyword">new</span> BigDecimal(<span class="number">9.1</span>)).doubleValue(<span class="number">9.1</span>).intValue(<span class="number">91</span>).objValue(<span class="keyword">new</span> String(<span class="string">&quot;91&quot;</span>)).strValue(<span class="string">&quot;91&quot;</span>).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DefaultIfNull(chekField = true)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> B1 <span class="title">getNullB1AnnoEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> B1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="在controller中使用"><a href="#在controller中使用" class="headerlink" title="在controller中使用"></a>在<code>controller</code>中使用</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/b1&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">b1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(b1Service.getFullB1());</span><br><span class="line">    System.out.println(b1Service.getNullB1());</span><br><span class="line">    System.out.println(b1Service.getFullB1Anno());</span><br><span class="line">    System.out.println(b1Service.getNullB1Anno());</span><br><span class="line">    System.out.println(b1Service.getNullB1AnnoTrue());</span><br><span class="line">    System.out.println(b1Service.getNullB1AnnoTrue());</span><br><span class="line">    System.out.println(b1Service.getNullB1AnnoEmpty());</span><br><span class="line">    <span class="keyword">return</span> SuccessResponseData.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟机安装mac</title>
    <url>/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/</url>
    <content><![CDATA[<h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ol>
<li>unlock207(或者适配vm版本)</li>
<li>vm12pro</li>
<li>OS X 10.11.1(15B42).cdr（mac系统）</li>
</ol>
<h2 id="安装unlock207"><a href="#安装unlock207" class="headerlink" title="安装unlock207"></a>安装unlock207</h2><ol>
<li>安装python2.7</li>
<li>关闭vm所有进程以及服务</li>
<li>使用管理员权限进入目录<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chcp 936</span><br><span class="line">win-install.cmd</span><br></pre></td></tr></table></figure>
出现如下截图表示安装成功<br><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-78.png" alt="upload successful"></li>
</ol>
<h2 id="安装镜像"><a href="#安装镜像" class="headerlink" title="安装镜像"></a>安装镜像</h2><p><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-80.png" alt="upload successful"><br><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-79.png" alt="upload successful"></p>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-81.png" alt="upload successful"></p>
<p>打开vmx文件, 在<code>smc.present = &quot;TRUE&quot;</code>下一行加入<code>smc.version = 0</code><br><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-82.png" alt="upload successful"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-83.png" alt="upload successful"></p>
<p>系统提示没有空间进行安装<br><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-84.png" alt="upload successful"></p>
<p>实用工具 -&gt; 磁盘工具, 抹掉<br><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-85.png" alt="upload successful"></p>
<p>选择刚才抹除的磁盘 继续安装<br><img src="/2018/12/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85mac/image-86.png" alt="upload successful"></p>
]]></content>
      <tags>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO主题设置</title>
    <url>/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQ=" title="https://github.com/theme-next">NEXT<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC8=" title="https://theme-next.org/docs/getting-started/">官方文档<i class="fa fa-external-link"></i></span></p>
</blockquote>
<a id="more"></a>


<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9oYXNhaWsuY29tL3Bvc3RzL2RmZjdlMTFjLmh0bWw=" title="https://hasaik.com/posts/dff7e11c.html">CSS 例子<i class="fa fa-external-link"></i></span></p>
</blockquote>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaW1jencuY29tLw==" title="https://www.imczw.com/">NEXT7 第25小时随想<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9oYXNhaWsuY29tLw==" title="https://hasaik.com/">优秀示例 Xu’s Blog<i class="fa fa-external-link"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly95YW5neWFuZzE4OC5jb2RpbmcubWUvYXJjaGl2ZXMvMzU3NWZhMjMv" title="https://yangyang188.coding.me/archives/3575fa23/">洋洋的小站 HEXO-NexT-V7-Gemini主题优化篇<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly95YW5neWFuZzE4OC5jb2RpbmcubWUvYXJjaGl2ZXMvOWVjZDI5ZjMv" title="https://yangyang188.coding.me/archives/9ecd29f3/">洋洋的小站 HEXO-NexT-V7-Gemini基础建站篇<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly95YW5neWFuZzE4OC5jb2RpbmcubWUvYXJjaGl2ZXMvZTE5OGZiNS8=" title="https://yangyang188.coding.me/archives/e198fb5/">洋洋的小站 HEXO-NexT-V7-Gemini写作技巧篇<i class="fa fa-external-link"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cueGlhb2NvZGVyLmNvbS8yMDE4LzA3LzE1L2hleG8tYmxvZy1vcHRpbWl6aW5nLWd1aWRlLw==" title="https://www.xiaocoder.com/2018/07/15/hexo-blog-optimizing-guide/">使用Hexo搭建博客之优化篇<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cueGlhb2NvZGVyLmNvbS8yMDE4LzA3LzA3L2hleG8tYmxvZy1iYXNpcy1ndWlkZS8=" title="https://www.xiaocoder.com/2018/07/07/hexo-blog-basis-guide/">使用Hexo搭建博客之基础篇<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cueGlhb2NvZGVyLmNvbS8yMDE4LzA3LzE0L2hleG8tYmxvZy1hZHZhbmNlLWd1aWRlLw==" title="https://www.xiaocoder.com/2018/07/14/hexo-blog-advance-guide/">使用Hexo搭建博客之进阶篇<i class="fa fa-external-link"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly96eWgxMDIwLmNvZGluZy5tZS8yMDE5L2hleG8lRTclOUElODRuZXh0JUU0JUI4JUJCJUU5JUEyJTk4JUU3JTlBJTg0JUU2JTlDJTgwJUU2JTk2JUIwJUU0JUJDJTk4JUU1JThDJTk2LTEv" title="https://zyh1020.coding.me/2019/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%9C%80%E6%96%B0%E4%BC%98%E5%8C%96-1/"> 宇轩笔墨 hexo的next主题的最新优化_1<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly96eWgxMDIwLmNvZGluZy5tZS8yMDE5L2hleG8lRTclOUElODRuZXh0JUU0JUI4JUJCJUU5JUEyJTk4JUU3JTlBJTg0JUU2JTlDJTgwJUU2JTk2JUIwJUU0JUJDJTk4JUU1JThDJTk2LTIv" title="https://zyh1020.coding.me/2019/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%9C%80%E6%96%B0%E4%BC%98%E5%8C%96-2/"> 宇轩笔墨 hexo的next主题的最新优化_2<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly96eWgxMDIwLmNvZGluZy5tZS8yMDE5L2hleG8lRTclOUElODRuZXh0JUU0JUI4JUJCJUU5JUEyJTk4JUU3JTlBJTg0JUU2JTlDJTgwJUU2JTk2JUIwJUU0JUJDJTk4JUU1JThDJTk2LTMv" title="https://zyh1020.coding.me/2019/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%9C%80%E6%96%B0%E4%BC%98%E5%8C%96-3/"> 宇轩笔墨 hexo的next主题的最新优化_3<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly96eWgxMDIwLmNvZGluZy5tZS8yMDE5L2hleG8lRTclOUElODRuZXh0JUU0JUI4JUJCJUU5JUEyJTk4JUU3JTlBJTg0JUU2JTlDJTgwJUU2JTk2JUIwJUU0JUJDJTk4JUU1JThDJTk2LTQv" title="https://zyh1020.coding.me/2019/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%9C%80%E6%96%B0%E4%BC%98%E5%8C%96-4/"> 宇轩笔墨 hexo的next主题的最新优化_4<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3NoZW56ZWt1bi5jbi9oZXhvJUU3JTlBJTg0bmV4dCVFNCVCOCVCQiVFOSVBMiU5OCVFNCVCOCVBQSVFNiU4MCVBNyVFNSU4QyU5NiVFOSU4NSU4RCVFNyVCRCVBRSVFNiU5NSU5OSVFNyVBOCU4Qi5odG1s" title="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html">http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<!--more-->

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvY29uZmlndXJhdGlvbiNPdmVycmlkaW5nLVRoZW1lLUNvbmZpZw==" title="https://hexo.io/docs/configuration#Overriding-Theme-Config">Hexo Configuration<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL3B1bGwvNzU3" title="https://github.com/hexojs/hexo/pull/757">Hexo Pull #757<i class="fa fa-external-link"></i></span></li>
</ul>
<h2 id="数据目录及自定义-CSS-的启用方式"><a href="#数据目录及自定义-CSS-的启用方式" class="headerlink" title="数据目录及自定义 CSS 的启用方式"></a>数据目录及自定义 CSS 的启用方式</h2><p>在 <code>hexo/source/_data</code> 目录下新建 <code>next.yml</code> 文件，把 <code>Next</code> 的主题配置文件 <code>next/_config.yml</code> 内容全部复制到 <code>next.yml</code>，然后修改以下位置</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># If false, merge configs from `_data/next.yml` into default configuration (rewrite).</span></span><br><span class="line"><span class="comment"># If true, will fully override default configuration by options from `_data/next.yml` (override). Only for NexT settings.</span></span><br><span class="line"><span class="comment"># And if true, all config from default NexT `_config.yml` must be copied into `next.yml`. Use if you know what you are doing.</span></span><br><span class="line"><span class="comment"># Useful if you want to comment some options from NexT `_config.yml` by `next.yml` without editing default config.</span></span><br><span class="line"><span class="attr">override:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>定义CSS路径</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>

<h2 id="图片兼容普通markdown"><a href="#图片兼容普通markdown" class="headerlink" title="图片兼容普通markdown"></a>图片兼容普通markdown</h2><p>在博客目录下安装 <code>hexo-asset-image</code>插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-asset-image --save </span><br></pre></td></tr></table></figure>

<p>由于<code>HEXO4.0.0</code>版本不在支持所以需要修改修改代码<code>hexo\node_modules\hexo-asset-image\index.js</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">config.post_asset_folder</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> appendLink = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">    <span class="comment">// if not with index.html endpos = link.lastIndexOf(&#x27;.&#x27;) + 1 support hexo-abbrlink</span></span><br><span class="line">    <span class="function"><span class="title">if</span>(<span class="params"><span class="regexp">/.*\/index\.html$/</span>.test(link)</span>)</span> &#123;</span><br><span class="line">      <span class="comment">// when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span></span><br><span class="line">      <span class="comment">// image in xxtitle/ will go to xxtitle/index/</span></span><br><span class="line">      appendLink = <span class="string">&#x27;index/&#x27;</span>;</span><br><span class="line">      <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    link = link.substring(beginPos, endPos) + <span class="string">&#x27;/&#x27;</span> + appendLink;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: <span class="literal">false</span>,</span><br><span class="line">        xmlMode: <span class="literal">false</span>,</span><br><span class="line">        lowerCaseTags: <span class="literal">false</span>,</span><br><span class="line">        decodeEntities: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">          <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">          <span class="keyword">var</span> src = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">          <span class="keyword">if</span>(!(<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src)</span><br><span class="line">            || <span class="regexp">/^\s+\//</span>.test(src)</span><br><span class="line">            || <span class="regexp">/^\s*\/uploads|images\//</span>.test(src))) &#123;</span><br><span class="line">            <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">            <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">            <span class="keyword">var</span> linkArray = link.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">              <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">var</span> srcArray = src.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">              <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">            srcArray.shift();</span><br><span class="line">            src = srcArray.join(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">          <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="built_in">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>修改<code>_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>清空缓存</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure>
<h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200131022336522.png" alt="image-20200131022336522"></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line"><span class="attr">links_settings:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">link</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Links</span></span><br><span class="line">  <span class="comment"># Available values: block | inline</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">inline</span></span><br><span class="line"></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="string">百度一下:</span> <span class="string">http://www.baidu.com</span></span><br><span class="line">  <span class="string">斗鱼直播:</span> <span class="string">https://www.douyu.com/</span></span><br></pre></td></tr></table></figure>
<h2 id="GitHub-Fork-Me"><a href="#GitHub-Fork-Me" class="headerlink" title="GitHub Fork Me"></a>GitHub Fork Me</h2><p><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200130202858879.png" alt="image-20200130202858879 1"><br>修改<code>_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/XWookey</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>

<h2 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h2><p><code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span> <span class="string">eighties</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span></span><br></pre></td></tr></table></figure>


<h2 id="Tag-标签前图标修改"><a href="#Tag-标签前图标修改" class="headerlink" title="Tag 标签前图标修改"></a>Tag 标签前图标修改</h2><p><code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h2><p><code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>


<h2 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next  </span><br></pre></td></tr></table></figure>
<p>下载代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-canvas-nest <span class="built_in">source</span>/lib/canvas-nest</span><br></pre></td></tr></table></figure>
<p>修改配置文件 <code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h2 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带<code>#</code>号的标签</h2><p>具体实现方法</p>
<p>修改模板 <code>/themes/next/layout/_macro/post.swig</code>，搜索  <code>{{ tag_indicate }</code> ，<br>换成<br><code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>
<h2 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h2><p>修改结构文件<code>themes\next\layout\_partials\post\post-copyright.swig</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;%- set ccIcon = &#x27;<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-fw fa-creative-commons&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&#x27; %&#125;</span><br><span class="line">&#123;%- set ccText = theme.creative_commons.license | upper %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-author&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __(&#x27;post.copyright.author&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123;- page.author or author &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-link&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __(&#x27;post.copyright.link&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; next_url(page.permalink, page.permalink, &#123;title: page.title&#125;) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-create-time&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __(&#x27;post.copyright.create_time&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; page.date.format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-update-time&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __(&#x27;post.copyright.update_time&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; page.updated.format(&quot;YYYY-MM-DD HH:mm:ss&quot;) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-copyright-license&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __(&#x27;post.copyright.license_title&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123;- __(&#x27;post.copyright.license_content&#x27;, next_url(ccURL, ccIcon + ccText)) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>
<p>编辑国际化文件<code>themes\next\languages\zh-CN.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">copyright:</span></span><br><span class="line">  <span class="attr">author:</span> <span class="string">本文作者</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">本文链接</span></span><br><span class="line">  <span class="attr">license_title:</span> <span class="string">版权声明</span></span><br><span class="line">  <span class="attr">create_time:</span> <span class="string">发布时间</span></span><br><span class="line">  <span class="attr">update_time:</span> <span class="string">最后更新</span></span><br><span class="line">  <span class="attr">license_content:</span> <span class="string">&quot;本博客所有文章除特别声明外，均采用 %s 许可协议。转载请注明出处！&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="在线编辑工具"><a href="#在线编辑工具" class="headerlink" title="在线编辑工具"></a>在线编辑工具</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure>

<h2 id="创建标签页面"><a href="#创建标签页面" class="headerlink" title="创建标签页面"></a>创建标签页面</h2><p><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200131142405202.png" alt="image-20200131142405202"><br>开启<code>tags</code>页面修改文件<code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br></pre></td></tr></table></figure>

<p>生成<code>tags</code>文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n page tags</span><br></pre></td></tr></table></figure>
<p>编辑生成的文件<code>hexo\source\tags\index.md</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-01-31 13:58:54</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>使用方法：在新建页面时头部增加<code>tags</code><br><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200131142837110.png" alt="image-20200131142837110"></p>
<h2 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h2><p><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200131142619677.png" alt="image-20200131142619677"><br>开启<code>tags</code>页面修改文件<code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br></pre></td></tr></table></figure>

<p>生成<code>tags</code>文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure>
<p>编辑生成的文件<code>hexo\source\tags\index.md</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-01-31 14:19:04</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>使用方法：在新建页面时头部增加<code>categories</code><br><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200131142854885.png" alt="image-20200131142854885"></p>
<h2 id="设置头像-1"><a href="#设置头像-1" class="headerlink" title="设置头像"></a>设置头像</h2><p><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200131143424917.png" alt="image-20200131143424917"></p>
<p>修改文件<code>thems/next/_config.yml</code>,并修改头像<code>hexo\themes\next\source\images\avatar.jpg</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h2 id="设置进度条"><a href="#设置进度条" class="headerlink" title="设置进度条"></a>设置进度条</h2><p>下载进度条样式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes\next\</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-pace <span class="built_in">source</span>/lib/pace</span><br></pre></td></tr></table></figure>
<p>修改配置文件 <code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/HubSpot/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure>

<h2 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>修改配置文件 <code>_config.yml</code> (增加)</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>
<p>修改配置文件 <code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h2 id="阅读次数-本文字数-阅读时长"><a href="#阅读次数-本文字数-阅读时长" class="headerlink" title="阅读次数 本文字数 阅读时长"></a>阅读次数 本文字数 阅读时长</h2><p><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200201004736759.png" alt="image-20200201004736759"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<p>修改配置文件 <code>_config.yml</code> (增加)</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>修改配置文件 <code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure>
<p>修改样式文件<code>hexo\source\_data\styles.styl</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">/***********************************</span></span><br><span class="line"><span class="string">************************************</span></span><br><span class="line">  <span class="string">页脚处使用CSS增加</span> <span class="string">图标的文字描述</span></span><br><span class="line">  <span class="string">或者修改</span> <span class="string">hexo\themes\next\layout\_third-party\statistics\busuanzi-counter.swig</span></span><br><span class="line"><span class="string">************************************</span></span><br><span class="line"><span class="string">************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#busuanzi_value_site_uv:before</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">content:&quot;总访客量:</span> <span class="string">&quot;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">#busuanzi_value_site_pv:before</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  content:&quot;</span><span class="string">总访问量:</span> <span class="string">&quot;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="设置网站的图标Favicon"><a href="#设置网站的图标Favicon" class="headerlink" title="设置网站的图标Favicon"></a>设置网站的图标Favicon</h2><p><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200201120644576.png" alt="image-20200201120644576"></p>
<p>在<span class="exturl" data-url="aHR0cDovL3d3dy5lYXN5aWNvbi5uZXQv" title="http://www.easyicon.net/">EasyIcon<i class="fa fa-external-link"></i></span>中找一张（32*32）的<code>ico</code>图标,或者去别的网站下载或者制作，并将图标名称改为<code>favicon.ico</code>，然后把图标放在<code>/themes/next/source/images</code>里，并且修改主题配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Put your favicon.ico into &#96;hexo-site&#x2F;source&#x2F;&#96; directory.</span><br><span class="line">favicon: &#x2F;favicon.ico</span><br></pre></td></tr></table></figure>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWFzeWljb24ubmV0LzEyMzUyMDktc3BlZWNoX2J1YmJsZV9pY29uLmh0bWw=" title="https://www.easyicon.net/1235209-speech_bubble_icon.html">截图中的图片<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h2 id="添加图片灯箱在根目录下执行以下命令安装相关依赖："><a href="#添加图片灯箱在根目录下执行以下命令安装相关依赖：" class="headerlink" title="添加图片灯箱在根目录下执行以下命令安装相关依赖："></a>添加图片灯箱在根目录下执行以下命令安装相关依赖：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-fancybox3 themes&#x2F;next&#x2F;source&#x2F;lib&#x2F;fancybox</span><br></pre></td></tr></table></figure>
<p>在主题配置文件<code>/source/_data/next.yml</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fancybox: true</span><br></pre></td></tr></table></figure>
<p>刷新浏览器即可生效。</p>
<h2 id="修改链接样式"><a href="#修改链接样式" class="headerlink" title="修改链接样式"></a>修改链接样式</h2><p><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200201165430835.png" alt="image-20200201165430835"></p>
<p>修改主题配置文件<code>/source/_data/next.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">exturl:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>使用方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[百度](https:&#x2F;&#x2F;www.baidu.com&#x2F;)</span><br></pre></td></tr></table></figure>



<h2 id="博客加密配置"><a href="#博客加密配置" class="headerlink" title="博客加密配置"></a>博客加密配置</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01pa2VDb2Rlci9oZXhvLWJsb2ctZW5jcnlwdA==" title="https://github.com/MikeCoder/hexo-blog-encrypt">hexo-blog-encrypt<i class="fa fa-external-link"></i></span><br>安装插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加密插件 </span></span><br><span class="line"><span class="comment"># https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">  <span class="comment">#abstract: 有东西被加密了, 请输入密码查看.</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">您好,</span> <span class="string">这里需要密码.</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tanName</span>, <span class="attr">password:</span> <span class="string">aaa</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">tagName</span>, <span class="attr">password:</span> <span class="string">bbb</span>&#125;</span><br><span class="line">  <span class="attr">template:</span> <span class="string">&lt;div</span> <span class="string">id=&quot;hexo-blog-encrypt&quot;</span> <span class="string">data-wpm=&quot;&#123;&#123;hbeWrongPassMessage&#125;&#125;&quot;</span> <span class="string">data-whm=&quot;&#123;&#123;hbeWrongHashMessage&#125;&#125;&quot;&gt;&lt;div</span> <span class="string">class=&quot;hbe-input-container&quot;&gt;&lt;input</span> <span class="string">type=&quot;password&quot;</span> <span class="string">id=&quot;hbePass&quot;</span> <span class="string">placeholder=&quot;&#123;&#123;hbeMessage&#125;&#125;&quot;</span> <span class="string">/&gt;&lt;label&gt;&#123;&#123;hbeMessage&#125;&#125;&lt;/label&gt;&lt;div</span> <span class="string">class=&quot;bottom-line&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;script</span> <span class="string">id=&quot;hbeData&quot;</span> <span class="string">type=&quot;hbeData&quot;</span> <span class="string">data-hmacdigest=&quot;&#123;&#123;hbeHmacDigest&#125;&#125;&quot;&gt;&#123;&#123;hbeEncryptedData&#125;&#125;&lt;/script&gt;&lt;/div&gt;</span></span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">抱歉,</span> <span class="string">这个密码看着不太对,</span> <span class="string">请再试试.</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">抱歉,</span> <span class="string">这个文章不能被校验,</span> <span class="string">不过您还是能看看解密后的内容.</span></span><br></pre></td></tr></table></figure>

<p>当然也可以在md文件头加入参数</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">encryptAsDiary</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2016-03-30 21:12:21</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">mikemessi</span></span><br><span class="line"><span class="attr">abstract:</span> <span class="string">Here&#x27;s</span> <span class="string">something</span> <span class="string">encrypted,</span> <span class="string">password</span> <span class="string">is</span> <span class="string">required</span> <span class="string">to</span> <span class="string">continue</span> <span class="string">reading.</span></span><br><span class="line"><span class="attr">message:</span> <span class="string">Hey,</span> <span class="string">password</span> <span class="string">is</span> <span class="string">required</span> <span class="string">here.</span></span><br><span class="line"><span class="attr">wrong_pass_message:</span> <span class="string">Oh,</span> <span class="string">this</span> <span class="string">is</span> <span class="string">an</span> <span class="string">invalid</span> <span class="string">password.</span> <span class="string">Check</span> <span class="string">and</span> <span class="string">try</span> <span class="string">again,</span> <span class="string">please.</span></span><br><span class="line"><span class="attr">wrong_hash_message:</span> <span class="string">Oh,</span> <span class="string">these</span> <span class="string">decrypted</span> <span class="string">content</span> <span class="string">cannot</span> <span class="string">be</span> <span class="string">verified,</span> <span class="string">but</span> <span class="string">you</span> <span class="string">can</span> <span class="string">still</span> <span class="string">have</span> <span class="string">a</span> <span class="string">look.</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>参数识别顺序</p>
<div class="note warning">
            <p>post’s front matter &gt; <code>_config.yml</code> (in the root directory) &gt; default</p>
          </div>



<h2 id="随机图片"><a href="#随机图片" class="headerlink" title="随机图片"></a>随机图片</h2><p><span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8xNjAweDkwMD93YWxscGFwZXJz" title="https://source.unsplash.com/random/1600x900?wallpapers">https://source.unsplash.com/random/1600x900?wallpapers<i class="fa fa-external-link"></i></span></p>
<h2 id="部署到Coding"><a href="#部署到Coding" class="headerlink" title="部署到Coding"></a>部署到Coding</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly90ZGluZy50b3AvYXJjaGl2ZXMvZTA5MjQ5ZDIuaHRtbA==" title="https://tding.top/archives/e09249d2.html">Hexo 博客部署到 Coding<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h3 id="创建-Coding-仓库"><a href="#创建-Coding-仓库" class="headerlink" title="创建 Coding 仓库"></a>创建 Coding 仓库</h3><ol>
<li>首先官网注册账号。</li>
<li>注册完账号之后，请前个人账户的设置页面选择 SSH 公钥将本地生成的 公钥 添加进去。公钥储存位置一般在 <code>C:\Users\用户名\.ssh</code> 目录下的 <code>id_rsa.pub</code> 文件里，用记事本打开复制其内容即可。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;shlmJackey@gmail.com&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>创建一个托管静态页面的仓库<ul>
<li>项目名称任意，但是<strong>最好是自己在 Coding 上设置的账户名</strong>。因为当我们的项目推送成功并开启 Pages 服务后，其访问地址为 <code>username.coding.me/projectname</code>。而当你的 <code>projectname</code> 与 <code>username</code> 相同的时候，其访问地址可以简化为 <code>username.coding.me</code>。</li>
<li>项目描述随意填写</li>
<li>公开源代码：建议不勾选，这样仓库就只能自己查看</li>
<li>启用 <code>README.md</code>、添加 <code>License</code> 文件和添加 <code>.gitignore</code> 文件均可以不用理会，使用默认的就好</li>
</ul>
</li>
</ol>
<h3 id="部署到-Coding-仓库"><a href="#部署到-Coding-仓库" class="headerlink" title="部署到 Coding 仓库"></a>部署到 Coding 仓库</h3><p>现在我们将 public 目录推送到 Coding 上博客仓库的 master 分支。</p>
<p>我们只需要改下站点的配置文件，添加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- type: git</span><br><span class="line">  repository: git@git.dev.tencent.com:tding&#x2F;tding.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>然后 <code>hexo deploy</code> 即可部署成功。</p>
<h3 id="开启-Coding-Pages-服务"><a href="#开启-Coding-Pages-服务" class="headerlink" title="开启 Coding Pages 服务"></a>开启 Coding Pages 服务</h3><p>博客部署完成后，我们在<code>代码 ——&gt; Pages服务</code>中一键开启 Coding Pages 服务。</p>
<p>在浏览器中直接输入域名，即仓名（如 <code>tding.coding.me</code>）查看是否部署成功。</p>
<h2 id="增加gittalk评论功能"><a href="#增加gittalk评论功能" class="headerlink" title="增加gittalk评论功能"></a>增加gittalk评论功能</h2><h3 id="在GITHUB上注册新应用"><a href="#在GITHUB上注册新应用" class="headerlink" title="在GITHUB上注册新应用"></a>在GITHUB上注册新应用</h3><p>记录在NexT主题中添加gitalk评论系统的步骤。<br>gitalk：一个基于 Github Issue 和 Preact 开发的评论插件<br>详情Demo可见：<span class="exturl" data-url="aHR0cHM6Ly9naXRhbGsuZ2l0aHViLmlvLw==" title="https://gitalk.github.io/">https://gitalk.github.io/<i class="fa fa-external-link"></i></span></p>
<p>Register Application<br>在GitHub上注册新应用，链接：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2FwcGxpY2F0aW9ucy9uZXc=" title="https://github.com/settings/applications/new">https://github.com/settings/applications/new<i class="fa fa-external-link"></i></span><br>填写完成后如下<br><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200204170740092.png" alt="image-20200204170740092"></p>
<h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><p>在主题配置文件中修改<code>thems/next/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># For more information: https://gitalk.github.io, https://github.com/gitalk/gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github_id:</span> <span class="comment"># GitHub repo owner</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">blog</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span>  <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line">  <span class="attr">admin_user:</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure>
<p>重新部署之后即可看到效果<br><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200204171040456.png" alt="image-20200204171040456"></p>
<h3 id="编辑GITHUB上的应用"><a href="#编辑GITHUB上的应用" class="headerlink" title="编辑GITHUB上的应用"></a>编辑GITHUB上的应用</h3><p>选择<code>setting</code><br><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200204173625467.png" alt="image-20200204173625467"><br>选择<code>Developer settings</code><br><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200204173142030.png" alt="image-20200204173142030"><br>选择OAuth Apps<br><img src="/2020/01/30/HEXO%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/image-20200204173149732.png" alt="image-20200204173149732"></p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>content-type格式对照表</title>
    <url>/2020/03/20/content-type%E6%A0%BC%E5%BC%8F%E5%AF%B9%E7%85%A7%E8%A1%A8/</url>
    <content><![CDATA[<p>http文件格式</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly90b29sLm9zY2hpbmEubmV0L2NvbW1vbnM=" title="https://tool.oschina.net/commons">https://tool.oschina.net/commons<i class="fa fa-external-link"></i></span></p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">文件扩展名</th>
<th align="left">Content-Type(Mime-Type)</th>
<th align="left">文件扩展名</th>
<th align="left">Content-Type(Mime-Type)</th>
</tr>
</thead>
<tbody><tr>
<td align="left">.*（ 二进制流，不知道下载文件类型）</td>
<td align="left">application/octet-stream</td>
<td align="left">.tif</td>
<td align="left">image/tiff</td>
</tr>
<tr>
<td align="left">.001</td>
<td align="left">application/x-001</td>
<td align="left">.301</td>
<td align="left">application/x-301</td>
</tr>
<tr>
<td align="left">.323</td>
<td align="left">text/h323</td>
<td align="left">.906</td>
<td align="left">application/x-906</td>
</tr>
<tr>
<td align="left">.907</td>
<td align="left">drawing/907</td>
<td align="left">.a11</td>
<td align="left">application/x-a11</td>
</tr>
<tr>
<td align="left">.acp</td>
<td align="left">audio/x-mei-aac</td>
<td align="left">.ai</td>
<td align="left">application/postscript</td>
</tr>
<tr>
<td align="left">.aif</td>
<td align="left">audio/aiff</td>
<td align="left">.aifc</td>
<td align="left">audio/aiff</td>
</tr>
<tr>
<td align="left">.aiff</td>
<td align="left">audio/aiff</td>
<td align="left">.anv</td>
<td align="left">application/x-anv</td>
</tr>
<tr>
<td align="left">.asa</td>
<td align="left">text/asa</td>
<td align="left">.asf</td>
<td align="left">video/x-ms-asf</td>
</tr>
<tr>
<td align="left">.asp</td>
<td align="left">text/asp</td>
<td align="left">.asx</td>
<td align="left">video/x-ms-asf</td>
</tr>
<tr>
<td align="left">.au</td>
<td align="left">audio/basic</td>
<td align="left">.avi</td>
<td align="left">video/avi</td>
</tr>
<tr>
<td align="left">.awf</td>
<td align="left">application/vnd.adobe.workflow</td>
<td align="left">.biz</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.bmp</td>
<td align="left">application/x-bmp</td>
<td align="left">.bot</td>
<td align="left">application/x-bot</td>
</tr>
<tr>
<td align="left">.c4t</td>
<td align="left">application/x-c4t</td>
<td align="left">.c90</td>
<td align="left">application/x-c90</td>
</tr>
<tr>
<td align="left">.cal</td>
<td align="left">application/x-cals</td>
<td align="left">.cat</td>
<td align="left">application/vnd.ms-pki.seccat</td>
</tr>
<tr>
<td align="left">.cdf</td>
<td align="left">application/x-netcdf</td>
<td align="left">.cdr</td>
<td align="left">application/x-cdr</td>
</tr>
<tr>
<td align="left">.cel</td>
<td align="left">application/x-cel</td>
<td align="left">.cer</td>
<td align="left">application/x-x509-ca-cert</td>
</tr>
<tr>
<td align="left">.cg4</td>
<td align="left">application/x-g4</td>
<td align="left">.cgm</td>
<td align="left">application/x-cgm</td>
</tr>
<tr>
<td align="left">.cit</td>
<td align="left">application/x-cit</td>
<td align="left">.class</td>
<td align="left">java/*</td>
</tr>
<tr>
<td align="left">.cml</td>
<td align="left">text/xml</td>
<td align="left">.cmp</td>
<td align="left">application/x-cmp</td>
</tr>
<tr>
<td align="left">.cmx</td>
<td align="left">application/x-cmx</td>
<td align="left">.cot</td>
<td align="left">application/x-cot</td>
</tr>
<tr>
<td align="left">.crl</td>
<td align="left">application/pkix-crl</td>
<td align="left">.crt</td>
<td align="left">application/x-x509-ca-cert</td>
</tr>
<tr>
<td align="left">.csi</td>
<td align="left">application/x-csi</td>
<td align="left">.css</td>
<td align="left">text/css</td>
</tr>
<tr>
<td align="left">.cut</td>
<td align="left">application/x-cut</td>
<td align="left">.dbf</td>
<td align="left">application/x-dbf</td>
</tr>
<tr>
<td align="left">.dbm</td>
<td align="left">application/x-dbm</td>
<td align="left">.dbx</td>
<td align="left">application/x-dbx</td>
</tr>
<tr>
<td align="left">.dcd</td>
<td align="left">text/xml</td>
<td align="left">.dcx</td>
<td align="left">application/x-dcx</td>
</tr>
<tr>
<td align="left">.der</td>
<td align="left">application/x-x509-ca-cert</td>
<td align="left">.dgn</td>
<td align="left">application/x-dgn</td>
</tr>
<tr>
<td align="left">.dib</td>
<td align="left">application/x-dib</td>
<td align="left">.dll</td>
<td align="left">application/x-msdownload</td>
</tr>
<tr>
<td align="left">.doc</td>
<td align="left">application/msword</td>
<td align="left">.dot</td>
<td align="left">application/msword</td>
</tr>
<tr>
<td align="left">.drw</td>
<td align="left">application/x-drw</td>
<td align="left">.dtd</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.dwf</td>
<td align="left">Model/vnd.dwf</td>
<td align="left">.dwf</td>
<td align="left">application/x-dwf</td>
</tr>
<tr>
<td align="left">.dwg</td>
<td align="left">application/x-dwg</td>
<td align="left">.dxb</td>
<td align="left">application/x-dxb</td>
</tr>
<tr>
<td align="left">.dxf</td>
<td align="left">application/x-dxf</td>
<td align="left">.edn</td>
<td align="left">application/vnd.adobe.edn</td>
</tr>
<tr>
<td align="left">.emf</td>
<td align="left">application/x-emf</td>
<td align="left">.eml</td>
<td align="left">message/rfc822</td>
</tr>
<tr>
<td align="left">.ent</td>
<td align="left">text/xml</td>
<td align="left">.epi</td>
<td align="left">application/x-epi</td>
</tr>
<tr>
<td align="left">.eps</td>
<td align="left">application/x-ps</td>
<td align="left">.eps</td>
<td align="left">application/postscript</td>
</tr>
<tr>
<td align="left">.etd</td>
<td align="left">application/x-ebx</td>
<td align="left">.exe</td>
<td align="left">application/x-msdownload</td>
</tr>
<tr>
<td align="left">.fax</td>
<td align="left">image/fax</td>
<td align="left">.fdf</td>
<td align="left">application/vnd.fdf</td>
</tr>
<tr>
<td align="left">.fif</td>
<td align="left">application/fractals</td>
<td align="left">.fo</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.frm</td>
<td align="left">application/x-frm</td>
<td align="left">.g4</td>
<td align="left">application/x-g4</td>
</tr>
<tr>
<td align="left">.gbr</td>
<td align="left">application/x-gbr</td>
<td align="left">.</td>
<td align="left">application/x-</td>
</tr>
<tr>
<td align="left">.gif</td>
<td align="left">image/gif</td>
<td align="left">.gl2</td>
<td align="left">application/x-gl2</td>
</tr>
<tr>
<td align="left">.gp4</td>
<td align="left">application/x-gp4</td>
<td align="left">.hgl</td>
<td align="left">application/x-hgl</td>
</tr>
<tr>
<td align="left">.hmr</td>
<td align="left">application/x-hmr</td>
<td align="left">.hpg</td>
<td align="left">application/x-hpgl</td>
</tr>
<tr>
<td align="left">.hpl</td>
<td align="left">application/x-hpl</td>
<td align="left">.hqx</td>
<td align="left">application/mac-binhex40</td>
</tr>
<tr>
<td align="left">.hrf</td>
<td align="left">application/x-hrf</td>
<td align="left">.hta</td>
<td align="left">application/hta</td>
</tr>
<tr>
<td align="left">.htc</td>
<td align="left">text/x-component</td>
<td align="left">.htm</td>
<td align="left">text/html</td>
</tr>
<tr>
<td align="left">.html</td>
<td align="left">text/html</td>
<td align="left">.htt</td>
<td align="left">text/webviewhtml</td>
</tr>
<tr>
<td align="left">.htx</td>
<td align="left">text/html</td>
<td align="left">.icb</td>
<td align="left">application/x-icb</td>
</tr>
<tr>
<td align="left">.ico</td>
<td align="left">image/x-icon</td>
<td align="left">.ico</td>
<td align="left">application/x-ico</td>
</tr>
<tr>
<td align="left">.iff</td>
<td align="left">application/x-iff</td>
<td align="left">.ig4</td>
<td align="left">application/x-g4</td>
</tr>
<tr>
<td align="left">.igs</td>
<td align="left">application/x-igs</td>
<td align="left">.iii</td>
<td align="left">application/x-iphone</td>
</tr>
<tr>
<td align="left">.img</td>
<td align="left">application/x-img</td>
<td align="left">.ins</td>
<td align="left">application/x-internet-signup</td>
</tr>
<tr>
<td align="left">.isp</td>
<td align="left">application/x-internet-signup</td>
<td align="left">.IVF</td>
<td align="left">video/x-ivf</td>
</tr>
<tr>
<td align="left">.java</td>
<td align="left">java/*</td>
<td align="left">.jfif</td>
<td align="left">image/jpeg</td>
</tr>
<tr>
<td align="left">.jpe</td>
<td align="left">image/jpeg</td>
<td align="left">.jpe</td>
<td align="left">application/x-jpe</td>
</tr>
<tr>
<td align="left">.jpeg</td>
<td align="left">image/jpeg</td>
<td align="left">.jpg</td>
<td align="left">image/jpeg</td>
</tr>
<tr>
<td align="left">.jpg</td>
<td align="left">application/x-jpg</td>
<td align="left">.js</td>
<td align="left">application/x-javascript</td>
</tr>
<tr>
<td align="left">.jsp</td>
<td align="left">text/html</td>
<td align="left">.la1</td>
<td align="left">audio/x-liquid-file</td>
</tr>
<tr>
<td align="left">.lar</td>
<td align="left">application/x-laplayer-reg</td>
<td align="left">.latex</td>
<td align="left">application/x-latex</td>
</tr>
<tr>
<td align="left">.lavs</td>
<td align="left">audio/x-liquid-secure</td>
<td align="left">.lbm</td>
<td align="left">application/x-lbm</td>
</tr>
<tr>
<td align="left">.lmsff</td>
<td align="left">audio/x-la-lms</td>
<td align="left">.ls</td>
<td align="left">application/x-javascript</td>
</tr>
<tr>
<td align="left">.ltr</td>
<td align="left">application/x-ltr</td>
<td align="left">.m1v</td>
<td align="left">video/x-mpeg</td>
</tr>
<tr>
<td align="left">.m2v</td>
<td align="left">video/x-mpeg</td>
<td align="left">.m3u</td>
<td align="left">audio/mpegurl</td>
</tr>
<tr>
<td align="left">.m4e</td>
<td align="left">video/mpeg4</td>
<td align="left">.mac</td>
<td align="left">application/x-mac</td>
</tr>
<tr>
<td align="left">.man</td>
<td align="left">application/x-troff-man</td>
<td align="left">.math</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.mdb</td>
<td align="left">application/msaccess</td>
<td align="left">.mdb</td>
<td align="left">application/x-mdb</td>
</tr>
<tr>
<td align="left">.mfp</td>
<td align="left">application/x-shockwave-flash</td>
<td align="left">.mht</td>
<td align="left">message/rfc822</td>
</tr>
<tr>
<td align="left">.mhtml</td>
<td align="left">message/rfc822</td>
<td align="left">.mi</td>
<td align="left">application/x-mi</td>
</tr>
<tr>
<td align="left">.mid</td>
<td align="left">audio/mid</td>
<td align="left">.midi</td>
<td align="left">audio/mid</td>
</tr>
<tr>
<td align="left">.mil</td>
<td align="left">application/x-mil</td>
<td align="left">.mml</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.mnd</td>
<td align="left">audio/x-musicnet-download</td>
<td align="left">.mns</td>
<td align="left">audio/x-musicnet-stream</td>
</tr>
<tr>
<td align="left">.mocha</td>
<td align="left">application/x-javascript</td>
<td align="left">.movie</td>
<td align="left">video/x-sgi-movie</td>
</tr>
<tr>
<td align="left">.mp1</td>
<td align="left">audio/mp1</td>
<td align="left">.mp2</td>
<td align="left">audio/mp2</td>
</tr>
<tr>
<td align="left">.mp2v</td>
<td align="left">video/mpeg</td>
<td align="left">.mp3</td>
<td align="left">audio/mp3</td>
</tr>
<tr>
<td align="left">.mp4</td>
<td align="left">video/mpeg4</td>
<td align="left">.mpa</td>
<td align="left">video/x-mpg</td>
</tr>
<tr>
<td align="left">.mpd</td>
<td align="left">application/vnd.ms-project</td>
<td align="left">.mpe</td>
<td align="left">video/x-mpeg</td>
</tr>
<tr>
<td align="left">.mpeg</td>
<td align="left">video/mpg</td>
<td align="left">.mpg</td>
<td align="left">video/mpg</td>
</tr>
<tr>
<td align="left">.mpga</td>
<td align="left">audio/rn-mpeg</td>
<td align="left">.mpp</td>
<td align="left">application/vnd.ms-project</td>
</tr>
<tr>
<td align="left">.mps</td>
<td align="left">video/x-mpeg</td>
<td align="left">.mpt</td>
<td align="left">application/vnd.ms-project</td>
</tr>
<tr>
<td align="left">.mpv</td>
<td align="left">video/mpg</td>
<td align="left">.mpv2</td>
<td align="left">video/mpeg</td>
</tr>
<tr>
<td align="left">.mpw</td>
<td align="left">application/vnd.ms-project</td>
<td align="left">.mpx</td>
<td align="left">application/vnd.ms-project</td>
</tr>
<tr>
<td align="left">.mtx</td>
<td align="left">text/xml</td>
<td align="left">.mxp</td>
<td align="left">application/x-mmxp</td>
</tr>
<tr>
<td align="left">.net</td>
<td align="left">image/pnetvue</td>
<td align="left">.nrf</td>
<td align="left">application/x-nrf</td>
</tr>
<tr>
<td align="left">.nws</td>
<td align="left">message/rfc822</td>
<td align="left">.odc</td>
<td align="left">text/x-ms-odc</td>
</tr>
<tr>
<td align="left">.out</td>
<td align="left">application/x-out</td>
<td align="left">.p10</td>
<td align="left">application/pkcs10</td>
</tr>
<tr>
<td align="left">.p12</td>
<td align="left">application/x-pkcs12</td>
<td align="left">.p7b</td>
<td align="left">application/x-pkcs7-certificates</td>
</tr>
<tr>
<td align="left">.p7c</td>
<td align="left">application/pkcs7-mime</td>
<td align="left">.p7m</td>
<td align="left">application/pkcs7-mime</td>
</tr>
<tr>
<td align="left">.p7r</td>
<td align="left">application/x-pkcs7-certreqresp</td>
<td align="left">.p7s</td>
<td align="left">application/pkcs7-signature</td>
</tr>
<tr>
<td align="left">.pc5</td>
<td align="left">application/x-pc5</td>
<td align="left">.pci</td>
<td align="left">application/x-pci</td>
</tr>
<tr>
<td align="left">.pcl</td>
<td align="left">application/x-pcl</td>
<td align="left">.pcx</td>
<td align="left">application/x-pcx</td>
</tr>
<tr>
<td align="left">.pdf</td>
<td align="left">application/pdf</td>
<td align="left">.pdf</td>
<td align="left">application/pdf</td>
</tr>
<tr>
<td align="left">.pdx</td>
<td align="left">application/vnd.adobe.pdx</td>
<td align="left">.pfx</td>
<td align="left">application/x-pkcs12</td>
</tr>
<tr>
<td align="left">.pgl</td>
<td align="left">application/x-pgl</td>
<td align="left">.pic</td>
<td align="left">application/x-pic</td>
</tr>
<tr>
<td align="left">.pko</td>
<td align="left">application/vnd.ms-pki.pko</td>
<td align="left">.pl</td>
<td align="left">application/x-perl</td>
</tr>
<tr>
<td align="left">.plg</td>
<td align="left">text/html</td>
<td align="left">.pls</td>
<td align="left">audio/scpls</td>
</tr>
<tr>
<td align="left">.plt</td>
<td align="left">application/x-plt</td>
<td align="left">.png</td>
<td align="left">image/png</td>
</tr>
<tr>
<td align="left">.png</td>
<td align="left">application/x-png</td>
<td align="left">.pot</td>
<td align="left">application/vnd.ms-powerpoint</td>
</tr>
<tr>
<td align="left">.ppa</td>
<td align="left">application/vnd.ms-powerpoint</td>
<td align="left">.ppm</td>
<td align="left">application/x-ppm</td>
</tr>
<tr>
<td align="left">.pps</td>
<td align="left">application/vnd.ms-powerpoint</td>
<td align="left">.ppt</td>
<td align="left">application/vnd.ms-powerpoint</td>
</tr>
<tr>
<td align="left">.ppt</td>
<td align="left">application/x-ppt</td>
<td align="left">.pr</td>
<td align="left">application/x-pr</td>
</tr>
<tr>
<td align="left">.prf</td>
<td align="left">application/pics-rules</td>
<td align="left">.prn</td>
<td align="left">application/x-prn</td>
</tr>
<tr>
<td align="left">.prt</td>
<td align="left">application/x-prt</td>
<td align="left">.ps</td>
<td align="left">application/x-ps</td>
</tr>
<tr>
<td align="left">.ps</td>
<td align="left">application/postscript</td>
<td align="left">.ptn</td>
<td align="left">application/x-ptn</td>
</tr>
<tr>
<td align="left">.pwz</td>
<td align="left">application/vnd.ms-powerpoint</td>
<td align="left">.r3t</td>
<td align="left">text/vnd.rn-realtext3d</td>
</tr>
<tr>
<td align="left">.ra</td>
<td align="left">audio/vnd.rn-realaudio</td>
<td align="left">.ram</td>
<td align="left">audio/x-pn-realaudio</td>
</tr>
<tr>
<td align="left">.ras</td>
<td align="left">application/x-ras</td>
<td align="left">.rat</td>
<td align="left">application/rat-file</td>
</tr>
<tr>
<td align="left">.rdf</td>
<td align="left">text/xml</td>
<td align="left">.rec</td>
<td align="left">application/vnd.rn-recording</td>
</tr>
<tr>
<td align="left">.red</td>
<td align="left">application/x-red</td>
<td align="left">.rgb</td>
<td align="left">application/x-rgb</td>
</tr>
<tr>
<td align="left">.rjs</td>
<td align="left">application/vnd.rn-realsystem-rjs</td>
<td align="left">.rjt</td>
<td align="left">application/vnd.rn-realsystem-rjt</td>
</tr>
<tr>
<td align="left">.rlc</td>
<td align="left">application/x-rlc</td>
<td align="left">.rle</td>
<td align="left">application/x-rle</td>
</tr>
<tr>
<td align="left">.rm</td>
<td align="left">application/vnd.rn-realmedia</td>
<td align="left">.rmf</td>
<td align="left">application/vnd.adobe.rmf</td>
</tr>
<tr>
<td align="left">.rmi</td>
<td align="left">audio/mid</td>
<td align="left">.rmj</td>
<td align="left">application/vnd.rn-realsystem-rmj</td>
</tr>
<tr>
<td align="left">.rmm</td>
<td align="left">audio/x-pn-realaudio</td>
<td align="left">.rmp</td>
<td align="left">application/vnd.rn-rn_music_package</td>
</tr>
<tr>
<td align="left">.rms</td>
<td align="left">application/vnd.rn-realmedia-secure</td>
<td align="left">.rmvb</td>
<td align="left">application/vnd.rn-realmedia-vbr</td>
</tr>
<tr>
<td align="left">.rmx</td>
<td align="left">application/vnd.rn-realsystem-rmx</td>
<td align="left">.rnx</td>
<td align="left">application/vnd.rn-realplayer</td>
</tr>
<tr>
<td align="left">.rp</td>
<td align="left">image/vnd.rn-realpix</td>
<td align="left">.rpm</td>
<td align="left">audio/x-pn-realaudio-plugin</td>
</tr>
<tr>
<td align="left">.rsml</td>
<td align="left">application/vnd.rn-rsml</td>
<td align="left">.rt</td>
<td align="left">text/vnd.rn-realtext</td>
</tr>
<tr>
<td align="left">.rtf</td>
<td align="left">application/msword</td>
<td align="left">.rtf</td>
<td align="left">application/x-rtf</td>
</tr>
<tr>
<td align="left">.rv</td>
<td align="left">video/vnd.rn-realvideo</td>
<td align="left">.sam</td>
<td align="left">application/x-sam</td>
</tr>
<tr>
<td align="left">.sat</td>
<td align="left">application/x-sat</td>
<td align="left">.sdp</td>
<td align="left">application/sdp</td>
</tr>
<tr>
<td align="left">.sdw</td>
<td align="left">application/x-sdw</td>
<td align="left">.sit</td>
<td align="left">application/x-stuffit</td>
</tr>
<tr>
<td align="left">.slb</td>
<td align="left">application/x-slb</td>
<td align="left">.sld</td>
<td align="left">application/x-sld</td>
</tr>
<tr>
<td align="left">.slk</td>
<td align="left">drawing/x-slk</td>
<td align="left">.smi</td>
<td align="left">application/smil</td>
</tr>
<tr>
<td align="left">.smil</td>
<td align="left">application/smil</td>
<td align="left">.smk</td>
<td align="left">application/x-smk</td>
</tr>
<tr>
<td align="left">.snd</td>
<td align="left">audio/basic</td>
<td align="left">.sol</td>
<td align="left">text/plain</td>
</tr>
<tr>
<td align="left">.sor</td>
<td align="left">text/plain</td>
<td align="left">.spc</td>
<td align="left">application/x-pkcs7-certificates</td>
</tr>
<tr>
<td align="left">.spl</td>
<td align="left">application/futuresplash</td>
<td align="left">.spp</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.ssm</td>
<td align="left">application/streamingmedia</td>
<td align="left">.sst</td>
<td align="left">application/vnd.ms-pki.certstore</td>
</tr>
<tr>
<td align="left">.stl</td>
<td align="left">application/vnd.ms-pki.stl</td>
<td align="left">.stm</td>
<td align="left">text/html</td>
</tr>
<tr>
<td align="left">.sty</td>
<td align="left">application/x-sty</td>
<td align="left">.svg</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.swf</td>
<td align="left">application/x-shockwave-flash</td>
<td align="left">.tdf</td>
<td align="left">application/x-tdf</td>
</tr>
<tr>
<td align="left">.tg4</td>
<td align="left">application/x-tg4</td>
<td align="left">.tga</td>
<td align="left">application/x-tga</td>
</tr>
<tr>
<td align="left">.tif</td>
<td align="left">image/tiff</td>
<td align="left">.tif</td>
<td align="left">application/x-tif</td>
</tr>
<tr>
<td align="left">.tiff</td>
<td align="left">image/tiff</td>
<td align="left">.tld</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.top</td>
<td align="left">drawing/x-top</td>
<td align="left">.torrent</td>
<td align="left">application/x-bittorrent</td>
</tr>
<tr>
<td align="left">.tsd</td>
<td align="left">text/xml</td>
<td align="left">.txt</td>
<td align="left">text/plain</td>
</tr>
<tr>
<td align="left">.uin</td>
<td align="left">application/x-icq</td>
<td align="left">.uls</td>
<td align="left">text/iuls</td>
</tr>
<tr>
<td align="left">.vcf</td>
<td align="left">text/x-vcard</td>
<td align="left">.vda</td>
<td align="left">application/x-vda</td>
</tr>
<tr>
<td align="left">.vdx</td>
<td align="left">application/vnd.visio</td>
<td align="left">.vml</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.vpg</td>
<td align="left">application/x-vpeg005</td>
<td align="left">.vsd</td>
<td align="left">application/vnd.visio</td>
</tr>
<tr>
<td align="left">.vsd</td>
<td align="left">application/x-vsd</td>
<td align="left">.vss</td>
<td align="left">application/vnd.visio</td>
</tr>
<tr>
<td align="left">.vst</td>
<td align="left">application/vnd.visio</td>
<td align="left">.vst</td>
<td align="left">application/x-vst</td>
</tr>
<tr>
<td align="left">.vsw</td>
<td align="left">application/vnd.visio</td>
<td align="left">.vsx</td>
<td align="left">application/vnd.visio</td>
</tr>
<tr>
<td align="left">.vtx</td>
<td align="left">application/vnd.visio</td>
<td align="left">.vxml</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.wav</td>
<td align="left">audio/wav</td>
<td align="left">.wax</td>
<td align="left">audio/x-ms-wax</td>
</tr>
<tr>
<td align="left">.wb1</td>
<td align="left">application/x-wb1</td>
<td align="left">.wb2</td>
<td align="left">application/x-wb2</td>
</tr>
<tr>
<td align="left">.wb3</td>
<td align="left">application/x-wb3</td>
<td align="left">.wbmp</td>
<td align="left">image/vnd.wap.wbmp</td>
</tr>
<tr>
<td align="left">.wiz</td>
<td align="left">application/msword</td>
<td align="left">.wk3</td>
<td align="left">application/x-wk3</td>
</tr>
<tr>
<td align="left">.wk4</td>
<td align="left">application/x-wk4</td>
<td align="left">.wkq</td>
<td align="left">application/x-wkq</td>
</tr>
<tr>
<td align="left">.wks</td>
<td align="left">application/x-wks</td>
<td align="left">.wm</td>
<td align="left">video/x-ms-wm</td>
</tr>
<tr>
<td align="left">.wma</td>
<td align="left">audio/x-ms-wma</td>
<td align="left">.wmd</td>
<td align="left">application/x-ms-wmd</td>
</tr>
<tr>
<td align="left">.wmf</td>
<td align="left">application/x-wmf</td>
<td align="left">.wml</td>
<td align="left">text/vnd.wap.wml</td>
</tr>
<tr>
<td align="left">.wmv</td>
<td align="left">video/x-ms-wmv</td>
<td align="left">.wmx</td>
<td align="left">video/x-ms-wmx</td>
</tr>
<tr>
<td align="left">.wmz</td>
<td align="left">application/x-ms-wmz</td>
<td align="left">.wp6</td>
<td align="left">application/x-wp6</td>
</tr>
<tr>
<td align="left">.wpd</td>
<td align="left">application/x-wpd</td>
<td align="left">.wpg</td>
<td align="left">application/x-wpg</td>
</tr>
<tr>
<td align="left">.wpl</td>
<td align="left">application/vnd.ms-wpl</td>
<td align="left">.wq1</td>
<td align="left">application/x-wq1</td>
</tr>
<tr>
<td align="left">.wr1</td>
<td align="left">application/x-wr1</td>
<td align="left">.wri</td>
<td align="left">application/x-wri</td>
</tr>
<tr>
<td align="left">.wrk</td>
<td align="left">application/x-wrk</td>
<td align="left">.ws</td>
<td align="left">application/x-ws</td>
</tr>
<tr>
<td align="left">.ws2</td>
<td align="left">application/x-ws</td>
<td align="left">.wsc</td>
<td align="left">text/scriptlet</td>
</tr>
<tr>
<td align="left">.wsdl</td>
<td align="left">text/xml</td>
<td align="left">.wvx</td>
<td align="left">video/x-ms-wvx</td>
</tr>
<tr>
<td align="left">.xdp</td>
<td align="left">application/vnd.adobe.xdp</td>
<td align="left">.xdr</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.xfd</td>
<td align="left">application/vnd.adobe.xfd</td>
<td align="left">.xfdf</td>
<td align="left">application/vnd.adobe.xfdf</td>
</tr>
<tr>
<td align="left">.xhtml</td>
<td align="left">text/html</td>
<td align="left">.xls</td>
<td align="left">application/vnd.ms-excel</td>
</tr>
<tr>
<td align="left">.xls</td>
<td align="left">application/x-xls</td>
<td align="left">.xlw</td>
<td align="left">application/x-xlw</td>
</tr>
<tr>
<td align="left">.xml</td>
<td align="left">text/xml</td>
<td align="left">.xpl</td>
<td align="left">audio/scpls</td>
</tr>
<tr>
<td align="left">.xq</td>
<td align="left">text/xml</td>
<td align="left">.xql</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.xquery</td>
<td align="left">text/xml</td>
<td align="left">.xsd</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.xsl</td>
<td align="left">text/xml</td>
<td align="left">.xslt</td>
<td align="left">text/xml</td>
</tr>
<tr>
<td align="left">.xwd</td>
<td align="left">application/x-xwd</td>
<td align="left">.x_b</td>
<td align="left">application/x-x_b</td>
</tr>
<tr>
<td align="left">.sis</td>
<td align="left">application/vnd.symbian.install</td>
<td align="left">.sisx</td>
<td align="left">application/vnd.symbian.install</td>
</tr>
<tr>
<td align="left">.x_t</td>
<td align="left">application/x-x_t</td>
<td align="left">.ipa</td>
<td align="left">application/vnd.iphone</td>
</tr>
<tr>
<td align="left">.apk</td>
<td align="left">application/vnd.android.package-archive</td>
<td align="left">.xap</td>
<td align="left">application/x-silverlight-app</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>redis学习2-配置文件中文注释解析</title>
    <url>/2018/01/12/redis%E5%AD%A6%E4%B9%A02-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%B3%A8%E9%87%8A%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p>以下是<code>redis3.0</code>配置文件带中文注释文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#redis.conf</span></span><br><span class="line"><span class="comment"># Redis configuration file example.</span></span><br><span class="line"><span class="comment"># ./redis-server /path/to/redis.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## INCLUDES ###################################</span></span><br><span class="line"><span class="comment">#这在你有标准配置模板但是每个redis服务器又需要个性设置的时候很有用。</span></span><br><span class="line"><span class="comment"># include /path/to/local.conf</span></span><br><span class="line"><span class="comment"># include /path/to/other.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################ GENERAL #####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否在后台执行，yes：后台运行；no：不是后台运行（老版本默认）</span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line">  <span class="comment">#3.2里的参数，是否开启保护模式，默认开启。要是配置里没有指定bind和密码。开启该参数后，redis只会本地进行访问，拒绝外部访问。要是开启了密码   和bind，可以开启。否   则最好关闭，设置为no。</span></span><br><span class="line">  protected-mode yes</span><br><span class="line"><span class="comment">#redis的进程文件</span></span><br><span class="line">pidfile /var/run/redis/redis-server.pid</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis监听的端口号。</span></span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"><span class="comment">#此参数确定了TCP连接中已完成队列(完成三次握手之后)的长度， 当然此值必须不大于Linux系统定义的/proc/sys/net/core/somaxconn值，默认是511，而Linux的默认参数值是128。当系统并发量大并且客户端速度缓慢的时候，可以将这二个参数一起参考设定。该内核参数默认值一般是128，对于负载很大的服务程序来说大大的不够。一般会将它修改为2048或者更大。在/etc/sysctl.conf中添加:net.core.somaxconn = 2048，然后在终端中执行sysctl -p。</span></span><br><span class="line">tcp-backlog 511</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定 redis 只接收来自于该 IP 地址的请求，如果不进行设置，那么将处理所有请求</span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置unix socket来让redis支持监听本地连接。</span></span><br><span class="line"><span class="comment"># unixsocket /var/run/redis/redis.sock</span></span><br><span class="line"><span class="comment">#配置unix socket使用文件的权限</span></span><br><span class="line"><span class="comment"># unixsocketperm 700</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此参数为设置客户端空闲超过timeout，服务端会断开连接，为0则服务端不会主动断开连接，不能小于0。</span></span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#tcp keepalive参数。如果设置不为0，就使用配置tcp的SO_KEEPALIVE值，使用keepalive有两个好处:检测挂掉的对端。降低中间设备出问题而导致网络看似连接却已经与对端端口的问题。在Linux内核中，设置了keepalive，redis会定时给对端发送ack。检测到对端关闭需要两倍的设置值。</span></span><br><span class="line">tcp-keepalive 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定了服务端日志的级别。级别包括：debug（很多信息，方便开发、测试），verbose（许多有用的信息，但是没有debug级别信息多），notice（适当的日志级别，适合生产环境），warn（只有非常重要的信息）</span></span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定了记录日志的文件。空字符串的话，日志会打印到标准输出设备。后台运行的redis标准输出是/dev/null。</span></span><br><span class="line">logfile /var/<span class="built_in">log</span>/redis/redis-server.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#是否打开记录syslog功能</span></span><br><span class="line"><span class="comment"># syslog-enabled no</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#syslog的标识符。</span></span><br><span class="line"><span class="comment"># syslog-ident redis</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志的来源、设备</span></span><br><span class="line"><span class="comment"># syslog-facility local0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库的数量，默认使用的数据库是DB 0。可以通过”SELECT “命令选择一个db</span></span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ SNAPSHOTTING ################################</span></span><br><span class="line"><span class="comment"># 快照配置</span></span><br><span class="line"><span class="comment"># 注释掉“save”这一行配置项就可以让保存数据库功能失效</span></span><br><span class="line"><span class="comment"># 设置sedis进行数据库镜像的频率。</span></span><br><span class="line"><span class="comment"># 900秒（15分钟）内至少1个key值改变（则进行数据库保存--持久化） </span></span><br><span class="line"><span class="comment"># 300秒（5分钟）内至少10个key值改变（则进行数据库保存--持久化） </span></span><br><span class="line"><span class="comment"># 60秒（1分钟）内至少10000个key值改变（则进行数据库保存--持久化）</span></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"><span class="comment">#当RDB持久化出现错误后，是否依然进行继续进行工作，yes：不能进行工作，no：可以继续进行工作，可以通过info中的rdb_last_bgsave_status了解RDB持久化是否有错误</span></span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用压缩rdb文件，rdb文件压缩使用LZF压缩算法，yes：压缩，但是需要一些cpu的消耗。no：不压缩，需要更多的磁盘空间</span></span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#是否校验rdb文件。从rdb格式的第五个版本开始，在rdb文件的末尾会带上CRC64的校验和。这跟有利于文件的容错性，但是在保存rdb文件的时候，会有大概10%的性能损耗，所以如果你追求高性能，可以关闭该配置。</span></span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#rdb文件的名称</span></span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据目录，数据库的写入会在这个目录。rdb、aof文件也会写在这个目录</span></span><br><span class="line">dir /var/lib/redis</span><br><span class="line"></span><br><span class="line"><span class="comment">################################# REPLICATION #################################</span></span><br><span class="line"><span class="comment">#复制选项，slave复制对应的master。</span></span><br><span class="line"><span class="comment"># slaveof &lt;masterip&gt; &lt;masterport&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果master设置了requirepass，那么slave要连上master，需要有master的密码才行。masterauth就是用来配置master的密码，这样可以在连上master后进行认证。</span></span><br><span class="line"><span class="comment"># masterauth &lt;master-password&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#当从库同主机失去连接或者复制正在进行，从机库有两种运行方式：1) 如果slave-serve-stale-data设置为yes(默认设置)，从库会继续响应客户端的请求。2) 如果slave-serve-stale-data设置为no，除去INFO和SLAVOF命令之外的任何请求都会返回一个错误”SYNC with master in progress”。</span></span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#作为从服务器，默认情况下是只读的（yes），可以修改成NO，用于写（不建议）。</span></span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#是否使用socket方式复制数据。目前redis复制提供两种方式，disk和socket。如果新的slave连上来或者重连的slave无法部分同步，就会执行全量同步，master会生成rdb文件。有2种方式：disk方式是master创建一个新的进程把rdb文件保存到磁盘，再把磁盘上的rdb文件传递给slave。socket是master创建一个新的进程，直接把rdb文件以socket的方式发给slave。disk方式的时候，当一个rdb保存的过程中，多个slave都能共享这个rdb文件。socket的方式就的一个个slave顺序复制。在磁盘速度缓慢，网速快的情况下推荐用socket方式。</span></span><br><span class="line">repl-diskless-sync no</span><br><span class="line"></span><br><span class="line"><span class="comment">#diskless复制的延迟时间，防止设置为0。一旦复制开始，节点不会再接收新slave的复制请求直到下一个rdb传输。所以最好等待一段时间，等更多的slave连上来。</span></span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line"></span><br><span class="line"><span class="comment">#slave根据指定的时间间隔向服务器发送ping请求。时间间隔可以通过 repl_ping_slave_period 来设置，默认10秒。</span></span><br><span class="line"><span class="comment"># repl-ping-slave-period 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#复制连接超时时间。master和slave都有超时时间的设置。master检测到slave上次发送的时间超过repl-timeout，即认为slave离线，清除该slave信息。slave检测到上次和master交互的时间超过repl-timeout，则认为master离线。需要注意的是repl-timeout需要设置一个比repl-ping-slave-period更大的值，不然会经常检测到超时。</span></span><br><span class="line"><span class="comment"># repl-timeout 60</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否禁止复制tcp链接的tcp nodelay参数，可传递yes或者no。默认是no，即使用tcp nodelay。如果master设置了yes来禁止tcp nodelay设置，在把数据复制给slave的时候，会减少包的数量和更小的网络带宽。但是这也可能带来数据的延迟。默认我们推荐更小的延迟，但是在数据量传输很大的场景下，建议选择yes。</span></span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制缓冲区大小，这是一个环形复制缓冲区，用来保存最新复制的命令。这样在slave离线的时候，不需要完全复制master的数据，如果可以执行部分同步，只需要把缓冲区的部分数据复制给slave，就能恢复正常复制状态。缓冲区的大小越大，slave离线的时间可以更长，复制缓冲区只有在有slave连接的时候才分配内存。没有slave的一段时间，内存会被释放出来，默认1m。</span></span><br><span class="line"><span class="comment"># repl-backlog-size 5mb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#master没有slave一段时间会释放复制缓冲区的内存，repl-backlog-ttl用来设置该时间长度。单位为秒。</span></span><br><span class="line"><span class="comment"># repl-backlog-ttl 3600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#当master不可用，Sentinel会根据slave的优先级选举一个master。最低的优先级的slave，当选master。而配置成0，永远不会被选举。</span></span><br><span class="line">slave-priority 100</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis提供了可以让master停止写入的方式，如果配置了min-slaves-to-write，健康的slave的个数小于N，mater就禁止写入。master最少得有多少个健康的slave存活才能执行写命令。这个配置虽然不能保证N个slave都一定能接收到master的写操作，但是能避免没有足够健康的slave的时候，master不能写入来避免数据丢失。设置为0是关闭该功能。</span></span><br><span class="line"><span class="comment"># min-slaves-to-write 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#延迟小于min-slaves-max-lag秒的slave才认为是健康的slave。</span></span><br><span class="line"><span class="comment"># min-slaves-max-lag 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置1或另一个设置为0禁用这个特性。</span></span><br><span class="line"><span class="comment"># Setting one or the other to 0 disables the feature.</span></span><br><span class="line"><span class="comment"># By default min-slaves-to-write is set to 0 (feature disabled) and</span></span><br><span class="line"><span class="comment"># min-slaves-max-lag is set to 10.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## SECURITY ###################################</span></span><br><span class="line"><span class="comment">#requirepass配置可以让用户使用AUTH命令来认证密码，才能使用其他命令。这让redis可以使用在不受信任的网络中。为了保持向后的兼容性，可以注释该命令，因为大部分用户也不需要认证。使用requirepass的时候需要注意，因为redis太快了，每秒可以认证15w次密码，简单的密码很容易被攻破，所以最好使用一个更复杂的密码。</span></span><br><span class="line"><span class="comment"># requirepass foobared</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#把危险的命令给修改成其他名称。比如CONFIG命令可以重命名为一个很难被猜到的命令，这样用户不能使用，而内部工具还能接着使用。</span></span><br><span class="line"><span class="comment"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置成一个空的值，可以禁止一个命令</span></span><br><span class="line"><span class="comment"># rename-command CONFIG &quot;&quot;</span></span><br><span class="line"><span class="comment">################################### LIMITS ####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置能连上redis的最大客户端连接数量。默认是10000个客户端连接。由于redis不区分连接是客户端连接还是内部打开文件或者和slave连接等，所以maxclients最小建议设置到32。如果超过了maxclients，redis会给新的连接发送’max number of clients reached’，并关闭连接。</span></span><br><span class="line"><span class="comment"># maxclients 10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#redis配置的最大内存容量。当内存满了，需要配合maxmemory-policy策略进行处理。注意slave的输出缓冲区是不计算在maxmemory内的。所以为了防止主机内存使用完，建议设置的maxmemory需要更小一些。</span></span><br><span class="line"><span class="comment"># maxmemory &lt;bytes&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#内存容量超过maxmemory后的处理策略。</span></span><br><span class="line"><span class="comment">#volatile-lru：利用LRU算法移除设置过过期时间的key。</span></span><br><span class="line"><span class="comment">#volatile-random：随机移除设置过过期时间的key。</span></span><br><span class="line"><span class="comment">#volatile-ttl：移除即将过期的key，根据最近过期时间来删除（辅以TTL）</span></span><br><span class="line"><span class="comment">#allkeys-lru：利用LRU算法移除任何key。</span></span><br><span class="line"><span class="comment">#allkeys-random：随机移除任何key。</span></span><br><span class="line"><span class="comment">#noeviction：不移除任何key，只是返回一个写错误。</span></span><br><span class="line"><span class="comment">#上面的这些驱逐策略，如果redis没有合适的key驱逐，对于写命令，还是会返回错误。redis将不再接收写请求，只接收get请求。写命令包括：set setnx setex append incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby getset mset msetnx exec sort。</span></span><br><span class="line"><span class="comment"># maxmemory-policy noeviction</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#lru检测的样本数。使用lru或者ttl淘汰算法，从需要淘汰的列表中随机选择sample个key，选出闲置时间最长的key移除。</span></span><br><span class="line"><span class="comment"># maxmemory-samples 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################## APPEND ONLY MODE ###############################</span></span><br><span class="line"><span class="comment">#默认redis使用的是rdb方式持久化，这种方式在许多应用中已经足够用了。但是redis如果中途宕机，会导致可能有几分钟的数据丢失，根据save来策略进行持久化，Append Only File是另一种持久化方式，可以提供更好的持久化特性。Redis会把每次写入的数据在接收后都写入 appendonly.aof 文件，每次启动时Redis都会先把这个文件的数据读入内存里，先忽略RDB文件。</span></span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof文件名</span></span><br><span class="line">appendfilename <span class="string">&quot;appendonly.aof&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#aof持久化策略的配置</span></span><br><span class="line"><span class="comment">#no表示不执行fsync，由操作系统保证数据同步到磁盘，速度最快。</span></span><br><span class="line"><span class="comment">#always表示每次写入都执行fsync，以保证数据同步到磁盘。</span></span><br><span class="line"><span class="comment">#everysec表示每秒执行一次fsync，可能会导致丢失这1s数据。</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在aof重写或者写入rdb文件的时候，会执行大量IO，此时对于everysec和always的aof模式来说，执行fsync会造成阻塞过长时间，no-appendfsync-on-rewrite字段设置为默认设置为no。如果对延迟要求很高的应用，这个字段可以设置为yes，否则还是设置为no，这样对持久化特性来说这是更安全的选择。设置为yes表示rewrite期间对新写操作不fsync,暂时存在内存中,等rewrite完成后再写入，默认为no，建议yes。Linux的默认fsync策略是30秒。可能丢失30秒数据。</span></span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof自动重写配置。当目前aof文件大小超过上一次重写的aof文件大小的百分之多少进行重写，即当aof文件增长到一定大小的时候Redis能够调用bgrewriteaof对日志文件进行重写。当前AOF文件大小是上次日志重写得到AOF文件大小的二倍（设置为100）时，自动启动新的日志重写过程。</span></span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line"><span class="comment">#设置允许重写的最小aof文件大小，避免了达到约定百分比但尺寸仍然很小的情况还要重写</span></span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof文件可能在尾部是不完整的，当redis启动的时候，aof文件的数据被载入内存。重启可能发生在redis所在的主机操作系统宕机后，尤其在ext4文件系统没有加上data=ordered选项（redis宕机或者异常终止不会造成尾部不完整现象。）出现这种现象，可以选择让redis退出，或者导入尽可能多的数据。如果选择的是yes，当截断的aof文件被导入的时候，会自动发布一个log给客户端然后load。如果是no，用户必须手动redis-check-aof修复AOF文件才可以。</span></span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ LUA SCRIPTING ###############################</span></span><br><span class="line"><span class="comment"># 如果达到最大时间限制（毫秒），redis会记个log，然后返回error。当一个脚本超过了最大时限。只有SCRIPT KILL和SHUTDOWN NOSAVE可以用。第一个可以杀没有调write命令的东西。要是已经调用了write，只能用第二个命令杀。</span></span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ REDIS CLUSTER ###############################</span></span><br><span class="line"><span class="comment">#集群开关，默认是不开启集群模式。</span></span><br><span class="line"><span class="comment"># cluster-enabled yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#集群配置文件的名称，每个节点都有一个集群相关的配置文件，持久化保存集群的信息。这个文件并不需要手动配置，这个配置文件有Redis生成并更新，每个Redis集群节点需要一个单独的配置文件，请确保与实例运行的系统中配置文件名称不冲突</span></span><br><span class="line"><span class="comment"># cluster-config-file nodes-6379.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#节点互连超时的阀值。集群节点超时毫秒数</span></span><br><span class="line"><span class="comment"># cluster-node-timeout 15000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在进行故障转移的时候，全部slave都会请求申请为master，但是有些slave可能与master断开连接一段时间了，导致数据过于陈旧，这样的slave不应该被提升为master。该参数就是用来判断slave节点与master断线的时间是否过长。判断方法是：</span></span><br><span class="line"><span class="comment">#比较slave断开连接的时间和(node-timeout * slave-validity-factor) + repl-ping-slave-period</span></span><br><span class="line"><span class="comment">#如果节点超时时间为三十秒, 并且slave-validity-factor为10,假设默认的repl-ping-slave-period是10秒，即如果超过310秒slave将不会尝试进行故障转移 </span></span><br><span class="line"><span class="comment"># cluster-slave-validity-factor 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#master的slave数量大于该值，slave才能迁移到其他孤立master上，如这个参数若被设为2，那么只有当一个主节点拥有2 个可工作的从节点时，它的一个从节点会尝试迁移。</span></span><br><span class="line"><span class="comment"># cluster-migration-barrier 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认情况下，集群全部的slot有节点负责，集群状态才为ok，才能提供服务。设置为no，可以在slot没有全部分配的时候提供服务。不建议打开该配置，这样会造成分区的时候，小分区的master一直在接受写请求，而造成很长时间数据不一致。</span></span><br><span class="line"><span class="comment"># cluster-require-full-coverage yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## SLOW LOG ###################################</span></span><br><span class="line"><span class="comment">###slog log是用来记录redis运行中执行比较慢的命令耗时。当命令的执行超过了指定时间，就记录在slow log中，slog log保存在内存中，所以没有IO操作。</span></span><br><span class="line"><span class="comment">#执行时间比slowlog-log-slower-than大的请求记录到slowlog里面，单位是微秒，所以1000000就是1秒。注意，负数时间会禁用慢查询日志，而0则会强制记录所有命令。</span></span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"><span class="comment">#慢查询日志长度。当一个新的命令被写进日志的时候，最老的那个记录会被删掉。这个长度没有限制。只要有足够的内存就行。你可以通过 SLOWLOG RESET 来释放内存。</span></span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ LATENCY MONITOR ##############################</span></span><br><span class="line"><span class="comment">#延迟监控功能是用来监控redis中执行比较缓慢的一些操作，用LATENCY打印redis实例在跑命令时的耗时图表。只记录大于等于下边设置的值的操作。0的话，就是关闭监视。默认延迟监控功能是关闭的，如果你需要打开，也可以通过CONFIG SET命令动态设置。</span></span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line"><span class="comment">############################# EVENT NOTIFICATION ##############################</span></span><br><span class="line"><span class="comment">#键空间通知使得客户端可以通过订阅频道或模式，来接收那些以某种方式改动了 Redis 数据集的事件。因为开启键空间通知功能需要消耗一些 CPU ，所以在默认配置下，该功能处于关闭状态。</span></span><br><span class="line"><span class="comment">#notify-keyspace-events 的参数可以是以下字符的任意组合，它指定了服务器该发送哪些类型的通知：</span></span><br><span class="line"><span class="comment">##K 键空间通知，所有通知以 __keyspace@__ 为前缀</span></span><br><span class="line"><span class="comment">##E 键事件通知，所有通知以 __keyevent@__ 为前缀</span></span><br><span class="line"><span class="comment">##g DEL 、 EXPIRE 、 RENAME 等类型无关的通用命令的通知</span></span><br><span class="line"><span class="comment">##$ 字符串命令的通知</span></span><br><span class="line"><span class="comment">##l 列表命令的通知</span></span><br><span class="line"><span class="comment">##s 集合命令的通知</span></span><br><span class="line"><span class="comment">##h 哈希命令的通知</span></span><br><span class="line"><span class="comment">##z 有序集合命令的通知</span></span><br><span class="line"><span class="comment">##x 过期事件：每当有过期键被删除时发送</span></span><br><span class="line"><span class="comment">##e 驱逐(evict)事件：每当有键因为 maxmemory 政策而被删除时发送</span></span><br><span class="line"><span class="comment">##A 参数 g$lshzxe 的别名</span></span><br><span class="line"><span class="comment">#输入的参数中至少要有一个 K 或者 E，否则的话，不管其余的参数是什么，都不会有任何 通知被分发。详细使用可以参考http://redis.io/topics/notifications</span></span><br><span class="line"></span><br><span class="line">notify-keyspace-events <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### ADVANCED CONFIG ###############################</span></span><br><span class="line"><span class="comment">#数据量小于等于hash-max-ziplist-entries的用ziplist，大于hash-max-ziplist-entries用hash</span></span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line"><span class="comment">#value大小小于等于hash-max-ziplist-value的用ziplist，大于hash-max-ziplist-value用hash。</span></span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据量小于等于list-max-ziplist-entries用ziplist，大于list-max-ziplist-entries用list。</span></span><br><span class="line">list-max-ziplist-entries 512</span><br><span class="line"><span class="comment">#value大小小于等于list-max-ziplist-value的用ziplist，大于list-max-ziplist-value用list。</span></span><br><span class="line">list-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据量小于等于set-max-intset-entries用iniset，大于set-max-intset-entries用set。</span></span><br><span class="line">set-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据量小于等于zset-max-ziplist-entries用ziplist，大于zset-max-ziplist-entries用zset。</span></span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line"><span class="comment">#value大小小于等于zset-max-ziplist-value用ziplist，大于zset-max-ziplist-value用zset。</span></span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment">#value大小小于等于hll-sparse-max-bytes使用稀疏数据结构（sparse），大于hll-sparse-max-bytes使用稠密的数据结构（dense）。一个比16000大的value是几乎没用的，建议的value大概为3000。如果对CPU要求不高，对空间要求较高的，建议设置到10000左右。</span></span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"><span class="comment">#Redis将在每100毫秒时使用1毫秒的CPU时间来对redis的hash表进行重新hash，可以降低内存的使用。当你的使用场景中，有非常严格的实时性需要，不能够接受Redis时不时的对请求有2毫秒的延迟的话，把这项配置为no。如果没有这么严格的实时性要求，可以设置为yes，以便能够尽可能快的释放内存。</span></span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"><span class="comment">##对客户端输出缓冲进行限制可以强迫那些不从服务器读取数据的客户端断开连接，用来强制关闭传输缓慢的客户端。</span></span><br><span class="line"><span class="comment">#对于normal client，第一个0表示取消hard limit，第二个0和第三个0表示取消soft limit，normal client默认取消限制，因为如果没有寻问，他们是不会接收数据的。</span></span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line"><span class="comment">#对于slave client和MONITER client，如果client-output-buffer一旦超过256mb，又或者超过64mb持续60秒，那么服务器就会立即断开客户端连接。</span></span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line"><span class="comment">#对于pubsub client，如果client-output-buffer一旦超过32mb，又或者超过8mb持续60秒，那么服务器就会立即断开客户端连接。</span></span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis执行任务的频率为1s除以hz。</span></span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"><span class="comment">#在aof重写的时候，如果打开了aof-rewrite-incremental-fsync开关，系统会每32MB执行一次fsync。这对于把文件写入磁盘是有帮助的，可以避免过大的延迟峰值。</span></span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>T</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>新服务器搭建Jenkins</title>
    <url>/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/</url>
    <content><![CDATA[<h2 id="环境基础"><a href="#环境基础" class="headerlink" title="环境基础"></a>环境基础</h2><h3 id="配置虚拟机"><a href="#配置虚拟机" class="headerlink" title="配置虚拟机"></a>配置虚拟机</h3><p>由于公司上网限制需要将虚拟机模式为NAT模式, 一般来说当为NAT模式的网管为 192.168.xx.2</p>
<table>
<thead>
<tr>
<th>VMware中的设置</th>
<th><span style="color:blue"><code>linux</code></span>中的网卡设置</th>
</tr>
</thead>
<tbody><tr>
<td>DHCP设置中<code>起始IP地址</code>，<code>结束IP地址</code></td>
<td><span style="color:blue"><code>IPADDR</code></span>需要设置在 <code>起始IP地址</code>，<code>结束IP地址</code>之间</td>
</tr>
<tr>
<td>NAT设置中的<code>网关IP</code></td>
<td><span style="color:blue"><code>GATEWAY</code></span>,<span style="color:blue"><code>DNS1</code></span> 设置为<code>网关IP</code></td>
</tr>
<tr>
<td>NAT设置中的<code>子网掩码</code></td>
<td><span style="color:blue"><code>NETMASK</code></span>需要设置为 <code>子网掩码</code></td>
</tr>
<tr>
<td>虚拟机网卡的<code>MAC</code>,连接符为<code>-</code></td>
<td><span style="color:blue"><code>HWADDR</code></span>需要设置为 <code>MAC</code> ,连接符为<span style="color:blue"><code>:</code></span></td>
</tr>
</tbody></table>
<h4 id="虚拟网络编辑器"><a href="#虚拟网络编辑器" class="headerlink" title="虚拟网络编辑器"></a>虚拟网络编辑器</h4><p>虚拟机的NAT模式可以在 “编辑” -&gt; “虚拟机网络编辑器”<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215125030058.png" alt="image-20200215125030058"></p>
<h4 id="NAT设置"><a href="#NAT设置" class="headerlink" title="NAT设置"></a>NAT设置</h4><p>这里决定了linux的<span style="color:blue"><code>GATEWAY</code></span>,<span style="color:blue"><code>DNS1</code></span><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215124821110.png" alt="image-20200215124821110"></p>
<h4 id="DHCP设置"><a href="#DHCP设置" class="headerlink" title="DHCP设置"></a>DHCP设置</h4><p>这里决定了linux的<span style="color:blue"><code>IPADDR</code></span><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215125004889.png" alt="image-20200215125004889"></p>
<h4 id="虚拟机网卡设置"><a href="#虚拟机网卡设置" class="headerlink" title="虚拟机网卡设置"></a>虚拟机网卡设置</h4><p>这里决定了linux的<span style="color:blue"><code>HWADDR</code></span><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215130649654.png" alt="image-20200215130649654"></p>
<h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><p>在启动<code>grub</code>菜单，选择编辑选项启动<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/1032090-20161130233025193-1691299631.png" alt="img"></p>
<p>按键盘<code>e</code>键，来进入编辑界面<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/1032090-20161130233127037-710798124.png" alt="img"></p>
<p>找到Linux 16的那一行，将<code>ro</code>改为<code>rw init=/sysroot/bin/sh</code><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/1032090-20161130233144537-1008782378.png" alt="img"></p>
<p>现在按下<code>Control+x</code>，使用单用户模式启动<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/1032090-20161130233155490-57701682.png" alt="img"><br>现在，可以使用下面的命令访问系统</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chroot /sysroot</span><br></pre></td></tr></table></figure>
<p>重置密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure>
<p>更新系统信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch /.autorelabel</span><br></pre></td></tr></table></figure>
<p>退出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chroot <span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<p>重启你的系统 reboot</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>
<h3 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h3><p>查看网卡</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cd &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;</span><br><span class="line">[root@localhost network-scripts]# ls</span><br><span class="line">ifcfg-ens33  ifdown-eth   ifdown-post    ifdown-Team      ifup-aliases  ifup-ipv6   ifup-post    ifup-Team      init.ipv6-global</span><br><span class="line">ifcfg-lo     ifdown-ippp  ifdown-ppp     ifdown-TeamPort  ifup-bnep     ifup-isdn   ifup-ppp     ifup-TeamPort  network-functions</span><br><span class="line">ifdown       ifdown-ipv6  ifdown-routes  ifdown-tunnel    ifup-eth      ifup-plip   ifup-routes  ifup-tunnel    network-functions-ipv6</span><br><span class="line">ifdown-bnep  ifdown-isdn  ifdown-sit     ifup             ifup-ippp     ifup-plusb  ifup-sit     ifup-wireless</span><br><span class="line">[root@localhost network-scripts]# </span><br></pre></td></tr></table></figure>
<p>编辑网卡</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]<span class="comment"># vi ifcfg-ens33</span></span><br><span class="line"></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.235.228</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.235.2</span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">PEERDNS=yes</span><br><span class="line">PEERROUTES=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_PEERDNS=yes</span><br><span class="line">IPV6_PEERROUTES=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=ddc851a6-9f17-46fa-b008-fffec48d00a0</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">HWADDR=18:66:DA:F2:F4:28</span><br><span class="line">DNS1=192.168.235.2</span><br></pre></td></tr></table></figure>
<p>重启网卡并查看效果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# systemctl restart network</span><br><span class="line">[root@localhost network-scripts]# curl www.baidu.com</span><br></pre></td></tr></table></figure>

<h3 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# mv &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo.backup</span><br><span class="line">[root@localhost network-scripts]# curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">[root@localhost network-scripts]# yum makecache</span><br><span class="line">[root@localhost network-scripts]# yum -y install wget</span><br><span class="line">[root@localhost network-scripts]# yum -y install vim</span><br><span class="line">[root@localhost network-scripts]# yum -y install net-tools</span><br><span class="line">[root@localhost network-scripts]# yum -y install iptables-services</span><br></pre></td></tr></table></figure>

<h3 id="selinux"><a href="#selinux" class="headerlink" title="selinux"></a>selinux</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# vim &#x2F;etc&#x2F;selinux&#x2F;config </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># This file controls the state of SELinux on the system.</span><br><span class="line"># SELINUX&#x3D; can take one of these three values:</span><br><span class="line">#     enforcing - SELinux security policy is enforced.</span><br><span class="line">#     permissive - SELinux prints warnings instead of enforcing.</span><br><span class="line">#     disabled - No SELinux policy is loaded.</span><br><span class="line">SELINUX&#x3D;disabled</span><br><span class="line"># SELINUXTYPE&#x3D; can take one of three values:</span><br><span class="line">#     targeted - Targeted processes are protected,</span><br><span class="line">#     minimum - Modification of targeted policy. Only selected processes are protected. </span><br><span class="line">#     mls - Multi Level Security protection.</span><br><span class="line">SELINUXTYPE&#x3D;targeted</span><br></pre></td></tr></table></figure>
<h3 id="iptable"><a href="#iptable" class="headerlink" title="iptable"></a>iptable</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost network-scripts]# iptables -F</span><br><span class="line">[root@localhost network-scripts]# service iptables save</span><br></pre></td></tr></table></figure>
<h3 id="firewalld-service"><a href="#firewalld-service" class="headerlink" title="firewalld.service"></a>firewalld.service</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>
<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure>

<h2 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h2><h3 id="下载并安装JAVA"><a href="#下载并安装JAVA" class="headerlink" title="下载并安装JAVA"></a>下载并安装JAVA</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app</span><br><span class="line">mkdir -p /opt/package/</span><br><span class="line"><span class="built_in">cd</span> /opt/app</span><br><span class="line">wget -P /opt/package https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-x64.tar.gz</span><br><span class="line">tar -zxvf /opt/package/jdk-8u202-linux-x64.tar.gz -C /opt/app</span><br><span class="line">ln -s jdk1.8.0_202 jdk</span><br></pre></td></tr></table></figure>

<h3 id="修改profile"><a href="#修改profile" class="headerlink" title="修改profile"></a>修改profile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/jdk</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="刷新配置并验证"><a href="#刷新配置并验证" class="headerlink" title="刷新配置并验证"></a>刷新配置并验证</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>

<h2 id="安装MAVEN"><a href="#安装MAVEN" class="headerlink" title="安装MAVEN"></a>安装MAVEN</h2><h3 id="下载解压maven"><a href="#下载解压maven" class="headerlink" title="下载解压maven"></a>下载解压maven</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app</span><br><span class="line">mkdir -p /opt/package/</span><br><span class="line"><span class="built_in">cd</span> /opt/app</span><br><span class="line">wget -P /opt/package https://mirrors.huaweicloud.com/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz</span><br><span class="line">tar -zxvf /opt/package/apache-maven-3.6.3-bin.tar.gz -C /opt/app</span><br><span class="line">ln -s apache-maven-3.6.3 maven</span><br></pre></td></tr></table></figure>

<h3 id="修改profile-1"><a href="#修改profile-1" class="headerlink" title="修改profile"></a>修改profile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/opt/app/maven</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$MAVEN_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="刷新配置并验证-1"><a href="#刷新配置并验证-1" class="headerlink" title="刷新配置并验证"></a>刷新配置并验证</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">mvn -v</span><br></pre></td></tr></table></figure>

<h3 id="设置配置文件"><a href="#设置配置文件" class="headerlink" title="设置配置文件"></a>设置配置文件</h3><p>创建仓库目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app/data/repository</span><br></pre></td></tr></table></figure>
<p>编辑配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /opt/app/maven/conf/settings.xml</span><br></pre></td></tr></table></figure>

<p>完整配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment">or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment">distributed with this work for additional information</span></span><br><span class="line"><span class="comment">regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment">to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment">&quot;License&quot;); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment">with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Unless required by applicable law or agreed to in writing,</span></span><br><span class="line"><span class="comment">software distributed under the License is distributed on an</span></span><br><span class="line"><span class="comment">&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span><br><span class="line"><span class="comment">KIND, either express or implied.  See the License for the</span></span><br><span class="line"><span class="comment">specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment">under the License.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> | This is the configuration file for Maven. It can be specified at two levels:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  1. User Level. This settings.xml file provides configuration for a single user,</span></span><br><span class="line"><span class="comment"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -s /path/to/user/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  2. Global Level. This settings.xml file provides configuration for all Maven</span></span><br><span class="line"><span class="comment"> |                 users on a machine (assuming they&#x27;re all using the same Maven</span></span><br><span class="line"><span class="comment"> |                 installation). It&#x27;s normally provided in</span></span><br><span class="line"><span class="comment"> |                 $&#123;maven.conf&#125;/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -gs /path/to/global/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | The sections in this sample file are intended to give you a running start at</span></span><br><span class="line"><span class="comment"> | getting the most out of your Maven installation. Where appropriate, the default</span></span><br><span class="line"><span class="comment"> | values (values used when the setting is not specified) are provided.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/opt/app/data/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- interactiveMode</span></span><br><span class="line"><span class="comment">   | This will determine whether maven prompts you when it needs input. If set to false,</span></span><br><span class="line"><span class="comment">   | maven will use a sensible default value, perhaps based on some other setting, for</span></span><br><span class="line"><span class="comment">   | the parameter in question.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: true</span></span><br><span class="line"><span class="comment">  &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- offline</span></span><br><span class="line"><span class="comment">   | Determines whether maven should attempt to connect to the network when executing a build.</span></span><br><span class="line"><span class="comment">   | This will have an effect on artifact downloads, artifact deployment, and others.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: false</span></span><br><span class="line"><span class="comment">  &lt;offline&gt;false&lt;/offline&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- pluginGroups</span></span><br><span class="line"><span class="comment">   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</span></span><br><span class="line"><span class="comment">   | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers</span></span><br><span class="line"><span class="comment">   | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- pluginGroup</span></span><br><span class="line"><span class="comment">     | Specifies a further group identifier to use for plugin lookup.</span></span><br><span class="line"><span class="comment">    &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- proxies</span></span><br><span class="line"><span class="comment">   | This is a list of proxies which can be used on this machine to connect to the network.</span></span><br><span class="line"><span class="comment">   | Unless otherwise specified (by system property or command-line switch), the first proxy</span></span><br><span class="line"><span class="comment">   | specification in this list marked as active will be used.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- proxy</span></span><br><span class="line"><span class="comment">     | Specification for one proxy, to be used in connecting to the network.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;proxy&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;optional&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;active&gt;true&lt;/active&gt;</span></span><br><span class="line"><span class="comment">      &lt;protocol&gt;http&lt;/protocol&gt;</span></span><br><span class="line"><span class="comment">      &lt;username&gt;proxyuser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">      &lt;password&gt;proxypass&lt;/password&gt;</span></span><br><span class="line"><span class="comment">      &lt;host&gt;proxy.host.net&lt;/host&gt;</span></span><br><span class="line"><span class="comment">      &lt;port&gt;80&lt;/port&gt;</span></span><br><span class="line"><span class="comment">      &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</span></span><br><span class="line"><span class="comment">    &lt;/proxy&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- servers</span></span><br><span class="line"><span class="comment">   | This is a list of authentication profiles, keyed by the server-id used within the system.</span></span><br><span class="line"><span class="comment">   | Authentication profiles can be used whenever maven must make a connection to a remote server.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- server</span></span><br><span class="line"><span class="comment">     | Specifies the authentication information to use when connecting to a particular server, identified by</span></span><br><span class="line"><span class="comment">     | a unique name within the system (referred to by the &#x27;id&#x27; attribute below).</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> You should either specify username/password OR privateKey/passphrase, since these pairings are</span></span><br><span class="line"><span class="comment">     |       used together.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;server&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;deploymentRepo&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;username&gt;repouser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">      &lt;password&gt;repopwd&lt;/password&gt;</span></span><br><span class="line"><span class="comment">    &lt;/server&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Another sample, using keys to authenticate.</span></span><br><span class="line"><span class="comment">    &lt;server&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;siteServer&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;</span></span><br><span class="line"><span class="comment">      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</span></span><br><span class="line"><span class="comment">    &lt;/server&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- mirrors</span></span><br><span class="line"><span class="comment">   | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | It works like this: a POM may declare a repository to use in resolving certain artifacts.</span></span><br><span class="line"><span class="comment">   | However, this repository may have problems with heavy traffic at times, so people have mirrored</span></span><br><span class="line"><span class="comment">   | it to several places.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | That repository definition will have a unique id, so we can create a mirror reference for that</span></span><br><span class="line"><span class="comment">   | repository, to be used as an alternate download site. The mirror site will be the preferred</span></span><br><span class="line"><span class="comment">   | server for that repository.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>huaweicloud<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>华为云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.huaweicloud.com/repository/maven/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>repo2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo2.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">mirror</span>&gt;</span> </span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>nuiton<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>nuiton<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.nuiton.org/release/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>          </span><br><span class="line">	<span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>boundlessgeo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.boundlessgeo.com/main/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">     | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">      &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">      &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">    &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- profiles</span></span><br><span class="line"><span class="comment">   | This is a list of profiles which can be activated in a variety of ways, and which can modify</span></span><br><span class="line"><span class="comment">   | the build process. Profiles provided in the settings.xml are intended to provide local machine-</span></span><br><span class="line"><span class="comment">   | specific paths and repository locations which allow the build to work in the local environment.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | For example, if you have an integration testing plugin - like cactus - that needs to know where</span></span><br><span class="line"><span class="comment">   | your Tomcat instance is installed, you can provide a variable here such that the variable is</span></span><br><span class="line"><span class="comment">   | dereferenced during the build process to configure the cactus plugin.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</span></span><br><span class="line"><span class="comment">   | section of this document (settings.xml) - will be discussed later. Another way essentially</span></span><br><span class="line"><span class="comment">   | relies on the detection of a system property, either matching a particular value for the property,</span></span><br><span class="line"><span class="comment">   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</span></span><br><span class="line"><span class="comment">   | value of &#x27;1.4&#x27; might activate a profile when the build is executed on a JDK version of &#x27;1.4.2_07&#x27;.</span></span><br><span class="line"><span class="comment">   | Finally, the list of active profiles can be specified directly from the command line.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | <span class="doctag">NOTE:</span> For profiles defined in the settings.xml, you are restricted to specifying only artifact</span></span><br><span class="line"><span class="comment">   |       repositories, plugin repositories, and free-form properties to be used as configuration</span></span><br><span class="line"><span class="comment">   |       variables for plugins in the POM.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- profile</span></span><br><span class="line"><span class="comment">     | Specifies a set of introductions to the build process, to be activated using one or more of the</span></span><br><span class="line"><span class="comment">     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</span></span><br><span class="line"><span class="comment">     | or the command line, profiles have to have an ID that is unique.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | An encouraged best practice for profile identification is to use a consistent naming convention</span></span><br><span class="line"><span class="comment">     | for profiles, such as &#x27;env-dev&#x27;, &#x27;env-test&#x27;, &#x27;env-production&#x27;, &#x27;user-jdcasey&#x27;, &#x27;user-brett&#x27;, etc.</span></span><br><span class="line"><span class="comment">     | This will make it more intuitive to understand what the set of introduced profiles is attempting</span></span><br><span class="line"><span class="comment">     | to accomplish, particularly when you only have a list of profile id&#x27;s for debug.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</span></span><br><span class="line"><span class="comment">    &lt;profile&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;jdk-1.4&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;activation&gt;</span></span><br><span class="line"><span class="comment">        &lt;jdk&gt;1.4&lt;/jdk&gt;</span></span><br><span class="line"><span class="comment">      &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;repositories&gt;</span></span><br><span class="line"><span class="comment">        &lt;repository&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;jdk14&lt;/id&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt;</span></span><br><span class="line"><span class="comment">          &lt;layout&gt;default&lt;/layout&gt;</span></span><br><span class="line"><span class="comment">          &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;</span></span><br><span class="line"><span class="comment">        &lt;/repository&gt;</span></span><br><span class="line"><span class="comment">      &lt;/repositories&gt;</span></span><br><span class="line"><span class="comment">    &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     | Here is another profile, activated by the system property &#x27;target-env&#x27; with a value of &#x27;dev&#x27;,</span></span><br><span class="line"><span class="comment">     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration</span></span><br><span class="line"><span class="comment">     | might hypothetically look like:</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | ...</span></span><br><span class="line"><span class="comment">     | &lt;plugin&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     |   &lt;configuration&gt;</span></span><br><span class="line"><span class="comment">     |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;/configuration&gt;</span></span><br><span class="line"><span class="comment">     | &lt;/plugin&gt;</span></span><br><span class="line"><span class="comment">     | ...</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> If you just wanted to inject this configuration whenever someone set &#x27;target-env&#x27; to</span></span><br><span class="line"><span class="comment">     |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;profile&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;env-dev&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;activation&gt;</span></span><br><span class="line"><span class="comment">        &lt;property&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;target-env&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;value&gt;dev&lt;/value&gt;</span></span><br><span class="line"><span class="comment">        &lt;/property&gt;</span></span><br><span class="line"><span class="comment">      &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;properties&gt;</span></span><br><span class="line"><span class="comment">        &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</span></span><br><span class="line"><span class="comment">      &lt;/properties&gt;</span></span><br><span class="line"><span class="comment">    &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- activeProfiles</span></span><br><span class="line"><span class="comment">   | List of profiles that are active for all builds.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;activeProfiles&gt;</span></span><br><span class="line"><span class="comment">    &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">    &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">  &lt;/activeProfiles&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="安装NODEJS"><a href="#安装NODEJS" class="headerlink" title="安装NODEJS"></a>安装NODEJS</h2><h3 id="下载解压NODEJS"><a href="#下载解压NODEJS" class="headerlink" title="下载解压NODEJS"></a>下载解压NODEJS</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app</span><br><span class="line">mkdir -p /opt/package/</span><br><span class="line"><span class="built_in">cd</span> /opt/app</span><br><span class="line">wget -P /opt/package https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/v12.15.0/node-v12.15.0-linux-x64.tar.gz</span><br><span class="line">tar -zxvf /opt/package/node-v12.15.0-linux-x64.tar.gz -C /opt/app</span><br><span class="line">ln -s node-v12.15.0-linux-x64 node</span><br></pre></td></tr></table></figure>

<h3 id="修改profile-2"><a href="#修改profile-2" class="headerlink" title="修改profile"></a>修改profile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> NODE_HOME=/opt/app/node</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$NODE_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="刷新配置并验证-2"><a href="#刷新配置并验证-2" class="headerlink" title="刷新配置并验证"></a>刷新配置并验证</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<h3 id="安装cnpm-yarn"><a href="#安装cnpm-yarn" class="headerlink" title="安装cnpm,yarn"></a>安装cnpm,yarn</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">cnpm install -g yarn</span><br><span class="line"></span><br><span class="line">cnpm -v</span><br><span class="line">yarn -v</span><br></pre></td></tr></table></figure>


<h2 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbG92ZXlvdXlvdTYxNi9wLzg3MTQ1NDQuaHRtbA==" title="https://www.cnblogs.com/loveyouyou616/p/8714544.html">https://www.cnblogs.com/loveyouyou616/p/8714544.html<i class="fa fa-external-link"></i></span><br><code>jenkins</code>以<code>rpm</code>安装方式的目录约定</p>
</blockquote>
<table>
<thead>
<tr>
<th>路径</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>/var/log/jenkins</code></td>
<td><code>jenkins</code>日志目录</td>
</tr>
<tr>
<td><code>/var/lib/jenkins</code></td>
<td><code>war</code>包解压目录</td>
</tr>
<tr>
<td><code>/var/cache/jenkins</code></td>
<td>缓存目录</td>
</tr>
<tr>
<td><code>/etc/sysconfig/jenkins</code></td>
<td><code>jenkins</code>参数配置文件</td>
</tr>
<tr>
<td><code>/etc/yum.repos.d/jenkins.repo</code></td>
<td><code>jenkins</code>的<code>rpm</code>仓库配置</td>
</tr>
</tbody></table>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/package/</span><br><span class="line"><span class="built_in">cd</span> /opt/package</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/jenkins/redhat-stable/jenkins-2.204.2-1.1.noarch.rpm</span><br><span class="line">rpm -ivh jenkins-2.204.2-1.1.noarch.rpm  -C /opt/app</span><br></pre></td></tr></table></figure>

<h3 id="修改端口"><a href="#修改端口" class="headerlink" title="修改端口"></a>修改端口</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;sysconfig&#x2F;jenkins</span><br><span class="line"></span><br><span class="line">#修改端口号</span><br><span class="line">JENKINS_PORT&#x3D;&quot;8083&quot;</span><br><span class="line">#修改用户权限</span><br><span class="line">JENKINS_USER&#x3D;&quot;root&quot;</span><br></pre></td></tr></table></figure>
<h3 id="启动jenkins"><a href="#启动jenkins" class="headerlink" title="启动jenkins"></a>启动jenkins</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service jenkins start</span><br></pre></td></tr></table></figure>

<h2 id="NGINX"><a href="#NGINX" class="headerlink" title="NGINX"></a>NGINX</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYm9vbnlhL3AvNzkwNzk5OS5odG1s" title="https://www.cnblogs.com/boonya/p/7907999.html">https://www.cnblogs.com/boonya/p/7907999.html<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h3 id="下载解压nginx"><a href="#下载解压nginx" class="headerlink" title="下载解压nginx"></a>下载解压nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础软件</span></span><br><span class="line">yum install gcc-c++</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br><span class="line"></span><br><span class="line">mkdir -p /opt/package/</span><br><span class="line">wget -P /opt/package https://mirrors.huaweicloud.com/nginx/nginx-1.17.tar.gz</span><br><span class="line">tar -zxvf /opt/package/nginx-1.17.tar.gz  -C /opt/app</span><br></pre></td></tr></table></figure>

<h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_ssl_module</span><br></pre></td></tr></table></figure>

<h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="查找安装路径"><a href="#查找安装路径" class="headerlink" title="查找安装路径"></a>查找安装路径</h3><p>环境变量在安装时已经自动配置完成了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx: /usr/local/nginx</span></span><br></pre></td></tr></table></figure>

<h3 id="启动、停止、重启nginx"><a href="#启动、停止、重启nginx" class="headerlink" title="启动、停止、重启nginx"></a>启动、停止、重启nginx</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># cd &#x2F;usr&#x2F;local&#x2F;nginx</span><br><span class="line">.&#x2F;nginx </span><br><span class="line">.&#x2F;nginx -s stop #此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。</span><br><span class="line">.&#x2F;nginx -s quit # 此方式停止步骤是待nginx进程处理任务完毕进行停止。</span><br><span class="line">.&#x2F;nginx -s reload</span><br><span class="line">.&#x2F;nginx -s quit &amp;&amp; .&#x2F;nginx #重启</span><br></pre></td></tr></table></figure>

<h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/rc.local</span><br><span class="line"><span class="comment"># 增加一行 </span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>
<p>设置权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 755 rc.local</span><br></pre></td></tr></table></figure>
<h2 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h2><h3 id="下载解压Redis"><a href="#下载解压Redis" class="headerlink" title="下载解压Redis"></a>下载解压Redis</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础软件</span></span><br><span class="line">yum install -y gcc</span><br><span class="line"></span><br><span class="line">mkdir -p /opt/package/</span><br><span class="line">wget -P /opt/package https://mirrors.huaweicloud.com/redis/redis-5.0.7.tar.gz</span><br><span class="line">tar -zxvf /opt/package/redis-5.0.7.tar.gz  -C /opt/app</span><br><span class="line">ln -s redis-5.0.7 redis</span><br></pre></td></tr></table></figure>

<h3 id="编译安装-1"><a href="#编译安装-1" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#daemonize no 改为 daemonize yes</span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#注释 bind 127.0.0.1</span></span><br><span class="line"><span class="comment">#bind 127.0.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># protected-mode yes 改为 protected-mode no</span></span><br><span class="line">protected-mode yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置密码(非必须)</span></span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure>
<h3 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/app/redis/src/redis-server /opt/app/redis/redis.conf</span><br></pre></td></tr></table></figure>

<h3 id="关闭redis"><a href="#关闭redis" class="headerlink" title="关闭redis"></a>关闭redis</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/app/redis/src/redis-cli shutdown</span><br></pre></td></tr></table></figure>
<p>当设置密码后关闭方法<code>/opt/app/redis/src/redis-cli -a [password]</code>按下回车后<code>shutdown</code></p>
<p>强制杀死</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -ef | grep redis | awk ‘&#123;<span class="built_in">print</span> <span class="variable">$2</span>&#125;’ | xargs <span class="built_in">kill</span> -9</span><br></pre></td></tr></table></figure>



<h2 id="配置jenkins插件转发"><a href="#配置jenkins插件转发" class="headerlink" title="配置jenkins插件转发"></a>配置jenkins插件转发</h2><blockquote>
<p>此链接使用方法已经过旧了，本文已更新<br><span class="exturl" data-url="aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC9WQVNLUy9ibG9nLzMxMDYzMTQ=" title="https://my.oschina.net/VASKS/blog/3106314">https://my.oschina.net/VASKS/blog/3106314<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h3 id="修改远程插件地址"><a href="#修改远程插件地址" class="headerlink" title="修改远程插件地址"></a>修改远程插件地址</h3><p>把 <code>http://updates.jenkins-ci.org/update-center.json</code>改成<code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /var/lib/jenkins/hudson.model.UpdateCenter.xml</span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">&#x27;1.1&#x27;</span> encoding=<span class="string">&#x27;UTF-8&#x27;</span>?&gt;</span><br><span class="line">&lt;sites&gt;</span><br><span class="line">  &lt;site&gt;</span><br><span class="line">    &lt;id&gt;default&lt;/id&gt;</span><br><span class="line">    &lt;url&gt;https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json&lt;/url&gt;</span><br><span class="line">  &lt;/site&gt;</span><br><span class="line">&lt;/sites&gt;</span><br></pre></td></tr></table></figure>
<h3 id="修改host文件"><a href="#修改host文件" class="headerlink" title="修改host文件"></a>修改host文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">127.0.0.1 updates.jenkins-ci.org</span><br></pre></td></tr></table></figure>
<h3 id="修改nginx配置文件"><a href="#修改nginx配置文件" class="headerlink" title="修改nginx配置文件"></a>修改nginx配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>

<p>修改核心配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name updates.jenkins-ci.org;</span><br><span class="line"></span><br><span class="line">    location /download/ &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_pass https://mirrors.tuna.tsinghua.edu.cn/jenkins/;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Accept-Encoding &quot;&quot;;</span><br><span class="line">        #proxy_set_header User-Agent &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.49 Safari/537.36&quot;;</span><br><span class="line">        proxy_set_header Accept-Language &quot;zh-CN&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">    #error_page   404   /404.html;</span><br><span class="line"></span><br><span class="line">    location ~ /\.</span><br><span class="line">    &#123;   </span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log  /usr/local/nginx/logs/mirror.access.log;</span><br><span class="line">    error_log   /usr/local/nginx/logs/mirror.error.log;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>完整配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server&#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name updates.jenkins-ci.org;</span><br><span class="line"></span><br><span class="line">        location /download/ &#123;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_pass https://mirrors.tuna.tsinghua.edu.cn/jenkins/;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_set_header Accept-Encoding &quot;&quot;;</span><br><span class="line">            #proxy_set_header User-Agent &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.49 Safari/537.36&quot;;</span><br><span class="line">            proxy_set_header Accept-Language &quot;zh-CN&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">        #error_page   404   /404.html;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log  /usr/local/nginx/logs/mirror.access.log;</span><br><span class="line">        error_log   /usr/local/nginx/logs/mirror.error.log;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="重启jenkins，nginx"><a href="#重启jenkins，nginx" class="headerlink" title="重启jenkins，nginx"></a>重启jenkins，nginx</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart jenkins</span><br><span class="line">./nginx -s quit &amp;&amp; ./nginx</span><br></pre></td></tr></table></figure>


<h2 id="JENKINS配置"><a href="#JENKINS配置" class="headerlink" title="JENKINS配置"></a>JENKINS配置</h2><h3 id="启动以及基础配置"><a href="#启动以及基础配置" class="headerlink" title="启动以及基础配置"></a>启动以及基础配置</h3><p>首次进入会要求输入初始密码如下图，<br>初始密码在：<code>/var/lib/jenkins/secrets/initialAdminPassword</code><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/463776-20180404082707338-423425522.png" alt="img"></p>
<h3 id="安装默认插件"><a href="#安装默认插件" class="headerlink" title="安装默认插件"></a>安装默认插件</h3><p>选择“Install suggested plugins”安装默认的插件，下面Jenkins就会自己去下载相关的插件进行安装。<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/463776-20180404082737817-954357781.png" alt="img"><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/463776-20180404082804576-535120660.png" alt="img"></p>
<h3 id="设置超级管理员账号"><a href="#设置超级管理员账号" class="headerlink" title="设置超级管理员账号"></a>设置超级管理员账号</h3><p>初次进入后可能会设置用户名,密码。<br>这里用户名设置为<code>admin</code><br>这里密码设置为<code>admin</code><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/463776-20180404082758228-1857220561.png" alt="img"></p>
<h3 id="安装额外插件"><a href="#安装额外插件" class="headerlink" title="安装额外插件"></a>安装额外插件</h3><p><code>系统管理 </code>-&gt; <code>插件管理</code><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215162318535.png" alt="image-20200215162318535"><br>分别安装</p>
<ul>
<li><code>GitLab Plugin</code></li>
<li><code>GitLab Hook Plugin</code></li>
<li><code>NodeJS Plugin</code></li>
<li><code>Maven Integration plugin</code></li>
<li><code>Git parameter</code></li>
<li><code>Publish Over SSH</code></li>
<li><code>Python</code><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215164130755.png" alt="image-20200215164130755"><br>等待重启完成即可<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215164647114.png" alt="image-20200215164647114"></li>
</ul>
<h3 id="全局工具配置"><a href="#全局工具配置" class="headerlink" title="全局工具配置"></a>全局工具配置</h3><p><code>系统管理</code> -&gt; <code>全局工具配置</code><br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215165244622.png" alt="image-20200215165244622"></p>
<h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><p>由于<code>git</code>已经安装，全部默认<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215165510092.png" alt="image-20200215165510092"></p>
<h4 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h4><p>指向<code>$MAVEN_HOME</code>即可<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215165529058.png" alt="image-20200215165529058"></p>
<h4 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h4><p>指向<code>$NODE_HOME</code>即可<br><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/image-20200215165550706.png" alt="image-20200215165550706"></p>
<p>配置完成后点击保存按钮</p>
<h2 id="JENKINS部署"><a href="#JENKINS部署" class="headerlink" title="JENKINS部署"></a>JENKINS部署</h2><h3 id="JENKINS部署SpringCloud项目"><a href="#JENKINS部署SpringCloud项目" class="headerlink" title="JENKINS部署SpringCloud项目"></a>JENKINS部署SpringCloud项目</h3><p><code>新建任务</code> -&gt; <code>构建一个maven项目</code></p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/Jenkins_SpringCloud.png" alt="image-20200215165550706"></p>
<h4 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h4><p>maven跳过测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clean install -Dmaven.test.skip=<span class="literal">true</span> -Ptest</span><br></pre></td></tr></table></figure>

<h4 id="Pre-Steps"><a href="#Pre-Steps" class="headerlink" title="Pre Steps"></a>Pre Steps</h4><p>关闭已经启动项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pid=`ps -ef | grep -n <span class="string">&#x27;netop-.*\/target\/netop-.*\.jar&#x27;</span> | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$pid</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;kill -9:&quot;</span> <span class="variable">$pid</span></span><br><span class="line">    <span class="built_in">kill</span> -9 <span class="variable">$pid</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h4 id="Post-Steps"><a href="#Post-Steps" class="headerlink" title="Post Steps"></a>Post Steps</h4><p>启动新项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /var/<span class="built_in">log</span>/netop/</span><br><span class="line">rm -rf /var/<span class="built_in">log</span>/netop/*</span><br><span class="line"><span class="built_in">cd</span> /var/lib/jenkins/workspace/NETOP</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-register/target/netop-register.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/register.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-gateway/target/netop-gateway.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/gateway.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-auth/target/netop-auth.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/auth.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-upms/netop-upms-biz/target/netop-upms-biz.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/upms-biz.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-coveroptim/target/netop-coveroptim.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/coveroptim.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-map/target/netop-map.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/map.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-config/target/netop-config.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/config.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<h3 id="JENKINS部署NodeJs项目"><a href="#JENKINS部署NodeJs项目" class="headerlink" title="JENKINS部署NodeJs项目"></a>JENKINS部署NodeJs项目</h3><p><code>新建任务</code> -&gt; <code>构建一个自由风格的软件项目</code></p>
<h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p><img src="/2020/02/15/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAJenkins/Jenkins_NODEJS.png" alt="image-20200215165550706"></p>
<h4 id="停止旧应用"><a href="#停止旧应用" class="headerlink" title="停止旧应用"></a>停止旧应用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pid=`ps -ef | grep -n <span class="string">&#x27;NETOP_UI\/node_modules\/\.bin/vue-cli-service serve&#x27;</span> | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$pid</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;kill -9:&quot;</span> <span class="variable">$pid</span></span><br><span class="line">    <span class="built_in">kill</span> -9 <span class="variable">$pid</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h4 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oldIP=172.30.5.32</span><br><span class="line">newIP=172.30.4.203</span><br><span class="line">sed -i <span class="string">&#x27;s/&#x27;</span><span class="variable">$oldIP</span><span class="string">&#x27;/&#x27;</span><span class="variable">$newIP</span><span class="string">&#x27;/g&#x27;</span> `grep -rl <span class="variable">$oldIP</span> ./`</span><br><span class="line">sed -i <span class="string">&#x27;s/&#x27;</span>8080<span class="string">&#x27;/&#x27;</span>8888<span class="string">&#x27;/g&#x27;</span> vue.config.js</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm install -g cnpm --registry=https://registry.npm.taobao.org</span></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/netop_ui/</span><br><span class="line">rm -rf /var/<span class="built_in">log</span>/netop_ui/*</span><br><span class="line"></span><br><span class="line">npm run pre</span><br><span class="line">BUILD_ID=dontKillMe nohup npm run dev &gt; /var/<span class="built_in">log</span>/netop_ui/dev.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<h2 id="日产运维"><a href="#日产运维" class="headerlink" title="日产运维"></a>日产运维</h2><h3 id="根据进程查询来源程序"><a href="#根据进程查询来源程序" class="headerlink" title="根据进程查询来源程序"></a>根据进程查询来源程序</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum -y install net-tools</span></span><br><span class="line">ps aux|grep nginx</span><br></pre></td></tr></table></figure>

<h3 id="根据端口号查询进程"><a href="#根据端口号查询进程" class="headerlink" title="根据端口号查询进程"></a>根据端口号查询进程</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -tunlp | grep 8080</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>java</tag>
        <tag>jenkins</tag>
        <tag>nodejs</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>深究Spring中Bean的生命周期</title>
    <url>/2020/03/15/%E6%B7%B1%E7%A9%B6Spring%E4%B8%ADBean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
    <content><![CDATA[<blockquote>
<p>两篇文章结合起来看<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vamF2YXpoaXlpbi9wLzEwOTA1Mjk0Lmh0bWw=" title="https://www.cnblogs.com/javazhiyin/p/10905294.html">https://www.cnblogs.com/javazhiyin/p/10905294.html<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EzMjczNjkyMzgvYXJ0aWNsZS9kZXRhaWxzLzUyMTkzODIy" title="https://blog.csdn.net/a327369238/article/details/52193822">https://blog.csdn.net/a327369238/article/details/52193822<i class="fa fa-external-link"></i></span><br><img src="/2020/03/15/%E6%B7%B1%E7%A9%B6Spring%E4%B8%ADBean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/image-20200315231932906.png" alt="image-20200315231932906"></p>
</blockquote>
<h2 id="Bean-的完整生命周期"><a href="#Bean-的完整生命周期" class="headerlink" title="Bean 的完整生命周期"></a>Bean 的完整生命周期</h2><p>在传统的Java应用中，bean的生命周期很简单，使用Java关键字 new 进行Bean 的实例化，然后该Bean 就能够使用了。一旦bean不再被使用，则由Java自动进行垃圾回收。相比之下，Spring管理Bean的生命周期就复杂多了，正确理解Bean 的生命周期非常重要，因为Spring对Bean的管理可扩展性非常强，下面展示了一个Bean的构造过程</p>
<p><img src="/2020/03/15/%E6%B7%B1%E7%A9%B6Spring%E4%B8%ADBean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/image-20200315223222401.png" alt="image-20200315223222401"></p>
<ul>
<li>Bean 的生命周期<ul>
<li>Spring启动，查找并加载需要被Spring管理的bean，进行Bean的实例化</li>
<li>Bean实例化后对将Bean的引入和值注入到Bean的属性中</li>
<li>如果Bean实现了<code>BeanNameAware</code>接口的话，Spring将Bean的Id传递给<code>setBeanName()</code>方法</li>
<li>如果Bean实现了<code>BeanFactoryAware</code>接口的话，Spring将调用<code>setBeanFactory()</code>方法，将BeanFactory容器实例传入</li>
<li>如果Bean实现了<code>ApplicationContextAware</code>接口的话，Spring将调用Bean的<code>setApplicationContext()</code>方法，将bean所在应用上下文引用传入进来。</li>
<li>如果Bean实现了<code>BeanPostProcessor</code>接口，Spring就将调用他们的<code>postProcessBeforeInitialization()</code>方法。</li>
<li>如果Bean 实现了<code>InitializingBean</code>接口，Spring将调用他们的<code>afterPropertiesSet()</code>方法。类似的，如果bean使用<code>init-method</code>声明了初始化方法，该方法也会被调用</li>
<li>如果Bean 实现了<code>BeanPostProcessor</code>接口，Spring就将调用他们的<code>postProcessAfterInitialization()</code>方法。</li>
<li>此时，Bean已经准备就绪，可以被应用程序使用了。他们将一直驻留在应用上下文中，直到应用上下文被销毁。</li>
<li>如果bean实现了<code>DisposableBean</code>接口，Spring将调用它的<code>destory()</code>接口方法，同样，如果bean使用了<code>destory-method</code> 声明销毁方法，该方法也会被调用。</li>
</ul>
</li>
</ul>
<blockquote>
<p>上面是Spring 中Bean的核心接口和生命周期，面试回答上述过程已经足够了。但是翻阅JavaDoc文档发现除了以上接口外，还有另外的初始化过程涉及的接口：<br>摘自org.springframework.beans.factory.BeanFactory， 全部相关接口如下，上述已有的就不用着重标注，把额外的相关接口着重标注下</p>
</blockquote>
<p><img src="/2020/03/15/%E6%B7%B1%E7%A9%B6Spring%E4%B8%ADBean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/image-20200315223540280.png" alt="image-20200315223540280"></p>
<p>文字解释如下：</p>
<ul>
<li><strong>初始化</strong><ul>
<li><code>BeanNameAware.setBeanName() </code>在创建此bean的bean工厂中设置bean的名称，在普通属性设置之后调用，在<code>InitializinngBean.afterPropertiesSet()</code>方法之前调用</li>
<li><code>BeanClassLoaderAware.setBeanClassLoader()</code>: 在普通属性设置之后，<code>InitializingBean.afterPropertiesSet()</code>之前调用</li>
<li><code>BeanFactoryAware.setBeanFactory()</code> : 回调提供了自己的bean实例工厂，在普通属性设置之后，在<code>InitializingBean.afterPropertiesSet()</code>或者自定义初始化方法之前调用</li>
<li><code>EnvironmentAware.setEnvironment()</code>: 设置environment在组件使用时调用</li>
<li><code>EmbeddedValueResolverAware.setEmbeddedValueResolver()</code>: 设置<code>StringValueResolver</code> 用来解决嵌入式的值域问题</li>
<li><code>ResourceLoaderAware.setResourceLoader()</code>: 在普通bean对象之后调用，在<code>afterPropertiesSet</code> 或者自定义的<code>init-method</code> 之前调用，在 <code>ApplicationContextAware</code>之前调用。</li>
<li><code>ApplicationEventPublisherAware.setApplicationEventPublisher()</code>: 在普通bean属性之后调用，在初始化调用<code>afterPropertiesSet</code> 或者自定义初始化方法之前调用。在<code>ApplicationContextAware</code> 之前调用。</li>
<li><code>MessageSourceAware.setMessageSource()</code>: 在普通bean属性之后调用，在初始化调用<code>afterPropertiesSet</code> 或者自定义初始化方法之前调用，在 <code>ApplicationContextAware</code>之前调用。</li>
<li><code>ApplicationContextAware.setApplicationContext()</code>: 在普通Bean对象生成之后调用，在<code>InitializingBean.afterPropertiesSet</code>之前调用或者用户自定义初始化方法之前。在<code>ResourceLoaderAware.setResourceLoader</code>，<code>ApplicationEventPublisherAware.setApplicationEventPublisher</code>，<code>MessageSourceAware</code>之后调用。</li>
<li><code>ServletContextAware.setServletContext()</code>: 运行时设置<code>ServletContext</code>，在普通bean初始化后调用，在<code>InitializingBean.afterPropertiesSet</code>之前调用，在<code>ApplicationContextAware</code> 之后调用注：是在<code>WebApplicationContext</code> 运行时</li>
<li><code>BeanPostProcessor.postProcessBeforeInitialization()</code> : 将此<code>BeanPostProcessor</code> 应用于给定的新bean实例 在任何bean初始化回调方法(像是<code>InitializingBean.afterPropertiesSet</code>或者自定义的初始化方法）之前调用。这个bean将要准备填充属性的值。返回的bean示例可能被普通对象包装，默认实现返回是一个bean。</li>
<li><code>BeanPostProcessor.postProcessAfterInitialization()</code> : 将此BeanPostProcessor 应用于给定的新bean实例 在任何bean初始化回调方法(<code>InitializingBean.afterPropertiesSet</code>或者自定义的初始化方法)之后调用。这个bean将要准备填充属性的值。返回的bean示例可能被普通对象包装</li>
<li><code>InitializingBean.afterPropertiesSet()</code>: 被<code>BeanFactory</code>在设置所有bean属性之后调用(并且满足<code>BeanFactory</code> 和 <code>ApplicationContextAware</code>)。</li>
</ul>
</li>
<li><strong>销毁</strong>（在<code>BeanFactory</code> 关闭的时候，Bean的生命周期会调用如下方法）<ul>
<li><code>DestructionAwareBeanPostProcessor.postProcessBeforeDestruction()</code>: 在销毁之前将此<code>BeanPostProcessor </code>应用于给定的bean实例。能够调用自定义回调，像是<code>DisposableBean</code> 的销毁和自定义销毁方法，这个回调仅仅适用于工厂中的单例bean(包括内部bean)</li>
<li>实现了自定义的<code>destory()</code>方法</li>
</ul>
</li>
</ul>
<h2 id="Bean-的生命周期验证"><a href="#Bean-的生命周期验证" class="headerlink" title="Bean 的生命周期验证"></a>Bean 的生命周期验证</h2><p>为了验证Bean生命周期的过程，有两种形式：一种是为面试而准备的，一种是为了解全过程而准备的，下面来看代码：</p>
<p>Book.class</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> <span class="keyword">implements</span> <span class="title">BeanNameAware</span>,<span class="title">BeanFactoryAware</span>,</span></span><br><span class="line"><span class="class">        <span class="title">ApplicationContextAware</span>,<span class="title">InitializingBean</span>,<span class="title">DisposableBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Book Initializing &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBeanFactory</span><span class="params">(BeanFactory beanFactory)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Book.setBeanFactory invoke&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBeanName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Book.setBeanName invoke&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Book.destory invoke&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Book.afterPropertiesSet invoke&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Book.setApplicationContext invoke&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBookName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookName;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookName</span><span class="params">(String bookName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.bookName = bookName;</span><br><span class="line">        System.out.println(<span class="string">&quot;setBookName: Book name has set.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myPostConstruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Book.myPostConstruct invoke&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">// 自定义初始化方法</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">springPostConstruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;@PostConstruct&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myPreDestory</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Book.myPreDestory invoke&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------destroy-----------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 自定义销毁方法</span></span><br><span class="line">    <span class="meta">@PreDestroy</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">springPreDestory</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;@PreDestory&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">finalize</span><span class="params">()</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------inside finalize-----&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>自定义实现<code>BeanPostProcessor</code> 的 <code>MyBeanPostProcessor</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBeanPostProcessor</span> <span class="keyword">implements</span> <span class="title">BeanPostProcessor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 容器加载的时候会加载一些其他的bean，会调用初始化前和初始化后方法</span></span><br><span class="line">    <span class="comment">// 这次只关注book(bean)的生命周期</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">postProcessBeforeInitialization</span><span class="params">(Object bean, String beanName)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(bean <span class="keyword">instanceof</span> Book)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;MyBeanPostProcessor.postProcessBeforeInitialization&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">postProcessAfterInitialization</span><span class="params">(Object bean, String beanName)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(bean <span class="keyword">instanceof</span> Book)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;MyBeanPostProcessor.postProcessAfterInitialization&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>在<code>resources</code> 目录下新建<code>ean-Lifecycle.xml</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 扫描bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.bean.lifecycle&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 实现了用户自定义初始化和销毁方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;book&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.bean.lifecycle.Book&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;myPostConstruct&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;myPreDestory&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 注入bean 属性名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bookName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;thingking in java&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">      <span class="comment">&lt;!--引入自定义的BeanPostProcessor--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.bean.lifecycle.MyBeanPostProcessor&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>


<p>做一个启动类的测试，新建<code>SpringBeanLifecycleApplication</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBeanLifecycleApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">// 为面试而准备的Bean生命周期加载过程</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;Bean-Lifecycle.xml&quot;</span>);</span><br><span class="line">        Book book = (Book)context.getBean(<span class="string">&quot;book&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Book name = &quot;</span> + book.getBookName());</span><br><span class="line">        ((ClassPathXmlApplicationContext) context).destroy();</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>启动测试，输出结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Book Initializing </span><br><span class="line">setBookName: Book name has <span class="built_in">set</span>.</span><br><span class="line">Book.setBeanName invoke</span><br><span class="line">Book.setBeanFactory invoke</span><br><span class="line">Book.setApplicationContext invoke</span><br><span class="line">MyBeanPostProcessor.postProcessBeforeInitialization</span><br><span class="line">@PostConstruct</span><br><span class="line">Book.afterPropertiesSet invoke</span><br><span class="line">Book.myPostConstruct invoke</span><br><span class="line">MyBeanPostProcessor.postProcessAfterInitialization</span><br><span class="line">Book name = thingking <span class="keyword">in</span> java</span><br><span class="line"></span><br><span class="line">@PreDestory</span><br><span class="line">Book.destory invoke</span><br><span class="line">Book.myPreDestory invoke</span><br><span class="line">---------------destroy-----------------</span><br></pre></td></tr></table></figure>


<p>为了验证Bean完整的生命周期，需要新建一个SubBookClass 继承Book类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubBookClass</span> <span class="keyword">extends</span> <span class="title">Book</span> <span class="keyword">implements</span> <span class="title">BeanClassLoaderAware</span>,</span></span><br><span class="line"><span class="class">        <span class="title">EnvironmentAware</span>,<span class="title">EmbeddedValueResolverAware</span>,<span class="title">ResourceLoaderAware</span>,</span></span><br><span class="line"><span class="class">        <span class="title">ApplicationEventPublisherAware</span>,<span class="title">MessageSourceAware</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String bookSystem;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBookSystem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> bookSystem;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookSystem</span><span class="params">(String bookSystem)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;设置BookSystem 的属性值&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.bookSystem = bookSystem;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBeanClassLoader</span><span class="params">(ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SubBookClass.setBeanClassLoader() 方法被调用了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationEventPublisher</span><span class="params">(ApplicationEventPublisher applicationEventPublisher)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SubBookClass.setApplicationEventPublisher() 方法被调用了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmbeddedValueResolver</span><span class="params">(StringValueResolver resolver)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SubBookClass.setEmbeddedValueResolver() 方法被调用了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnvironment</span><span class="params">(Environment environment)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SubBookClass.setEnvironment() 方法被调用了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessageSource</span><span class="params">(MessageSource messageSource)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SubBookClass.setMessageSource() 方法被调用了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResourceLoader</span><span class="params">(ResourceLoader resourceLoader)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SubBookClass.setResourceLoader() 方法被调用了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>上述<code>SubBookClass</code>类与<code>Book</code>是互补关系。</p>
<p>新建一个<code>SubBean-Lifecycle.xml</code>，注入<code>SubBookClass</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookClass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.bean.lifecycle.SubBookClass&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;myPostConstruct&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;myPreDestory&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bookSystem&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java System&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.bean.lifecycle.MyBeanPostProcessor&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>


<p>完整的<code>SpringBeanLifecycleApplication</code> 如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBeanLifecycleApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">// 为面试而准备的Bean生命周期加载过程</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;Bean-Lifecycle.xml&quot;</span>);</span><br><span class="line">        Book book = (Book)context.getBean(<span class="string">&quot;book&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Book name = &quot;</span> + book.getBookName());</span><br><span class="line">        ((ClassPathXmlApplicationContext) context).destroy();</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 完整的加载过程，当然了解的越多越好</span></span><br><span class="line">        ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;SubBean-Lifecycle.xml&quot;</span>);</span><br><span class="line">        SubBookClass subBookClass = (SubBookClass) applicationContext.getBean(<span class="string">&quot;bookClass&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;BookSystemName = &quot;</span> + subBookClass.getBookSystem());</span><br><span class="line">        ((ClassPathXmlApplicationContext) applicationContext).registerShutdownHook();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>输出完整的结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Book Initializing </span><br><span class="line">setBookName: Book name has <span class="built_in">set</span>.</span><br><span class="line">Book.setBeanName invoke</span><br><span class="line">Book.setBeanFactory invoke</span><br><span class="line">Book.setApplicationContext invoke</span><br><span class="line">MyBeanPostProcessor.postProcessBeforeInitialization</span><br><span class="line">@PostConstruct</span><br><span class="line">Book.afterPropertiesSet invoke</span><br><span class="line">Book.myPostConstruct invoke</span><br><span class="line">MyBeanPostProcessor.postProcessAfterInitialization</span><br><span class="line">Book name = thingking <span class="keyword">in</span> java</span><br><span class="line">@PreDestory</span><br><span class="line">Book.destory invoke</span><br><span class="line">Book.myPreDestory invoke</span><br><span class="line">---------------destroy-----------------</span><br><span class="line"></span><br><span class="line">Book Initializing </span><br><span class="line">设置BookSystem 的属性值</span><br><span class="line">Book.setBeanName invoke</span><br><span class="line">SubBookClass.setBeanClassLoader() 方法被调用了</span><br><span class="line">Book.setBeanFactory invoke</span><br><span class="line">SubBookClass.setEnvironment() 方法被调用了</span><br><span class="line">SubBookClass.setEmbeddedValueResolver() 方法被调用了</span><br><span class="line">SubBookClass.setResourceLoader() 方法被调用了</span><br><span class="line">SubBookClass.setApplicationEventPublisher() 方法被调用了</span><br><span class="line">SubBookClass.setMessageSource() 方法被调用了</span><br><span class="line">Book.setApplicationContext invoke</span><br><span class="line">MyBeanPostProcessor.postProcessBeforeInitialization</span><br><span class="line">Book.afterPropertiesSet invoke</span><br><span class="line">Book.myPostConstruct invoke</span><br><span class="line">MyBeanPostProcessor.postProcessAfterInitialization</span><br><span class="line">BookSystemName = Java System</span><br><span class="line">Book.destory invoke</span><br><span class="line">Book.myPreDestory invoke</span><br><span class="line">---------------destroy-----------------</span><br></pre></td></tr></table></figure>
<p>后记：这篇文章是我翻阅各种书籍和从网上查找资料，包括国外一些网站从而得到的结论，记录下来，但是我没有发现Spring Bean的生命周期（非常详细） 这篇文章中InstantiationAwareBeanPostProcessorAdapter 这个类和工厂后置处理器接口方法，知道的朋友欢迎指教，感谢。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20venJ0cXNrL3AvMzczNTI3My5odG1s" title="https://www.cnblogs.com/zrtqsk/p/3735273.html">https://www.cnblogs.com/zrtqsk/p/3735273.html<i class="fa fa-external-link"></i></span></p>
<p>参考：<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20venJ0cXNrL3AvMzczNTI3My5odG1s" title="https://www.cnblogs.com/zrtqsk/p/3735273.html">https://www.cnblogs.com/zrtqsk/p/3735273.html<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuam91cm5hbGRldi5jb20vMjYzNy9zcHJpbmctYmVhbi1saWZlLWN5Y2xl" title="https://www.journaldev.com/2637/spring-bean-life-cycle">https://www.journaldev.com/2637/spring-bean-life-cycle<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy53aWRlc2tpbGxzLmNvbS9zcHJpbmcvc3ByaW5nLWJlYW4tbGlmZWN5Y2xl" title="http://www.wideskills.com/spring/spring-bean-lifecycle">http://www.wideskills.com/spring/spring-bean-lifecycle<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5jb25jcmV0ZXBhZ2UuY29tL3NwcmluZy9zcHJpbmctYmVhbi1saWZlLWN5Y2xlLXR1dG9yaWFs" title="http://www.concretepage.com/spring/spring-bean-life-cycle-tutorial">www.concretepage.com/spring/spring-bean-life-cycle-tutorial<i class="fa fa-external-link"></i></span></p>
<p>博客内容同步公众号Java知音，欢迎关注</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>电联版本安装手册</title>
    <url>/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h1 id="手册安装版本速查"><a href="#手册安装版本速查" class="headerlink" title="手册安装版本速查"></a>手册安装版本速查</h1><table>
<thead>
<tr>
<th>软件</th>
<th>版本</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>centos</td>
<td>7.7</td>
<td>web服务器，大数据服务器</td>
</tr>
<tr>
<td>java</td>
<td>1.8.0_202</td>
<td>web服务器，大数据服务器</td>
</tr>
<tr>
<td>cdh</td>
<td>5.13.3</td>
<td>大数据服务器</td>
</tr>
<tr>
<td>cloudera manager</td>
<td>5.13</td>
<td>大数据服务器</td>
</tr>
<tr>
<td>livy</td>
<td>0.5.0</td>
<td>大数据服务器</td>
</tr>
<tr>
<td>spark</td>
<td>2.3.0</td>
<td>大数据服务器</td>
</tr>
<tr>
<td>mysql</td>
<td>5.7.25</td>
<td>大数据服务器</td>
</tr>
<tr>
<td>postgresql</td>
<td>12.2</td>
<td>web服务器</td>
</tr>
<tr>
<td>postgis</td>
<td>3</td>
<td>web服务器</td>
</tr>
<tr>
<td>tomcat</td>
<td>8.5.56</td>
<td>web服务器</td>
</tr>
<tr>
<td>5gop(war + sql + trans)</td>
<td>电联专属版</td>
<td>web服务器</td>
</tr>
</tbody></table>
<h1 id="安装准备速查"><a href="#安装准备速查" class="headerlink" title="安装准备速查"></a>安装准备速查</h1><table>
<thead>
<tr>
<th>软件</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>redHat7.7光盘</td>
<td>光盘或者镜像文件，或者centos7</td>
</tr>
<tr>
<td>所有安装包</td>
<td>详情见：<code>手册安装版本速查</code></td>
</tr>
<tr>
<td>服务器两台</td>
<td>电联必须提供两台服务器，并且可以互相连通，root密码</td>
</tr>
<tr>
<td>堡垒机（笔记本）</td>
<td>用于连接远程电脑</td>
</tr>
<tr>
<td>手册</td>
<td>本手册</td>
</tr>
</tbody></table>
<a id="more"></a>
<h1 id="大数据安装（第一台服务器）"><a href="#大数据安装（第一台服务器）" class="headerlink" title="大数据安装（第一台服务器）"></a>大数据安装（第一台服务器）</h1><h2 id="放置版本包"><a href="#放置版本包" class="headerlink" title="放置版本包"></a>放置版本包</h2><p>将 一下三个文件（文件夹）放到<code>/opt/package</code> 目录下<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200701095526627.png" alt="image-20200701095526627"></p>
<h2 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h2><h3 id="iptable"><a href="#iptable" class="headerlink" title="iptable"></a>iptable</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624133140899.png" alt="image-20200624133140899"></p>
<h3 id="firewalld-service"><a href="#firewalld-service" class="headerlink" title="firewalld.service"></a>firewalld.service</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624132458834.png" alt="image-20200624132458834"></p>
<h3 id="SELINUX"><a href="#SELINUX" class="headerlink" title="SELINUX"></a>SELINUX</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of three values:</span></span><br><span class="line"><span class="comment">#     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment">#     minimum - Modification of targeted policy. Only selected processes are protected. </span></span><br><span class="line"><span class="comment">#     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624133959170.png" alt="image-20200624133959170"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624133655100.png" alt="image-20200624133655100"></p>
<h3 id="hostname"><a href="#hostname" class="headerlink" title="hostname"></a>hostname</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname fiveop-cdh</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624151945960.png" alt="image-20200624151945960"></p>
<h3 id="设置SWAP"><a href="#设置SWAP" class="headerlink" title="设置SWAP"></a>设置SWAP</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> vm.swappiness = 10 &gt;&gt; /etc/sysctl.conf ;sysctl vm.swappiness=10</span><br></pre></td></tr></table></figure>


<h3 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h3><p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app</span><br><span class="line"><span class="built_in">cd</span> /opt/app</span><br><span class="line">tar -zxvf /opt/package/jdk-8u202-linux-x64.tar.gz -C /opt/app</span><br><span class="line">ln -s jdk1.8.0_202 jdk</span><br></pre></td></tr></table></figure>

<p>修改 <code>profile</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/jdk</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>


<p>刷新配置并验证</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>
<h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><p>修改本地<code>repo文件</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/base.repo</span><br><span class="line"></span><br><span class="line">[baserepo]</span><br><span class="line">name=base_repo</span><br><span class="line">baseurl=file:///data/cdrom</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>
<p>刷新<code>yum</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum clean all;yum makecache</span><br></pre></td></tr></table></figure>

<h3 id="httpd"><a href="#httpd" class="headerlink" title="httpd"></a>httpd</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install httpd</span><br><span class="line">systemctl restart httpd;</span><br><span class="line">systemctl status httpd;</span><br><span class="line">systemctl <span class="built_in">enable</span> httpd;</span><br></pre></td></tr></table></figure>



<h3 id="关闭透明大页面"><a href="#关闭透明大页面" class="headerlink" title="关闭透明大页面"></a>关闭透明大页面</h3><p>修改<code>/etc/sysctl.conf</code>配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line"><span class="built_in">echo</span> never &gt;/sys/kernel/mm/transparent_hugepage/enabled</span><br></pre></td></tr></table></figure>
<p><code>/etc/rc.d/rc.local</code>脚本中增加如下代码，使其永久生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -f/sys/kernel/mm/redhat_transparent_hugepage/enabled; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> never &gt; /sys/kernel/mm/redhat_transparent_hugepage/enabled</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -f /sys/kernel/mm/redhat_transparent_hugepage/defrag; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> never &gt; /sys/kernel/mm/redhat_transparent_hugepage/defrag</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>赋予<code>rc.loca</code>l脚本可执行权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure>
<h3 id="配置NTP"><a href="#配置NTP" class="headerlink" title="配置NTP"></a>配置NTP</h3><p>卸载<code>chrony</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y remove chrony</span><br></pre></td></tr></table></figure>
<p>安装<code>NTP</code>服务并设置时区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install ntp</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>
<p>配置<code>server</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ntp.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br></pre></td></tr></table></figure>
<p>重启<code>ntp</code>服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart ntpd;systemctl status ntpd;systemctl <span class="built_in">enable</span> ntpd</span><br></pre></td></tr></table></figure>

<h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><p>删除原来的<code>mysql</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br><span class="line">yum remove -y mysql*</span><br></pre></td></tr></table></figure>
<p>安装<code>mysql</code>相关包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y /opt/package/cdh/mysql/mysql-community-*</span><br></pre></td></tr></table></figure>
<p>启动MySQL服务并将mysqld加入开机自启动服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld;systemctl status mysqld;systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure>
<p>查看生成的<code>mysql</code>临时密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&#x27;password&#x27;</span> /var/<span class="built_in">log</span>/mysqld.log |head -n 1</span><br></pre></td></tr></table></figure>
<p>关闭<code>mysql</code>密码插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment">## 追加</span></span><br><span class="line">validate_password = off</span><br></pre></td></tr></table></figure>
<p>重启<code>mysql</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart mysqld;systemctl status mysqld</span><br></pre></td></tr></table></figure>
<p>执行如下脚本初始化<code>mysql</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@master01] <span class="comment"># mysql_secure_installation </span></span><br><span class="line">Securing the MySQL server deployment.</span><br><span class="line"></span><br><span class="line">The existing password <span class="keyword">for</span> the user account root has expired. Please <span class="built_in">set</span> a new password.</span><br><span class="line"></span><br><span class="line">New password: </span><br><span class="line"></span><br><span class="line">Re-enter new password: </span><br><span class="line"></span><br><span class="line">VALIDATE PASSWORD PLUGIN can be used to <span class="built_in">test</span> passwords</span><br><span class="line">and improve security. It checks the strength of password</span><br><span class="line">and allows the users to <span class="built_in">set</span> only those passwords <span class="built_in">which</span> are</span><br><span class="line">secure enough. Would you like to setup VALIDATE PASSWORD plugin?</span><br><span class="line"></span><br><span class="line">Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No: y   <span class="comment">###是否校验密码插件</span></span><br><span class="line"></span><br><span class="line">There are three levels of password validation policy:</span><br><span class="line"></span><br><span class="line">LOW    Length &gt;= 8</span><br><span class="line">MEDIUM Length &gt;= 8, numeric, mixed <span class="keyword">case</span>, and special characters</span><br><span class="line">STRONG Length &gt;= 8, numeric, mixed <span class="keyword">case</span>, special characters and dictionary file</span><br><span class="line"></span><br><span class="line">Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 2  <span class="comment">###设定密码策略等级</span></span><br><span class="line">Using existing password <span class="keyword">for</span> root.</span><br><span class="line"></span><br><span class="line">Estimated strength of the password: 100 </span><br><span class="line">Change the password <span class="keyword">for</span> root ? ((Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : </span><br><span class="line"></span><br><span class="line"> ... skipping.</span><br><span class="line">By default, a MySQL installation has an anonymous user,</span><br><span class="line">allowing anyone to <span class="built_in">log</span> into MySQL without having to have</span><br><span class="line">a user account created <span class="keyword">for</span> them. This is intended only <span class="keyword">for</span></span><br><span class="line">testing, and to make the installation go a bit smoother.</span><br><span class="line">You should remove them before moving into a production</span><br><span class="line">environment.</span><br><span class="line"></span><br><span class="line">Remove anonymous users? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y  <span class="comment">###是否移除匿名用户</span></span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">Normally, root should only be allowed to connect from</span><br><span class="line"><span class="string">&#x27;localhost&#x27;</span>. This ensures that someone cannot guess at</span><br><span class="line">the root password from the network.</span><br><span class="line"></span><br><span class="line">Disallow root login remotely? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y  <span class="comment">###是否关闭root远程登陆功能</span></span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">By default, MySQL comes with a database named <span class="string">&#x27;test&#x27;</span> that</span><br><span class="line">anyone can access. This is also intended only <span class="keyword">for</span> testing,</span><br><span class="line">and should be removed before moving into a production</span><br><span class="line">environment.</span><br><span class="line"></span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y  <span class="comment">###是否移除测试数据库</span></span><br><span class="line"> - Dropping <span class="built_in">test</span> database... </span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line"> - Removing privileges on <span class="built_in">test</span> database...</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">Reloading the privilege tables will ensure that all changes</span><br><span class="line">made so far will take effect immediately.</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y  <span class="comment">###是否立即生效权限表</span></span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">All <span class="keyword">done</span>! </span><br></pre></td></tr></table></figure>

<p>远程登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -proot -e <span class="string">&quot;GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27;IDENTIFIED BY &#x27;root&#x27; WITH GRANT OPTION;FLUSH PRIVILEGES;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除非安全用户</span><br><span class="line"></span><br><span class="line">​```bash</span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;delete from mysql.user where (user,host) not in (select &#x27;root&#x27;,&#x27;localhost&#x27;);&quot;</span></span><br></pre></td></tr></table></figure>

<p>创建<code>database</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -proot -e <span class="string">&#x27;create database amon default character set utf8;&#x27;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&#x27;create database rmon default character set utf8;&#x27;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&#x27;create database hive default character set utf8;&#x27;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&#x27;create database oozie default character set utf8;&#x27;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&#x27;create database hue default character set utf8;&#x27;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&#x27;create database cm default character set utf8;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>创建<code>user</code>语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -proot -e <span class="string">&quot;create user &#x27;amon&#x27;@&#x27;%&#x27; identified by &#x27;amon1234&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;create user &#x27;rmon&#x27;@&#x27;%&#x27; identified by &#x27;rmon1234&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;create user &#x27;hive&#x27;@&#x27;%&#x27; identified by &#x27;hive1234&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;create user &#x27;oozie&#x27;@&#x27;%&#x27; identified by &#x27;oozie1234&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;create user &#x27;hue&#x27;@&#x27;%&#x27; identified by &#x27;hue1234&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;create user &#x27;cm&#x27;@&#x27;%&#x27; identified by &#x27;cm1234&#x27;&quot;</span></span><br></pre></td></tr></table></figure>

<p>对用户赋予权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -proot -e <span class="string">&quot;GRANT ALL PRIVILEGES ON amon.* to &#x27;amon&#x27;@&#x27;%&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;GRANT ALL PRIVILEGES ON rmon.* to &#x27;rmon&#x27;@&#x27;%&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;GRANT ALL PRIVILEGES ON hive.* to &#x27;hive&#x27;@&#x27;%&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;GRANT ALL PRIVILEGES ON oozie.* to &#x27;oozie&#x27;@&#x27;%&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;GRANT ALL PRIVILEGES ON hue.* to &#x27;hue&#x27;@&#x27;%&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;GRANT ALL PRIVILEGES ON cm.* to &#x27;cm&#x27;@&#x27;%&#x27;&quot;</span></span><br><span class="line">mysql -u root -proot -e <span class="string">&quot;FLUSH PRIVILEGES;&quot;</span></span><br></pre></td></tr></table></figure>
<p>安装<code>mysql</code>驱动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /usr/share/java/;</span><br><span class="line">cp /opt/package/cdh/mysql/mysql-connector-java-5.1.49-bin.jar /usr/share/java/</span><br><span class="line"><span class="built_in">cd</span> /usr/share/java;</span><br><span class="line">ln -s mysql-connector-java-5.1.49-bin.jar mysql-connector-java.jar;ll</span><br></pre></td></tr></table></figure>
<h3 id="3-13配置CM的yum源"><a href="#3-13配置CM的yum源" class="headerlink" title="3.13配置CM的yum源"></a>3.13配置CM的yum源</h3><p>放置<code>rpm</code>包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp -r /opt/package/cdh/cloudera\ manager /var/www/html/cm5.13</span><br><span class="line">​```bash</span><br><span class="line">生成`rpm`数据源</span><br></pre></td></tr></table></figure>
<p>cd /var/www/html/cm5.13;createrepo .</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">创建&#96;cm.repo&#96;文件</span><br><span class="line">​&#96;&#96;&#96;bash</span><br><span class="line">vim &#x2F;etc&#x2F;yum.repo.d&#x2F;cm.repo</span><br><span class="line"></span><br><span class="line">[cmrepo]</span><br><span class="line">name&#x3D;Cloudera Manager 5.13</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;172.30.100.183&#x2F;cm5.13</span><br><span class="line">gpgcheck&#x3D;false</span><br><span class="line">enable&#x3D;true</span><br></pre></td></tr></table></figure>

<p>放置<code>rpm</code>包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp -r /opt/package/cdh/cdh /var/www/html/cdh5.13</span><br></pre></td></tr></table></figure>


<h2 id="安装CM与CDH"><a href="#安装CM与CDH" class="headerlink" title="安装CM与CDH"></a>安装CM与CDH</h2><h3 id="安装Cloudera-Manager-Server"><a href="#安装Cloudera-Manager-Server" class="headerlink" title="安装Cloudera Manager Server"></a>安装Cloudera Manager Server</h3><p>通过<code>yum</code>安装<code>ClouderaManager Server</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install cloudera-manager-server</span><br></pre></td></tr></table></figure>
<p>初始化<code>CM</code>数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/cmf/schema/scm_prepare_database.sh mysql cm cm cm1234</span><br></pre></td></tr></table></figure>
<p>启动<code>ClouderaManager Server</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install psmisc</span><br><span class="line">systemctl restart cloudera-scm-server</span><br></pre></td></tr></table></figure>
<p>打开浏览器输入地址 <span class="exturl" data-url="MTcyLjMwLjEwMC4xODM6NzE4MA==" title="172.30.100.183:7180">172.30.100.183:7180<i class="fa fa-external-link"></i></span> 即可访问界面<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628144533421.png" alt="image-20200628144533421"></p>
<h3 id="CDH安装"><a href="#CDH安装" class="headerlink" title="CDH安装"></a>CDH安装</h3><p><code>admin/admin</code>登录到CM<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628144412695.png" alt="image-20200628144412695"><br>同意，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628144644563.png" alt="image-20200628144644563"><br>选择60试用，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628144738660.png" alt="image-20200628144738660"><br>发呆一秒钟，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628144844746.png" alt="image-20200628144844746"><br>输入服务器ip，点击<code>搜索</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628145048938.png" alt="image-20200628145048938"><br>等待搜索到之后，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628145155690.png" alt="image-20200628145155690"><br>点击<code>更多选项</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628152340419.png" alt="image-20200628152340419"><br>删除原来所有的<code>Parcel存储URL</code>,增加地址<code>http://172.30.100.183/cdh5.13</code>,并点击<code>保存更改</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628152654964.png" alt="image-20200628152654964"><br>出现CDH版本,选择<code>自定义存储库</code>,输入地址<code>http://172.30.100.183/cm5.13</code>,点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628153516708.png" alt="image-20200628153516708"><br>发呆一秒，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628153732597.png" alt="image-20200628153732597"><br>再发呆一秒，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628153831477.png" alt="image-20200628153831477"><br>配置<code>提供 SSH 登录凭据</code>，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628154005308.png" alt="image-20200628154005308"><br>稍等片刻，等待安装完成，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628154115891.png" alt="image-20200628154115891"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628154237371.png" alt="image-20200628154237371"><br>稍等片刻，等待安装完成，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628154702497.png" alt="image-20200628154702497"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628155314755.png" alt="image-20200628155314755"><br>检查注解正确性，点击<code>完成</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628155658099.png" alt="image-20200628155658099"><br>点击<code>自定义</code>,选择需要安装的包，点击<code>完成</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628155934295.png" alt="image-20200628155934295"><br>看着酷炫杂乱的页面，蒙圈一秒，开始火眼金睛游戏，找到所有<code>选择一个主机</code>，或者<code>选择主机</code>，点击选择<code>5gop-cdh</code>。<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628163028378.png" alt="image-20200628163028378"><br>都选择完成之后，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628164333017.png" alt="image-20200628164333017"><br>填写数据库信息，点击<code>测试连接</code>，结果都为<code>Successful</code>之后，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628164554644.png" alt="image-20200628164554644"><br>看着一大堆莫名其妙的配置项，蒙圈一秒，直接点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628165423678.png" alt="image-20200628165423678"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628165441288.png" alt="image-20200628165441288"><br>拿出手机刷刷微博、朋友圈，等待启动完成，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628164931641.png" alt="image-20200628164931641"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628165328557.png" alt="image-20200628165328557"><br>到此安装完成<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628165610688.png" alt="image-20200628165610688"></p>
<h2 id="安装Spark2"><a href="#安装Spark2" class="headerlink" title="安装Spark2"></a>安装Spark2</h2><h3 id="安装csd文件"><a href="#安装csd文件" class="headerlink" title="安装csd文件"></a>安装csd文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /opt/package/cdh/spark2.3.0/SPARK2_ON_YARN-2.3.0.cloudera2.jar /opt/cloudera/csd</span><br><span class="line">chown cloudera-scm:cloudera-scm /opt/cloudera/csd</span><br><span class="line">systemctl restart cloudera-scm-server</span><br></pre></td></tr></table></figure>
<h3 id="Parcel部署"><a href="#Parcel部署" class="headerlink" title="Parcel部署"></a>Parcel部署</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp -r /opt/package/cdh/spark2.3.0/ /var/www/html/spark2.3.0</span><br></pre></td></tr></table></figure>
<p>到Parcel界面<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628170759191.png" alt="image-20200628170759191"><br>增加spark<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628170933170.png" alt="image-20200628170933170"><br>刷新并下载，分配，激活<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628182808978.png" alt="image-20200628182808978"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628183009137.png" alt="image-20200628183009137"><br>回到主页，添加Spark2<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628183120278.png" alt="image-20200628183120278"><br>选中 刚才添加的Spark2，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628183623054.png" alt="image-20200628183623054"><br>选择依赖，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628184004534.png" alt="image-20200628184004534"><br>选择主机，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628184039820.png" alt="image-20200628184039820"><br>蒙圈一秒，直接点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628184144030.png" alt="image-20200628184144030"><br>等待运行完成<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628184230843.png" alt="image-20200628184230843"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628184535510.png" alt="image-20200628184535510"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200628184550792.png" alt="image-20200628184550792"></p>
<h2 id="安装Livy2"><a href="#安装Livy2" class="headerlink" title="安装Livy2"></a>安装Livy2</h2><h3 id="安装parcel和csd"><a href="#安装parcel和csd" class="headerlink" title="安装parcel和csd"></a>安装parcel和csd</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /opt/package/cdh/livy0.5.0/livy/LIVY-0.5.0.jar /opt/cloudera/csd</span><br><span class="line">chown cloudera-scm:cloudera-scm /opt/cloudera/csd</span><br><span class="line">cp -r /opt/package/cdh/livy0.5.0/livy/ /var/www/html/livy0.5.0</span><br><span class="line">systemctl restart cloudera-scm-server</span><br></pre></td></tr></table></figure>
<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>配置<code>core-site.xml</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/Snipaste_2020-06-29_13-59-24.png" alt="image-20200629104554127"><br>重启配置<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/Snipaste_2020-06-29_14-03-02.png" alt="image-20200629104554127"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/Snipaste_2020-06-29_14-04-48.png" alt="image-20200629104554127"></p>
<p>执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd livy</span><br><span class="line">useradd livy -g livy</span><br><span class="line">chown livy:livy /var/<span class="built_in">log</span>/livy</span><br></pre></td></tr></table></figure>

<h3 id="Parcel部署-1"><a href="#Parcel部署-1" class="headerlink" title="Parcel部署"></a>Parcel部署</h3><p>到Parcel界面<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629102730121.png" alt="image-20200629102730121"><br>增加livy<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629103000085.png" alt="image-20200629103000085"><br>刷新并下载，分配，激活<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629103122299.png" alt="image-20200629103122299"><br>回到主页，添加livy<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629103845513.png" alt="image-20200629103845513"><br>选中 刚才添加的<code>livy</code>，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629103824572.png" alt="image-20200629103824572"><br>选择依赖关系（可能直接跳过，可以不管）<br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629104414144.png" alt="image-20200629104414144"><br>选择主机，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629104006235.png" alt="image-20200629104006235"><br>蒙圈一秒，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629104516927.png" alt="image-20200629104516927"><br>稍等片刻，点击<code>继续</code><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200629104554127.png" alt="image-20200629104554127"><br><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/Snipaste_2020-06-29_14-10-43.png" alt="image-20200629104554127"></p>
<h1 id="web端安装（第二台机器）"><a href="#web端安装（第二台机器）" class="headerlink" title="web端安装（第二台机器）"></a>web端安装（第二台机器）</h1><h2 id="放置版本包-1"><a href="#放置版本包-1" class="headerlink" title="放置版本包"></a>放置版本包</h2><p>将 一下两个文件（文件夹）放到<code>/opt/package</code> 目录下</p>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200701095327030.png" alt="image-20200701095327030"></p>
<h2 id="基础设置-1"><a href="#基础设置-1" class="headerlink" title="基础设置"></a>基础设置</h2><h3 id="iptable-1"><a href="#iptable-1" class="headerlink" title="iptable"></a>iptable</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624133140899.png" alt="image-20200624133140899"></p>
<h3 id="firewalld-service-1"><a href="#firewalld-service-1" class="headerlink" title="firewalld.service"></a>firewalld.service</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624132458834.png" alt="image-20200624132458834"></p>
<h3 id="SELINUX-1"><a href="#SELINUX-1" class="headerlink" title="SELINUX"></a>SELINUX</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of three values:</span></span><br><span class="line"><span class="comment">#     targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment">#     minimum - Modification of targeted policy. Only selected processes are protected. </span></span><br><span class="line"><span class="comment">#     mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624133959170.png" alt="image-20200624133959170"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/23/%E7%94%B5%E8%81%94%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%89%8B%E5%86%8C/image-20200624133655100.png" alt="image-20200624133655100"></p>
<h3 id="hostname-1"><a href="#hostname-1" class="headerlink" title="hostname"></a>hostname</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname fiveop-web</span><br></pre></td></tr></table></figure>


<h3 id="JAVA-1"><a href="#JAVA-1" class="headerlink" title="JAVA"></a>JAVA</h3><p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app</span><br><span class="line"><span class="built_in">cd</span> /opt/app</span><br><span class="line">tar -zxvf /opt/package/jdk-8u202-linux-x64.tar.gz -C /opt/app</span><br><span class="line">ln -s jdk1.8.0_202 jdk</span><br></pre></td></tr></table></figure>

<p>修改 profile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/jdk</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>


<p>刷新配置并验证</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>
<h3 id="yum-1"><a href="#yum-1" class="headerlink" title="yum"></a>yum</h3><blockquote>
<p>此步骤与第一台服务器稍有不同</p>
</blockquote>
<p>修改本地repo文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;yum.repo.d&#x2F;base.repo</span><br><span class="line"></span><br><span class="line">[baserepo]</span><br><span class="line">name&#x3D;Cloudera Manager 5.13</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;172.30.100.183&#x2F;cdrom</span><br><span class="line">gpgcheck&#x3D;false</span><br><span class="line">enable&#x3D;true</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里的IP地址是第一台服务器的IP地址，如果网络不通请优先解决网络问题</p>
</blockquote>
<p>刷新yum</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum clean all;yum makecache</span><br></pre></td></tr></table></figure>




<h3 id="配置NTP-1"><a href="#配置NTP-1" class="headerlink" title="配置NTP"></a>配置NTP</h3><blockquote>
<p>此步骤与第一台服务器稍有不同</p>
</blockquote>
<p>卸载<code>chrony</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y remove chrony</span><br></pre></td></tr></table></figure>
<p>安装<code>NTP</code>服务并设置时区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install ntp</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>
<p>配置sever</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ntp.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line">server 172.30.100.183</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这里的<code>IP地址</code>是第一台服务器的<code>IP地址</code></p>
</blockquote>
<p>重启<code>ntp</code>服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart ntpd;systemctl status ntpd;systemctl <span class="built_in">enable</span> ntpd</span><br></pre></td></tr></table></figure>

<h2 id="安装postgis"><a href="#安装postgis" class="headerlink" title="安装postgis"></a>安装postgis</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y wget net-tools epel-release</span><br><span class="line">yum install -y opt/package/web/epel/epel-release-7-11.noarch.rpm</span><br><span class="line">yum install -y /opt/package/web/postgis96/*</span><br></pre></td></tr></table></figure>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /data/pgsql/9.6/</span><br><span class="line">vim /usr/lib/systemd/system/postgresql-9.6.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Environment=PGDATA=/data/pgsql/9.6/data/</span><br></pre></td></tr></table></figure>
<p>初始化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/pgsql-9.6/bin/postgresql96-setup initdb</span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>postgresql.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /data/pgsql/9.6/data/postgresql.conf</span><br><span class="line"></span><br><span class="line">listen_addresses = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">max_connections = 1000</span><br></pre></td></tr></table></figure>
<p>修改配置文件<code>pg_hba.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /data/pgsql/9.6/data/pg_hba.conf</span><br><span class="line"></span><br><span class="line">host    all             all             0.0.0.0/0               md5</span><br></pre></td></tr></table></figure>
<p>启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> postgresql-9.6.service</span><br><span class="line">systemctl start postgresql-9.6.service</span><br><span class="line">systemctl status postgresql-9.6.service</span><br></pre></td></tr></table></figure>
<p>修改密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - postgres</span><br><span class="line">psql</span><br><span class="line">ALTER USER postgres WITH PASSWORD <span class="string">&#x27;postgres&#x27;</span>;</span><br><span class="line">\q</span><br><span class="line">su - root</span><br><span class="line">systemctl restart postgresql-9.6.service</span><br></pre></td></tr></table></figure>


<p>链接数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i -u postgres</span><br><span class="line">psql</span><br></pre></td></tr></table></figure>

<p>创建<code>postgis</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> postgis owner postgres;</span><br><span class="line">\c postgis;</span><br><span class="line"><span class="keyword">create</span> extension postgis;</span><br><span class="line"><span class="keyword">select</span> postgis_full_version();</span><br></pre></td></tr></table></figure>

<h2 id="部署5GOP"><a href="#部署5GOP" class="headerlink" title="部署5GOP"></a>部署5GOP</h2><h3 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h3><p>复制版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -r &#x2F;opt&#x2F;package&#x2F;web&#x2F;5GOP&#x2F; &#x2F;opt&#x2F;app&#x2F;</span><br></pre></td></tr></table></figure>
<p>初始化数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i -u postgres</span><br><span class="line">psq</span><br><span class="line">create database radar5g7h owner postgres;</span><br><span class="line">\c postgis;</span><br><span class="line">create extension postgis;</span><br><span class="line">\i /opt/app/5GOP/sql/1.RADARTABLE.sql</span><br><span class="line">\i /opt/app/5GOP/sql/2.FUNCTION.sql</span><br><span class="line">\q</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<p>修改配置文件(待补充)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/app/5GOP/RadarApp/webapps/radar/WEB-INF/classes/jdbc.properties</span><br><span class="line">/opt/app/5GOP/RadarApp/webapps/radar/WEB-INF/classes/config/massiveTrans.txt</span><br><span class="line">/opt/app/5GOP/RadarApp/webapps/radar/WEB-INF/classes/config/morphoTransConfig.txt</span><br><span class="line">/opt/app/5GOP/RadarTrans/c3p0.properties</span><br><span class="line">/opt/app/5GOP/RadarTrans/conf/soapIp.txt</span><br></pre></td></tr></table></figure>
<h3 id="RadarApp"><a href="#RadarApp" class="headerlink" title="RadarApp"></a>RadarApp</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh /opt/app/5GOP/RadarApp/bin/startup.sh</span><br></pre></td></tr></table></figure>
<h3 id="RadarTrans"><a href="#RadarTrans" class="headerlink" title="RadarTrans"></a>RadarTrans</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh /opt/app/5GOP/RadarTrans/fiveop-trans.sh </span><br></pre></td></tr></table></figure>


<h3 id="geoserver"><a href="#geoserver" class="headerlink" title="geoserver"></a>geoserver</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh /opt/app/5GOP/RadarTrans/fiveop-trans.sh </span><br></pre></td></tr></table></figure>





]]></content>
      <tags>
        <tag>电联</tag>
      </tags>
  </entry>
  <entry>
    <title>NACOS实践</title>
    <url>/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<h2 id="注册中心的作用"><a href="#注册中心的作用" class="headerlink" title="注册中心的作用"></a>注册中心的作用</h2><h3 id="无注册中心的调用的缺点"><a href="#无注册中心的调用的缺点" class="headerlink" title="无注册中心的调用的缺点"></a>无注册中心的调用的缺点</h3><p>比如现在我的用户服务是占用(User服务)8081端口的服务, 此时我的服务提供方(order服务端口是8080)端口<br>我们可以通过<code>RestTemplate</code>调用方式来进行调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ResponseEntity&lt;ProductInfo&gt;   responseEntity=</span><br><span class="line">restTemplate.getForEntity(<span class="string">&quot;http://localhost:8081/selectProductInfoById/&quot;</span>+</span><br><span class="line">orderInfo.getProductNo(),ProductInfo.class);</span><br></pre></td></tr></table></figure>
<p>缺点:</p>
<ol>
<li>请求IP地址与端口为硬编码，如果服务提供方(order)服务部署的机器换了端口或者是更换了部署机器的Ip,那么需要修改代码重新发布部署。</li>
<li>不容易维护，当order服务作为集群时，运维人员 需要在服务消费方进行手工维护一份注册表(容易出错)。</li>
<li><code>NGINX</code>配置文件太复杂，当服务越来越多时，NGINX的配合文件越来越复杂<br><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316150526591.png" alt="image-20200316150526591"></li>
</ol>
<h3 id="服务注册发现原理"><a href="#服务注册发现原理" class="headerlink" title="服务注册发现原理"></a>服务注册发现原理</h3><h4 id="最简单的版本"><a href="#最简单的版本" class="headerlink" title="最简单的版本"></a>最简单的版本</h4><p>订单服务直接调用商品服务，</p>
<p><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316230759879.png" alt="image-20200316230759879"></p>
<h4 id="增加集群支持"><a href="#增加集群支持" class="headerlink" title="增加集群支持"></a>增加集群支持</h4><p>支持集群，将商品服务列表写入订单服务的内存</p>
<ul>
<li>需要手动写一个算法（轮询，随机，等）抽取一个IP进行调用</li>
<li>当其中一台机器挂掉之后，订单服务无法感知，依然会调用挂掉的机器。导致调用失败<br><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316231011729.png" alt="image-20200316231011729"></li>
</ul>
<h4 id="使用NGINX反向代理"><a href="#使用NGINX反向代理" class="headerlink" title="使用NGINX反向代理"></a>使用NGINX反向代理</h4><ul>
<li>商品服务由NGINX来维护</li>
<li>选择其中一个商品服务也有NGINX来实现</li>
<li>不健康的服务也可以由NGINX剔除</li>
</ul>
<p><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316232008563.png" alt="image-20200316232008563"></p>
<h4 id="NGINX处理集群时的问题"><a href="#NGINX处理集群时的问题" class="headerlink" title="NGINX处理集群时的问题"></a>NGINX处理集群时的问题</h4><ul>
<li>NGINX的配置文件过于复杂，不利于维护<br><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316232453452.png" alt="image-20200316232453452"></li>
</ul>
<h4 id="注册中心的引入"><a href="#注册中心的引入" class="headerlink" title="注册中心的引入"></a>注册中心的引入</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 注册接口业务逻辑</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> server_register_table(<span class="keyword">id</span>,service_name,ip,port,<span class="keyword">status</span>) <span class="keyword">values</span>(?,?,?,?)</span><br><span class="line"><span class="comment">-- 服务发现接口业务逻辑</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> server_register_table <span class="keyword">where</span> service_name=<span class="string">&#x27;product-server&#x27;</span></span><br><span class="line"><span class="keyword">and</span> <span class="keyword">status</span> = <span class="string">&#x27;up</span></span><br></pre></td></tr></table></figure>
<ol>
<li>订单服务启动的时候，调用注册接口主要逻辑就是insert</li>
<li>商品服务启动时候，调用注册接口主要逻辑就是insert</li>
<li>每次调用商品服务前，都去注册中心获取商品服务的ip主要逻辑select</li>
<li>根据第二步获取的ip进行远程调用</li>
</ol>
<p>存在的问题</p>
<ol>
<li>难道每次订单服务-&gt;商品都要去注册中心拉取服务ip么？</li>
<li>若我订单服务去注册中心拉取的商品服务的ip对应机器宕机了怎么办？</li>
<li>注册中心宕机了怎么办？</li>
</ol>
<p><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316232740608.png" alt="image-20200316232740608"></p>
<h4 id="注册中心优化"><a href="#注册中心优化" class="headerlink" title="注册中心优化"></a>注册中心优化</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 注册接口业务逻辑</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> server_register_table(<span class="keyword">id</span>,service_name,ip,port,<span class="keyword">status</span>) <span class="keyword">values</span>(?,?,?,?)</span><br><span class="line"><span class="comment">-- 服务发现接口业务逻辑</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> server_register_table <span class="keyword">where</span> service_name=<span class="string">&#x27;product-server&#x27;</span></span><br><span class="line"><span class="keyword">and</span> <span class="keyword">status</span> = <span class="string">&#x27;up&#x27;</span></span><br><span class="line"><span class="comment">-- 服务心跳接口业务逻辑</span></span><br><span class="line"><span class="keyword">update</span> server_register_table <span class="keyword">set</span> last_heartTime = <span class="keyword">current_time</span> <span class="keyword">where</span> service_name=<span class="string">&#x27;product-server&#x27;</span></span><br><span class="line"><span class="keyword">and</span> ip = <span class="string">&#x27;192.168.159.2&#x27;</span></span><br><span class="line"><span class="comment">-- 注销接口业务逻辑</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> server_register_table <span class="keyword">where</span> service_name = <span class="string">&#x27;order-server&#x27;</span> <span class="keyword">and</span> ip=<span class="string">&#x27;192.169.158.1&#x27;</span></span><br><span class="line"><span class="comment">-- TaskTimer3的业务逻辑(假设剔除15s没有续约的服务)</span></span><br><span class="line"><span class="keyword">update</span> server_register_table <span class="keyword">set</span> <span class="keyword">status</span>=<span class="string">&#x27;down&#x27;</span> <span class="keyword">where</span> <span class="keyword">current_time</span>-last_heartTime&gt;<span class="number">15</span></span><br></pre></td></tr></table></figure>
<ol>
<li><code>订单服务</code>, <code>商品服务</code>启动的时候，调用注册中心的<code>注册接口</code>主要逻辑就是insert</li>
<li><code>订单服务</code>,<code>商品服务</code>都有一个<code>TimeTask1</code>,定时发送心跳到 注册中心的<code>心跳接口</code></li>
<li><code>订单服务</code>的<code>TimeTask2</code>定时拉取商品服务实例ip信息存储到客户端缓存</li>
<li><code>RIBBON</code>会在客户端缓存中选择一个<code>IP</code>进行远程调用</li>
<li>注册中心有一个定时任务<code>TaskTimer3</code>定时清理没有心跳的实例信息</li>
<li>当服务被停止时，调用注册中心的<code>注销接口</code>，删除这条记录。</li>
</ol>
<p><code>TimeTask1</code>的主要逻辑就是定时发送心跳修改注册中心的<code>last_hearTime</code>(最后一次心跳时间)<br><code>TimeTask2</code>的主要逻辑就是定时拉取状态为<code>up</code>的商品服务实例ip信息存储到客户端缓存<br><code>TaskTimer3</code>定时清理没有心跳的实例信息,剔除15s没有续约的服务,将该服务设置为down</p>
<p><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316233414947.png" alt="image-20200316233414947"></p>
<h4 id="简单实现（V1）"><a href="#简单实现（V1）" class="headerlink" title="简单实现（V1）"></a>简单实现（V1）</h4><ul>
<li>V1版本的架构，存在以下几个问题<ul>
<li>我们的微服务每次调用，都会去进行对数据库的查询，并发一高，数据库性能就是一个瓶颈问题.</li>
<li>若我们的mysql挂了，那么我们所有的微服务调用都不能正常进行。</li>
<li>若mysql是正常的,库存微服务挂了，那么也不能正常的调用<br><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316150853237.png" alt="image-20200316150853237"></li>
</ul>
</li>
</ul>
<h4 id="升级实现（V2）"><a href="#升级实现（V2）" class="headerlink" title="升级实现（V2）"></a>升级实现（V2）</h4><p>3个定时器</p>
<ul>
<li>客户端定时上报lastime到注册中心</li>
<li>客户端获取注册中心的服务到本地</li>
<li>注册中心定时清理长时间没有心跳的服务（标记为down）</li>
</ul>
<p>4个接口</p>
<ul>
<li>注册接口，服务启动时将信息（serverName,Ip，port，status,lat_heartiME） 上报给注册中心</li>
<li>心跳接口，客户端定时上报lastime到注册中心</li>
<li>微服务获取接口，定时拉取商品服务实例ip信息存到客户端缓存</li>
<li>注销接口，当服务注销时，删除注册中心里对应的记录–删除  ，长时间没有心跳是down<br><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200316151037691.png" alt="image-20200316151037691"></li>
</ul>
<h4 id><a href="#" class="headerlink" title></a></h4><h2 id="使用NACOS步骤"><a href="#使用NACOS步骤" class="headerlink" title="使用NACOS步骤"></a>使用NACOS步骤</h2><h3 id="三板斧之-第一板斧-加入依赖"><a href="#三板斧之-第一板斧-加入依赖" class="headerlink" title="三板斧之:第一板斧 加入依赖"></a>三板斧之:第一板斧 加入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring‐cloud‐alibaba‐nacos‐discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="三板斧之-第二板斧写注解-也可以不写-EnableDiscoveryClient"><a href="#三板斧之-第二板斧写注解-也可以不写-EnableDiscoveryClient" class="headerlink" title="三板斧之:第二板斧写注解(也可以不写) @EnableDiscoveryClient"></a>三板斧之:第二板斧写注解(也可以不写) <code>@EnableDiscoveryClient</code></h3><p>高版本中可以不写，应为有自动装配原理</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tulingvip01MsAlibabaNacosClientOrderApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(Tulingvip01MsAlibabaNacosClientOrderApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="第三板斧之-写配置文件-注意server-addr：不需要写协议"><a href="#第三板斧之-写配置文件-注意server-addr：不需要写协议" class="headerlink" title="第三板斧之:写配置文件 注意server-addr：不需要写协议"></a>第三板斧之:写配置文件 <strong>注意</strong>server-addr：不需要写协议</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">	<span class="attr">cloud:</span></span><br><span class="line">		<span class="attr">nacos:</span></span><br><span class="line">			<span class="attr">discovery:</span></span><br><span class="line">				<span class="string">server‐addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">	<span class="attr">application:</span></span><br><span class="line">		<span class="attr">name:</span> <span class="string">order‐center</span></span><br></pre></td></tr></table></figure>
<h2 id="Nacos-领域模型划分以及概念详解"><a href="#Nacos-领域模型划分以及概念详解" class="headerlink" title="Nacos 领域模型划分以及概念详解"></a>Nacos 领域模型划分以及概念详解</h2><p>源码中会将服务以双层MAP的形式保存<code>Map&lt;nameSpaceId,Map&lt;group::serviceName,Service&gt;</code>，第二层<code>group::serviceName</code>是key的拼接风格，这说明了NACOS是支持跨集群调用的，如果要防止跨集群调用就需要自己筛选。<br>当然可以手动实现 v1版本的生产者 调用 v1版本的消费者<br><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200317001326646.png" alt="image-20200317001326646"></p>
<p>NACOS单机启动方式 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;startup.sh -m standalone</span><br></pre></td></tr></table></figure>


<p>NACOS集群启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;startup.sh</span><br></pre></td></tr></table></figure>





<p>第二期第一节可 看zone ,eureka应用入门 （亚马逊），没有zone相当于轮询</p>
<p>ribbon实现负载均衡算法用了模版设计模式，提高了代码的复用性</p>
<p>修改ribbon负载均衡策略</p>
<p>@Bean</p>
<p>public IRule randomRule(){</p>
<p>​    return new RandomRule();</p>
<p>}</p>
<p>为不同的服务定制不同的负载均衡策略</p>
<p>1， 制定两个不同的策略，这两个策略不可以被springboot扫描到，否则会变成全局策略</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">import com.netflix.loadbalancer.IRule;</span><br><span class="line">import com.netflix.loadbalancer.RoundRobinRule;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;20.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">public class PayCenterRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public IRule roundRobinRule() &#123;</span><br><span class="line">        return new RoundRobinRule();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.netflix.loadbalancer.IRule;</span><br><span class="line">import com.netflix.loadbalancer.RandomRule;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;20.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">public class ProductCenterRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public IRule randomRule() &#123;</span><br><span class="line">        return new RandomRule();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * ribbon的全局配置</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">@RibbonClients(value &#x3D; &#123;</span><br><span class="line">        @RibbonClient(name &#x3D; &quot;product-center&quot;,configuration &#x3D; ProductCenterRibbonConfig.class),</span><br><span class="line">        @RibbonClient(name &#x3D; &quot;pay-center&quot;,configuration &#x3D; PayCenterRibbonConfig.class)</span><br><span class="line">&#125;)</span><br><span class="line">public class CustomRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法2，在yml中配置(推荐)，非常不推荐两个方法一起用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#自定义Ribbon的细粒度配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#ribbon:</span><br><span class="line">  #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #指定全局策略</span><br><span class="line">  #eager-load:</span><br><span class="line">    #enabled: true</span><br><span class="line">#product-center: # 指定服务策略</span><br><span class="line">  #ribbon:</span><br><span class="line">    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule</span><br><span class="line">    #eager-load:</span><br><span class="line">      #enabled: true</span><br></pre></td></tr></table></figure>



<p>ribbon参数d的意思</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#ribbon:</span><br><span class="line">  #ReadTimeout: 1000  读取时间超时</span><br><span class="line">  #ConnectTimeout: 1000</span><br><span class="line">  #MaxAutoRetries: 1 重试同一台服务的次数（不包括第一台）</span><br><span class="line">  #MaxAutoRetriesNextServer: 2 重试列表中服务的次数(不包括第一台)</span><br><span class="line">  #OkToRetryOnAllOperations: false 是否限制http的方法，设置为true post，put会进行重试，要保证接口幂等性</span><br><span class="line">  #http:</span><br><span class="line">    #client:</span><br><span class="line">      #enabled: true</span><br></pre></td></tr></table></figure>


<p>Nacos有2大组件<br>    NamingService：服务发现中心，发HTTP请求，调用服务发现接口<br>    ConfigService：配置中心</p>
<p>在ribbon中实现权重算法<br>全局配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.ribbonconfig.GlobalRibbonConfig;</span><br><span class="line">import com.ribbonconfig.PayCenterRibbonConfig;</span><br><span class="line">import com.ribbonconfig.ProductCenterRibbonConfig;</span><br><span class="line">import org.springframework.cloud.netflix.ribbon.RibbonClient;</span><br><span class="line">import org.springframework.cloud.netflix.ribbon.RibbonClients;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * ribbon的全局配置</span><br><span class="line"> *&#x2F;</span><br><span class="line">@RibbonClients(defaultConfiguration &#x3D; GlobalRibbonConfig.class)</span><br><span class="line"></span><br><span class="line">public class CustomRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>扫描器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.netflix.loadbalancer.IRule;</span><br><span class="line">import com.tuling.myrule.TheSameClusterPriorityRule;</span><br><span class="line">import com.tuling.myrule.TheSameClusterPriorityWithVersionRule;</span><br><span class="line">import com.tuling.myrule.TulingWeightedRule;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;20.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">public class GlobalRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public IRule theSameClusterPriorityRule() &#123;</span><br><span class="line">        return new TulingWeightedRule();</span><br><span class="line">        &#x2F;&#x2F;return new TheSameClusterPriorityRule();</span><br><span class="line">        &#x2F;&#x2F;return new TheSameClusterPriorityWithVersionRule();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>具体实现,这里权重需要在nacos上配置，一般来说设置<code>0~1</code>,他是按照比例来计算的，所以设置大于1也可以。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.tuling.myrule;</span><br><span class="line"></span><br><span class="line">import com.alibaba.cloud.nacos.NacosDiscoveryProperties;</span><br><span class="line">import com.alibaba.cloud.nacos.ribbon.NacosServer;</span><br><span class="line">import com.alibaba.nacos.api.exception.NacosException;</span><br><span class="line">import com.alibaba.nacos.api.naming.NamingService;</span><br><span class="line">import com.alibaba.nacos.api.naming.pojo.Instance;</span><br><span class="line">import com.netflix.client.config.IClientConfig;</span><br><span class="line">import com.netflix.loadbalancer.AbstractLoadBalancerRule;</span><br><span class="line">import com.netflix.loadbalancer.BaseLoadBalancer;</span><br><span class="line">import com.netflix.loadbalancer.Server;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;20.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Slf4j</span><br><span class="line">public class TulingWeightedRule extends AbstractLoadBalancerRule &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private NacosDiscoveryProperties discoveryProperties;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void initWithNiwsConfig(IClientConfig clientConfig) &#123;</span><br><span class="line">        &#x2F;&#x2F;读取配置文件并且初始化,ribbon内部的 几乎用不上</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Server choose(Object key) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            log.info(&quot;key:&#123;&#125;&quot;,key);</span><br><span class="line">            BaseLoadBalancer baseLoadBalancer &#x3D; (BaseLoadBalancer) this.getLoadBalancer();</span><br><span class="line">            log.info(&quot;baseLoadBalancer---&gt;:&#123;&#125;&quot;,baseLoadBalancer);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;获取微服务的名称</span><br><span class="line">            String serviceName &#x3D; baseLoadBalancer.getName();</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;获取Nocas服务发现的相关组件API</span><br><span class="line">            NamingService namingService &#x3D;  discoveryProperties.namingServiceInstance();</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;获取 一个基于nacos client 实现权重的负载均衡算法</span><br><span class="line">            Instance instance &#x3D; namingService.selectOneHealthyInstance(serviceName);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;返回一个server</span><br><span class="line">            return new NacosServer(instance);</span><br><span class="line">        &#125; catch (NacosException e) &#123;</span><br><span class="line">            log.error(&quot;自定义负载均衡算法错误&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>同集群优先调用<br>在配置文件中指定自己的名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cloud:</span><br><span class="line">  nacos:</span><br><span class="line">    discovery:</span><br><span class="line">      server-addr: localhost:8848</span><br><span class="line">      cluster-name: NJ-CLUSTER # 指定自己集群的名称</span><br></pre></td></tr></table></figure>

<p>核心实现<br>从注册中心获取到所有的服务列表<br>从列表中查找与自己服务相同集群里列表，对这些列表进行负载均衡调用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.tuling.myrule;</span><br><span class="line"></span><br><span class="line">import com.alibaba.cloud.nacos.NacosDiscoveryProperties;</span><br><span class="line">import com.alibaba.cloud.nacos.ribbon.NacosServer;</span><br><span class="line">import com.alibaba.nacos.api.exception.NacosException;</span><br><span class="line">import com.alibaba.nacos.api.naming.NamingService;</span><br><span class="line">import com.alibaba.nacos.api.naming.pojo.Instance;</span><br><span class="line">import com.alibaba.nacos.client.naming.core.Balancer;</span><br><span class="line">import com.netflix.client.config.IClientConfig;</span><br><span class="line">import com.netflix.loadbalancer.AbstractLoadBalancerRule;</span><br><span class="line">import com.netflix.loadbalancer.BaseLoadBalancer;</span><br><span class="line">import com.netflix.loadbalancer.Server;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 同一个集群优先调用策略</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;21.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Slf4j</span><br><span class="line">public class TheSameClusterPriorityRule extends AbstractLoadBalancerRule &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private NacosDiscoveryProperties discoveryProperties;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void initWithNiwsConfig(IClientConfig clientConfig) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Server choose(Object key) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            &#x2F;&#x2F;第一步:获取当前服务所在的集群</span><br><span class="line">            String currentClusterName &#x3D; discoveryProperties.getClusterName();</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;第二步:获取一个负载均衡对象</span><br><span class="line">            BaseLoadBalancer baseLoadBalancer &#x3D; (BaseLoadBalancer) getLoadBalancer();</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;第三步:获取当前调用的微服务的名称</span><br><span class="line">            String invokedSerivceName &#x3D; baseLoadBalancer.getName();</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;第四步:获取nacos clinet的服务注册发现组件的api</span><br><span class="line">            NamingService namingService &#x3D; discoveryProperties.namingServiceInstance();</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;第五步:获取所有的服务实例</span><br><span class="line">            List&lt;Instance&gt; allInstance &#x3D;  namingService.getAllInstances(invokedSerivceName);</span><br><span class="line"></span><br><span class="line">            List&lt;Instance&gt; theSameClusterNameInstList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;第六步:过滤筛选同集群下的所有实例</span><br><span class="line">            for(Instance instance : allInstance) &#123;</span><br><span class="line">                if(StringUtils.endsWithIgnoreCase(instance.getClusterName(),currentClusterName)) &#123;</span><br><span class="line">                    theSameClusterNameInstList.add(instance);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Instance toBeChooseInstance ;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;第七步:选择合适的一个实例调用</span><br><span class="line">            if(theSameClusterNameInstList.isEmpty()) &#123;</span><br><span class="line"></span><br><span class="line">                toBeChooseInstance &#x3D; TulingWeightedBalancer.chooseInstanceByRandomWeight(allInstance);</span><br><span class="line"></span><br><span class="line">                log.info(&quot;发生跨集群调用---&gt;当前微服务所在集群:&#123;&#125;,被调用微服务所在集群:&#123;&#125;,Host:&#123;&#125;,Port:&#123;&#125;&quot;,</span><br><span class="line">                        currentClusterName,toBeChooseInstance.getClusterName(),toBeChooseInstance.getIp(),toBeChooseInstance.getPort());</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                toBeChooseInstance &#x3D; TulingWeightedBalancer.chooseInstanceByRandomWeight(theSameClusterNameInstList);</span><br><span class="line"></span><br><span class="line">                log.info(&quot;同集群调用---&gt;当前微服务所在集群:&#123;&#125;,被调用微服务所在集群:&#123;&#125;,Host:&#123;&#125;,Port:&#123;&#125;&quot;,</span><br><span class="line">                        currentClusterName,toBeChooseInstance.getClusterName(),toBeChooseInstance.getIp(),toBeChooseInstance.getPort());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return new NacosServer(toBeChooseInstance);</span><br><span class="line"></span><br><span class="line">        &#125; catch (NacosException e) &#123;</span><br><span class="line">            log.error(&quot;同集群优先权重负载均衡算法选择异常:&#123;&#125;&quot;,e);</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>指定策略</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.netflix.loadbalancer.IRule;</span><br><span class="line">import com.tuling.myrule.TheSameClusterPriorityRule;</span><br><span class="line">import com.tuling.myrule.TheSameClusterPriorityWithVersionRule;</span><br><span class="line">import com.tuling.myrule.TulingWeightedRule;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;20.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">public class GlobalRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public IRule theSameClusterPriorityRule() &#123;</span><br><span class="line">        &#x2F;&#x2F;return new TulingWeightedRule();</span><br><span class="line">        return new TheSameClusterPriorityRule();</span><br><span class="line">        &#x2F;&#x2F;return new TheSameClusterPriorityWithVersionRule();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>全局配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.ribbonconfig.GlobalRibbonConfig;</span><br><span class="line">import com.ribbonconfig.PayCenterRibbonConfig;</span><br><span class="line">import com.ribbonconfig.ProductCenterRibbonConfig;</span><br><span class="line">import org.springframework.cloud.netflix.ribbon.RibbonClient;</span><br><span class="line">import org.springframework.cloud.netflix.ribbon.RibbonClients;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * ribbon的全局配置</span><br><span class="line"> *&#x2F;</span><br><span class="line">@RibbonClients(defaultConfiguration &#x3D; GlobalRibbonConfig.class)</span><br><span class="line"></span><br><span class="line">public class CustomRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>权重算法，由Nacos客户端内部实现<br>这里有个小技巧：如果目标类的方法被<code>proteted</code>修饰可以用继承的方法，自定义一个<code>public</code>的方法调用它。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.tuling.myrule;</span><br><span class="line"></span><br><span class="line">import com.alibaba.nacos.api.naming.pojo.Instance;</span><br><span class="line">import com.alibaba.nacos.client.naming.core.Balancer;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 根据权重选择随机选择一个</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;21.</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class TulingWeightedBalancer extends Balancer &#123;</span><br><span class="line">    &#x2F;&#x2F; getHostByRandomWeight 的修饰符是 protected 需要继承后包装一下再使用</span><br><span class="line">    public static Instance chooseInstanceByRandomWeight(List&lt;Instance&gt; hosts) &#123;</span><br><span class="line">        return getHostByRandomWeight(hosts);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>金丝雀发布实现(同集群同版本直接调用)<br>修改配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cloud:</span><br><span class="line">  nacos:</span><br><span class="line">    discovery:</span><br><span class="line">      server-addr: localhost:8848</span><br><span class="line"></span><br><span class="line">      cluster-name: NJ-CLUSTER</span><br><span class="line">      metadata:	# metadata实际上是一个hashmap,里面的key-value可以随便指定</span><br><span class="line">        current-version: V1   # 指定版本号</span><br></pre></td></tr></table></figure>

<p>指定策略</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.netflix.loadbalancer.IRule;</span><br><span class="line">import com.tuling.myrule.TheSameClusterPriorityRule;</span><br><span class="line">import com.tuling.myrule.TheSameClusterPriorityWithVersionRule;</span><br><span class="line">import com.tuling.myrule.TulingWeightedRule;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;20.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">public class GlobalRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public IRule theSameClusterPriorityRule() &#123;</span><br><span class="line">        return new TulingWeightedRule();</span><br><span class="line">        &#x2F;&#x2F;return new TheSameClusterPriorityRule();</span><br><span class="line">        &#x2F;&#x2F;return new TheSameClusterPriorityWithVersionRule();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>全局配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.ribbonconfig.GlobalRibbonConfig;</span><br><span class="line">import com.ribbonconfig.PayCenterRibbonConfig;</span><br><span class="line">import com.ribbonconfig.ProductCenterRibbonConfig;</span><br><span class="line">import org.springframework.cloud.netflix.ribbon.RibbonClient;</span><br><span class="line">import org.springframework.cloud.netflix.ribbon.RibbonClients;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * ribbon的全局配置</span><br><span class="line"> *&#x2F;</span><br><span class="line">@RibbonClients(defaultConfiguration &#x3D; GlobalRibbonConfig.class)</span><br><span class="line"></span><br><span class="line">public class CustomRibbonConfig &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现核心</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.tuling.myrule;</span><br><span class="line"></span><br><span class="line">import com.alibaba.cloud.nacos.NacosDiscoveryProperties;</span><br><span class="line">import com.alibaba.cloud.nacos.ribbon.NacosServer;</span><br><span class="line">import com.alibaba.nacos.api.exception.NacosException;</span><br><span class="line">import com.alibaba.nacos.api.naming.NamingService;</span><br><span class="line">import com.alibaba.nacos.api.naming.pojo.Instance;</span><br><span class="line">import com.netflix.client.config.IClientConfig;</span><br><span class="line">import com.netflix.loadbalancer.AbstractLoadBalancerRule;</span><br><span class="line">import com.netflix.loadbalancer.BaseLoadBalancer;</span><br><span class="line">import com.netflix.loadbalancer.Server;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 金丝雀版本权重负载均衡策略</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;21.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Slf4j</span><br><span class="line">public class TheSameClusterPriorityWithVersionRule extends AbstractLoadBalancerRule &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private NacosDiscoveryProperties discoveryProperties;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void initWithNiwsConfig(IClientConfig clientConfig) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Server choose(Object key) &#123;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;获取本地所部署集群的名称 NJ-CLUSTER</span><br><span class="line">            String localClusterName &#x3D; discoveryProperties.getClusterName();</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;去nacos上获取和本地 相同集群   相同版本的所有实例信息</span><br><span class="line">            List&lt;Instance&gt; theSameClusterNameAndTheSameVersionInstList &#x3D; getTheSameClusterAndTheSameVersionInstances(discoveryProperties);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;声明被调用的实例</span><br><span class="line">            Instance toBeChooseInstance;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;判断同集群同版本号的微服务实例是否为空</span><br><span class="line">            if(theSameClusterNameAndTheSameVersionInstList.isEmpty()) &#123;</span><br><span class="line">                &#x2F;&#x2F;跨集群调用相同的版本</span><br><span class="line">                toBeChooseInstance &#x3D; crossClusterAndTheSameVersionInovke(discoveryProperties);</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                &#x2F;&#x2F;具有同集群  同版本号的实例</span><br><span class="line">                toBeChooseInstance &#x3D; TulingWeightedBalancer.chooseInstanceByRandomWeight(theSameClusterNameAndTheSameVersionInstList);</span><br><span class="line">                log.info(&quot;同集群同版本调用---&gt;当前微服务所在集群:&#123;&#125;,被调用微服务所在集群:&#123;&#125;,当前微服务的版本:&#123;&#125;,被调用微服务版本:&#123;&#125;,Host:&#123;&#125;,Port:&#123;&#125;&quot;,</span><br><span class="line">                        localClusterName,toBeChooseInstance.getClusterName(),discoveryProperties.getMetadata().get(&quot;current-version&quot;),</span><br><span class="line">                        toBeChooseInstance.getMetadata().get(&quot;current-version&quot;),toBeChooseInstance.getIp(),toBeChooseInstance.getPort());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return new NacosServer(toBeChooseInstance);</span><br><span class="line"></span><br><span class="line">        &#125; catch (NacosException e) &#123;</span><br><span class="line">            log.error(&quot;同集群优先权重负载均衡算法选择异常:&#123;&#125;&quot;,e);</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 方法实现说明:获取相同集群下,相同版本的 所有实例</span><br><span class="line">     * @author:smlz</span><br><span class="line">     * @param discoveryProperties nacos的配置</span><br><span class="line">     * @return: List&lt;Instance&gt;</span><br><span class="line">     * @exception: NacosException</span><br><span class="line">     * @date:2019&#x2F;11&#x2F;21 16:41</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private List&lt;Instance&gt; getTheSameClusterAndTheSameVersionInstances(NacosDiscoveryProperties discoveryProperties) throws NacosException &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;当前的集群的名称</span><br><span class="line">        String currentClusterName &#x3D; discoveryProperties.getClusterName();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;当前的版本号</span><br><span class="line">        String currentVersion &#x3D; discoveryProperties.getMetadata().get(&quot;current-version&quot;);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;获取所有实例的信息(包括不同集群的,不同版本号的)</span><br><span class="line">        List&lt;Instance&gt; allInstance &#x3D;  getAllInstances(discoveryProperties);</span><br><span class="line"></span><br><span class="line">        List&lt;Instance&gt; theSameClusterNameAndTheSameVersionInstList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;过滤相同集群  同版本号的实例</span><br><span class="line">        for(Instance instance : allInstance) &#123;</span><br><span class="line">            if(StringUtils.endsWithIgnoreCase(instance.getClusterName(),currentClusterName)&amp;&amp;</span><br><span class="line">               StringUtils.endsWithIgnoreCase(instance.getMetadata().get(&quot;current-version&quot;),currentVersion)) &#123;</span><br><span class="line"></span><br><span class="line">                theSameClusterNameAndTheSameVersionInstList.add(instance);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return theSameClusterNameAndTheSameVersionInstList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 方法实现说明:获取被调用服务的所有实例</span><br><span class="line">     * @author:smlz</span><br><span class="line">     * @param discoveryProperties nacos的配置</span><br><span class="line">     * @return: List&lt;Instance&gt;</span><br><span class="line">     * @exception: NacosException</span><br><span class="line">     * @date:2019&#x2F;11&#x2F;21 16:42</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private List&lt;Instance&gt; getAllInstances(NacosDiscoveryProperties discoveryProperties) throws NacosException &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;第1步:获取一个负载均衡对象</span><br><span class="line">        BaseLoadBalancer baseLoadBalancer &#x3D; (BaseLoadBalancer) getLoadBalancer();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;第2步:获取当前调用的微服务的名称</span><br><span class="line">        String invokedSerivceName &#x3D; baseLoadBalancer.getName();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;第3步:获取nacos clinet的服务注册发现组件的api</span><br><span class="line">        NamingService namingService &#x3D; discoveryProperties.namingServiceInstance();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;第4步:获取所有的服务实例</span><br><span class="line">        List&lt;Instance&gt; allInstance &#x3D;  namingService.getAllInstances(invokedSerivceName);</span><br><span class="line"></span><br><span class="line">        return allInstance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 方法实现说明:跨集群环境下 相同版本的</span><br><span class="line">     * @author:smlz</span><br><span class="line">     * @param discoveryProperties</span><br><span class="line">     * @return: List&lt;Instance&gt;</span><br><span class="line">     * @exception: NacosException</span><br><span class="line">     * @date:2019&#x2F;11&#x2F;21 17:11</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private List&lt;Instance&gt; getCrossClusterAndTheSameVersionInstList(NacosDiscoveryProperties discoveryProperties) throws NacosException &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;版本号</span><br><span class="line">        String currentVersion &#x3D; discoveryProperties.getMetadata().get(&quot;current-version&quot;);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;被调用的所有实例</span><br><span class="line">        List&lt;Instance&gt; allInstance &#x3D; getAllInstances(discoveryProperties);</span><br><span class="line"></span><br><span class="line">        List&lt;Instance&gt;  crossClusterAndTheSameVersionInstList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;过滤相同版本</span><br><span class="line">        for(Instance instance : allInstance) &#123;</span><br><span class="line">            if(StringUtils.endsWithIgnoreCase(instance.getMetadata().get(&quot;current-version&quot;),currentVersion)) &#123;</span><br><span class="line"></span><br><span class="line">                crossClusterAndTheSameVersionInstList.add(instance);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return crossClusterAndTheSameVersionInstList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Instance crossClusterAndTheSameVersionInovke(NacosDiscoveryProperties discoveryProperties) throws NacosException &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;获取所有集群下相同版本的实例信息</span><br><span class="line">        List&lt;Instance&gt;  crossClusterAndTheSameVersionInstList &#x3D; getCrossClusterAndTheSameVersionInstList(discoveryProperties);</span><br><span class="line">        &#x2F;&#x2F;当前微服务的版本号</span><br><span class="line">        String currentVersion &#x3D; discoveryProperties.getMetadata().get(&quot;current-version&quot;);</span><br><span class="line">        &#x2F;&#x2F;当前微服务的集群名称</span><br><span class="line">        String currentClusterName &#x3D; discoveryProperties.getClusterName();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;声明被调用的实例</span><br><span class="line">        Instance toBeChooseInstance &#x3D; null ;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;没有对应相同版本的实例</span><br><span class="line">        if(crossClusterAndTheSameVersionInstList.isEmpty()) &#123;</span><br><span class="line">            log.info(&quot;跨集群调用找不到对应合适的版本当前版本为:currentVersion:&#123;&#125;&quot;,currentVersion);</span><br><span class="line">            throw new RuntimeException(&quot;找不到相同版本的微服务实例&quot;);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            toBeChooseInstance &#x3D; TulingWeightedBalancer.chooseInstanceByRandomWeight(crossClusterAndTheSameVersionInstList);</span><br><span class="line"></span><br><span class="line">            log.info(&quot;跨集群同版本调用---&gt;当前微服务所在集群:&#123;&#125;,被调用微服务所在集群:&#123;&#125;,当前微服务的版本:&#123;&#125;,被调用微服务版本:&#123;&#125;,Host:&#123;&#125;,Port:&#123;&#125;&quot;,</span><br><span class="line">                    currentClusterName,toBeChooseInstance.getClusterName(),discoveryProperties.getMetadata().get(&quot;current-version&quot;),</span><br><span class="line">                    toBeChooseInstance.getMetadata().get(&quot;current-version&quot;),toBeChooseInstance.getIp(),toBeChooseInstance.getPort());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return toBeChooseInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>启动时通过<code>RestTemplate</code>调用远程服务会调用失败</p>
<p>拦截器代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.tuling.intercept;</span><br><span class="line"></span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.beans.factory.InitializingBean;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.client.RestTemplate;</span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Created by smlz on 2020&#x2F;2&#x2F;7.</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">@Slf4j</span><br><span class="line">public class AuthIntercept implements HandlerInterceptor,InitializingBean &#123;</span><br><span class="line"></span><br><span class="line">    private static final String KEY_URL &#x3D; &quot;http:&#x2F;&#x2F;product-center&#x2F;getKey&quot; ;</span><br><span class="line"></span><br><span class="line">    private String securetKey ;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)</span><br><span class="line">            throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        log.info(&quot;通过密钥校验token:&#123;&#125;&quot;,securetKey);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">	&#x2F;&#x2F; InitializingBean接口 这里会在初始化的时候执行</span><br><span class="line">    @Override</span><br><span class="line">    public void afterPropertiesSet() throws Exception &#123;</span><br><span class="line">        securetKey &#x3D; restTemplate.postForObject(KEY_URL,null,String.class);</span><br><span class="line">        log.info(&quot;获取的Key:&#123;&#125;&quot;,securetKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>









<p>被@loadBalance注解 会在LoadBalancerAutoConfiguration类中 定制拦截器也就是 loadBalancedRestTemplateInitializerDeprecated()方法</p>
<p>RestTemplate里面会注入一个LoaderBalanceClient，LoadBalancerAutoConfiguration类的restTemplateCustomizer方法会把拦截器（LoaderBalanceClient）塞入resttemplate中</p>
<p>因为RestTemplate在会在 SmartInitializingSingleton的 afterSingletonsInstantiated方法 去装载拦截器（78多行）</p>
<p>但是 InitializingBean接口会在  DefaultListableBeanFactory.java的 getBean()方法执行 （769行）</p>
<p>也就是说在执行拦截器时，restTemplate还没有拦截器，无法起到负载均衡的作用</p>
<p>解决方法就是重写RestTemplate</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.tuling.config;</span><br><span class="line"></span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.cloud.client.ServiceInstance;</span><br><span class="line">import org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line">import org.springframework.http.HttpMethod;</span><br><span class="line">import org.springframework.http.client.ClientHttpRequest;</span><br><span class="line">import org.springframework.http.client.ClientHttpResponse;</span><br><span class="line">import org.springframework.lang.Nullable;</span><br><span class="line">import org.springframework.util.Assert;</span><br><span class="line">import org.springframework.web.client.*;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.net.URI;</span><br><span class="line">import java.net.URISyntaxException;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 根据RestTemplate特性自己改造</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;19.</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Slf4j</span><br><span class="line">public class TulingRestTemplate extends RestTemplate &#123;</span><br><span class="line"></span><br><span class="line">    private DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">    public TulingRestTemplate (DiscoveryClient discoveryClient) &#123;</span><br><span class="line">        this.discoveryClient &#x3D; discoveryClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected &lt;T&gt; T doExecute(URI url, @Nullable HttpMethod method, @Nullable RequestCallback requestCallback,</span><br><span class="line">                              @Nullable ResponseExtractor&lt;T&gt; responseExtractor) throws RestClientException &#123;</span><br><span class="line"></span><br><span class="line">        Assert.notNull(url, &quot;URI is required&quot;);</span><br><span class="line">        Assert.notNull(method, &quot;HttpMethod is required&quot;);</span><br><span class="line">        ClientHttpResponse response &#x3D; null;</span><br><span class="line">        try &#123;</span><br><span class="line"></span><br><span class="line">            log.info(&quot;请求的url路径为:&#123;&#125;&quot;,url);</span><br><span class="line">            &#x2F;&#x2F;把服务名 替换成我们的IP</span><br><span class="line">            url &#x3D; replaceUrl(url);</span><br><span class="line"></span><br><span class="line">            log.info(&quot;替换后的路径:&#123;&#125;&quot;,url);</span><br><span class="line"></span><br><span class="line">            ClientHttpRequest request &#x3D; createRequest(url, method);</span><br><span class="line">            if (requestCallback !&#x3D; null) &#123;</span><br><span class="line">                requestCallback.doWithRequest(request);</span><br><span class="line">            &#125;</span><br><span class="line">            response &#x3D; request.execute();</span><br><span class="line">            handleResponse(url, method, response);</span><br><span class="line">            return (responseExtractor !&#x3D; null ? responseExtractor.extractData(response) : null);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (IOException ex) &#123;</span><br><span class="line">            String resource &#x3D; url.toString();</span><br><span class="line">            String query &#x3D; url.getRawQuery();</span><br><span class="line">            resource &#x3D; (query !&#x3D; null ? resource.substring(0, resource.indexOf(&#39;?&#39;)) : resource);</span><br><span class="line">            throw new ResourceAccessException(&quot;I&#x2F;O error on &quot; + method.name() +</span><br><span class="line">                    &quot; request for \&quot;&quot; + resource + &quot;\&quot;: &quot; + ex.getMessage(), ex);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (response !&#x3D; null) &#123;</span><br><span class="line">                response.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 方法实现说明:把微服务名称  去注册中心拉取对应IP进行调用</span><br><span class="line">     * http:&#x2F;&#x2F;product-center&#x2F;selectProductInfoById&#x2F;1</span><br><span class="line">     * @author:smlz</span><br><span class="line">     * @param url:请求的url</span><br><span class="line">     * @return:</span><br><span class="line">     * @exception:</span><br><span class="line">     * @date:2020&#x2F;2&#x2F;6 13:11</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private URI replaceUrl(URI url)&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;1:从URI中解析调用的调用的serviceName&#x3D;product-center</span><br><span class="line">        String serviceName &#x3D; url.getHost();</span><br><span class="line">        log.info(&quot;调用微服务的名称:&#123;&#125;&quot;,serviceName);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;2:解析我们的请求路径 reqPath&#x3D; &#x2F;selectProductInfoById&#x2F;1</span><br><span class="line">        String reqPath &#x3D; url.getPath();</span><br><span class="line">        log.info(&quot;请求path:&#123;&#125;&quot;,reqPath);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;通过微服务的名称去nacos服务端获取 对应的实例列表</span><br><span class="line">        List&lt;ServiceInstance&gt; serviceInstanceList &#x3D; discoveryClient.getInstances(serviceName);</span><br><span class="line">        if(serviceInstanceList.isEmpty()) &#123;</span><br><span class="line">            throw new RuntimeException(&quot;没有可用的微服务实例列表:&quot;+serviceName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String serviceIp &#x3D; chooseTargetIp(serviceInstanceList);</span><br><span class="line"></span><br><span class="line">        String source &#x3D; serviceIp+reqPath;</span><br><span class="line">        try &#123;</span><br><span class="line">            return new URI(source);</span><br><span class="line">        &#125; catch (URISyntaxException e) &#123;</span><br><span class="line">            log.error(&quot;根据source:&#123;&#125;构建URI异常&quot;,source);</span><br><span class="line">        &#125;</span><br><span class="line">        return url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 方法实现说明:从服务列表中 随机选举一个ip</span><br><span class="line">     * @author:smlz</span><br><span class="line">     * @param serviceInstanceList 服务列表</span><br><span class="line">     * @return: 调用的ip</span><br><span class="line">     * @exception:</span><br><span class="line">     * @date:2020&#x2F;2&#x2F;6 13:15</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private String chooseTargetIp(List&lt;ServiceInstance&gt; serviceInstanceList) &#123;</span><br><span class="line">        &#x2F;&#x2F;采取随机的获取一个</span><br><span class="line">        Random random &#x3D; new Random();</span><br><span class="line">        Integer randomIndex &#x3D; random.nextInt(serviceInstanceList.size());</span><br><span class="line">        String serviceIp &#x3D; serviceInstanceList.get(randomIndex).getUri().toString();</span><br><span class="line">        log.info(&quot;随机选举的服务IP:&#123;&#125;&quot;,serviceIp);</span><br><span class="line">        return serviceIp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200319001432578.png" alt="image-20200319001432578"></p>
<p><img src="/2020/02/10/NACOS%E5%AE%9E%E8%B7%B5/image-20200319004051350.png" alt="image-20200319004051350"></p>
<p>Spring整合mybatis 与 整合Feign的套路是一样的</p>
<p>写在使用者的主类上@EnableFeignClients</p>
<p>写在api上@FeignClient(name=”product-center”)</p>
<p>复制实现类的注解与方法到api</p>
<p>定义feign的配置类</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@FeignClient(name &#x3D; &quot;pay-center&quot;,configuration &#x3D; PayCenterFeignConfig.class)</span><br></pre></td></tr></table></figure>



<p>yml中必须制定feign-api的包为debug（控制是否答应）</p>
<p>在Config类中是控制打印多少日志（生产上一般用BASIC）</p>
<p>restttemplate中 传递token</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Created by smlz on 2019&#x2F;11&#x2F;22.</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class TulingRequestInterceptor implements RequestInterceptor &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void apply(RequestTemplate template) &#123;</span><br><span class="line"></span><br><span class="line">        ServletRequestAttributes attributes &#x3D; (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        HttpServletRequest request &#x3D; attributes.getRequest();</span><br><span class="line">        template.header(&quot;Token&quot;,request.getHeader(&quot;Token&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>配置类中注入bean</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Bean</span><br><span class="line">public RequestInterceptor requestInterceptor() &#123;</span><br><span class="line">    return new TulingRequestInterceptor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>生产环境中<br>调整日志级别<br>feigin调用改成httpclient</p>
<p>配置中心</p>
<p>bootstrap.yml优先于application.yml<br>配置文件名称规则 spring.application.name-spring.profiles.active . file-extension</p>
<p>启动时会加载配置文件顺序， config-app-dev.yml优先级最高</p>
<p>如果要实现动态刷新必须在类上标注 @RefreshScope</p>
<p>nacos默认是使用derby数据库，找到nacos目录/data/derby-data （要停止nacos）<br>用户名密码：<br>MAVEN:<br>org.springframework.cloud<br>spring-cloud-starter-seurity<br>1.2.2.RELEASE</p>
<p>new BCryptPasswordEncoder().encode(“nacos”) //结果就是加密后字符串</p>
<p>看spring源码最第一步就是看包下面的<code>spring.factories</code>文件 EnableAutoConfiguration对应的看一下</p>
<p>跳过分支代码（if + return）</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>NETOP部署</title>
    <url>/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="环境基础"><a href="#环境基础" class="headerlink" title="环境基础"></a>环境基础</h2><h3 id="配置虚拟机"><a href="#配置虚拟机" class="headerlink" title="配置虚拟机"></a>配置虚拟机</h3><p>由于公司上网限制需要将虚拟机模式为NAT模式</p>
<table>
<thead>
<tr>
<th>VMware中的设置</th>
<th><span style="color:blue"><code>linux</code></span>中的网卡设置</th>
</tr>
</thead>
<tbody><tr>
<td>NAT设置中的<code>子网掩码</code></td>
<td><span style="color:blue"><code>NETMASK</code></span>需要设置为 <code>子网掩码</code></td>
</tr>
<tr>
<td>虚拟机网卡的<code>MAC</code>,连接符为<code>-</code></td>
<td><span style="color:blue"><code>HWADDR</code></span>需要设置为 <code>MAC</code> ,连接符为<span style="color:blue"><code>:</code></span></td>
</tr>
</tbody></table>
<a id="more"></a>

<h4 id="虚拟网络编辑器"><a href="#虚拟网络编辑器" class="headerlink" title="虚拟网络编辑器"></a>虚拟网络编辑器</h4><p>虚拟机的NAT模式可以在 <code>编辑</code> -&gt; <code>虚拟机网络编辑器</code><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215125030058.png" alt="image-20200215125030058"></p>
<h4 id="虚拟机网卡设置"><a href="#虚拟机网卡设置" class="headerlink" title="虚拟机网卡设置"></a>虚拟机网卡设置</h4><p>这里决定了linux的<span style="color:blue"><code>HWADDR</code></span><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215130649654.png" alt="image-20200215130649654"></p>
<h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><p>在启动<code>grub</code>菜单，选择编辑选项启动<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/1032090-20161130233025193-1691299631.png" alt="img"></p>
<p>按键盘<code>e</code>键，来进入编辑界面<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/1032090-20161130233127037-710798124.png" alt="img"></p>
<p>找到Linux 16的那一行，将<code>ro</code>改为<code>rw init=/sysroot/bin/sh</code><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/1032090-20161130233144537-1008782378.png" alt="img"></p>
<p>现在按下<code>Control+x</code>，使用单用户模式启动<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/1032090-20161130233155490-57701682.png" alt="img"><br>现在，可以使用下面的命令访问系统</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chroot /sysroot</span><br></pre></td></tr></table></figure>
<p>重置密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure>
<p>更新系统信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch /.autorelabel</span><br></pre></td></tr></table></figure>
<p>退出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chroot <span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<p>重启你的系统 reboot</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>
<h3 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h3><p>查看网卡</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /etc/sysconfig/network-scripts/</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment"># ls</span></span><br><span class="line">ifcfg-ens33  ifdown-eth   ifdown-post    ifdown-Team      ifup-aliases  ifup-ipv6   ifup-post    ifup-Team      init.ipv6-global</span><br><span class="line">ifcfg-lo     ifdown-ippp  ifdown-ppp     ifdown-TeamPort  ifup-bnep     ifup-isdn   ifup-ppp     ifup-TeamPort  network-functions</span><br><span class="line">ifdown       ifdown-ipv6  ifdown-routes  ifdown-tunnel    ifup-eth      ifup-plip   ifup-routes  ifup-tunnel    network-functions-ipv6</span><br><span class="line">ifdown-bnep  ifdown-isdn  ifdown-sit     ifup             ifup-ippp     ifup-plusb  ifup-sit     ifup-wireless</span><br><span class="line">[root@localhost network-scripts]<span class="comment"># </span></span><br></pre></td></tr></table></figure>
<p>编辑网卡</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi ifcfg-ens33</span><br><span class="line"></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.235.228</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.235.2</span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">PEERDNS=yes</span><br><span class="line">PEERROUTES=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_PEERDNS=yes</span><br><span class="line">IPV6_PEERROUTES=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=ddc851a6-9f17-46fa-b008-fffec48d00a0</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">HWADDR=18:66:DA:F2:F4:28</span><br><span class="line">DNS1=192.168.235.2</span><br></pre></td></tr></table></figure>
<p>重启网卡并查看效果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart network</span><br><span class="line">curl www.baidu.com</span><br></pre></td></tr></table></figure>

<h3 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo.backup</span><br><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">yum makecache</span><br><span class="line">yum -y install wget</span><br><span class="line">yum -y install vim</span><br><span class="line">yum -y install net-tools</span><br><span class="line">yum -y install iptables-services</span><br></pre></td></tr></table></figure>

<h3 id="selinux"><a href="#selinux" class="headerlink" title="selinux"></a>selinux</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;selinux&#x2F;config </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># This file controls the state of SELinux on the system.</span><br><span class="line"># SELINUX&#x3D; can take one of these three values:</span><br><span class="line">#     enforcing - SELinux security policy is enforced.</span><br><span class="line">#     permissive - SELinux prints warnings instead of enforcing.</span><br><span class="line">#     disabled - No SELinux policy is loaded.</span><br><span class="line">SELINUX&#x3D;disabled</span><br><span class="line"># SELINUXTYPE&#x3D; can take one of three values:</span><br><span class="line">#     targeted - Targeted processes are protected,</span><br><span class="line">#     minimum - Modification of targeted policy. Only selected processes are protected. </span><br><span class="line">#     mls - Multi Level Security protection.</span><br><span class="line">SELINUXTYPE&#x3D;targeted</span><br></pre></td></tr></table></figure>
<h3 id="iptable"><a href="#iptable" class="headerlink" title="iptable"></a>iptable</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure>
<h3 id="firewalld-service"><a href="#firewalld-service" class="headerlink" title="firewalld.service"></a>firewalld.service</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>

<h2 id="安装MINIO"><a href="#安装MINIO" class="headerlink" title="安装MINIO"></a>安装MINIO</h2><h3 id="启动minio"><a href="#启动minio" class="headerlink" title="启动minio"></a>启动minio</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">### linux data表示文件存放路径</span></span><br><span class="line">chmod +x minio</span><br><span class="line">./minio server /data</span><br><span class="line"></span><br><span class="line"><span class="comment">## windows data表示文件存放路径</span></span><br><span class="line">minio.exe server data</span><br></pre></td></tr></table></figure>
<p>启动之后在命令行中查看登陆<code>地址</code>，密钥<code>AccessKey</code>,<code>SecretKey</code>。<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/1453445469.bmp" alt="img"></p>
<h3 id="配置minio"><a href="#配置minio" class="headerlink" title="配置minio"></a>配置minio</h3><p>登陆地址输入，刚才的密钥<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200415161054635.png" alt="image-20200415161054635"><br>添加存储桶，名称为<code>upload</code></p>
<p><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200415160953482.png" alt="image-20200415160953482"></p>
<p>设置该桶的的权限为 <code>Read and Write</code>, 规则为<code>*.*</code></p>
<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure>

<h2 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h2><h3 id="并安装JAVA"><a href="#并安装JAVA" class="headerlink" title="并安装JAVA"></a>并安装JAVA</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/package/jdk-8u202-linux-x64.tar.gz -C /opt/app</span><br><span class="line">ln -s jdk1.8.0_202 jdk</span><br></pre></td></tr></table></figure>

<h3 id="修改profile"><a href="#修改profile" class="headerlink" title="修改profile"></a>修改profile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/jdk</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="刷新配置并验证"><a href="#刷新配置并验证" class="headerlink" title="刷新配置并验证"></a>刷新配置并验证</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>

<h2 id="安装MAVEN"><a href="#安装MAVEN" class="headerlink" title="安装MAVEN"></a>安装MAVEN</h2><h3 id="解压maven"><a href="#解压maven" class="headerlink" title="解压maven"></a>解压maven</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/package/apache-maven-3.6.3-bin.tar.gz -C /opt/app</span><br><span class="line">ln -s apache-maven-3.6.3 maven</span><br></pre></td></tr></table></figure>

<h3 id="修改profile-1"><a href="#修改profile-1" class="headerlink" title="修改profile"></a>修改profile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/opt/app/maven</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$MAVEN_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="刷新配置并验证-1"><a href="#刷新配置并验证-1" class="headerlink" title="刷新配置并验证"></a>刷新配置并验证</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">mvn -v</span><br></pre></td></tr></table></figure>

<h3 id="设置配置文件"><a href="#设置配置文件" class="headerlink" title="设置配置文件"></a>设置配置文件</h3><p>创建仓库目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/app/data/repository</span><br></pre></td></tr></table></figure>
<p>编辑配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /opt/app/maven/conf/settings.xml</span><br></pre></td></tr></table></figure>

<p>完整配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment">or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment">distributed with this work for additional information</span></span><br><span class="line"><span class="comment">regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment">to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment">&quot;License&quot;); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment">with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Unless required by applicable law or agreed to in writing,</span></span><br><span class="line"><span class="comment">software distributed under the License is distributed on an</span></span><br><span class="line"><span class="comment">&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span><br><span class="line"><span class="comment">KIND, either express or implied.  See the License for the</span></span><br><span class="line"><span class="comment">specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment">under the License.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> | This is the configuration file for Maven. It can be specified at two levels:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  1. User Level. This settings.xml file provides configuration for a single user,</span></span><br><span class="line"><span class="comment"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -s /path/to/user/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  2. Global Level. This settings.xml file provides configuration for all Maven</span></span><br><span class="line"><span class="comment"> |                 users on a machine (assuming they&#x27;re all using the same Maven</span></span><br><span class="line"><span class="comment"> |                 installation). It&#x27;s normally provided in</span></span><br><span class="line"><span class="comment"> |                 $&#123;maven.conf&#125;/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -gs /path/to/global/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | The sections in this sample file are intended to give you a running start at</span></span><br><span class="line"><span class="comment"> | getting the most out of your Maven installation. Where appropriate, the default</span></span><br><span class="line"><span class="comment"> | values (values used when the setting is not specified) are provided.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/opt/app/data/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- interactiveMode</span></span><br><span class="line"><span class="comment">   | This will determine whether maven prompts you when it needs input. If set to false,</span></span><br><span class="line"><span class="comment">   | maven will use a sensible default value, perhaps based on some other setting, for</span></span><br><span class="line"><span class="comment">   | the parameter in question.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: true</span></span><br><span class="line"><span class="comment">  &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- offline</span></span><br><span class="line"><span class="comment">   | Determines whether maven should attempt to connect to the network when executing a build.</span></span><br><span class="line"><span class="comment">   | This will have an effect on artifact downloads, artifact deployment, and others.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: false</span></span><br><span class="line"><span class="comment">  &lt;offline&gt;false&lt;/offline&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- pluginGroups</span></span><br><span class="line"><span class="comment">   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</span></span><br><span class="line"><span class="comment">   | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers</span></span><br><span class="line"><span class="comment">   | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- pluginGroup</span></span><br><span class="line"><span class="comment">     | Specifies a further group identifier to use for plugin lookup.</span></span><br><span class="line"><span class="comment">    &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- proxies</span></span><br><span class="line"><span class="comment">   | This is a list of proxies which can be used on this machine to connect to the network.</span></span><br><span class="line"><span class="comment">   | Unless otherwise specified (by system property or command-line switch), the first proxy</span></span><br><span class="line"><span class="comment">   | specification in this list marked as active will be used.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- proxy</span></span><br><span class="line"><span class="comment">     | Specification for one proxy, to be used in connecting to the network.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;proxy&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;optional&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;active&gt;true&lt;/active&gt;</span></span><br><span class="line"><span class="comment">      &lt;protocol&gt;http&lt;/protocol&gt;</span></span><br><span class="line"><span class="comment">      &lt;username&gt;proxyuser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">      &lt;password&gt;proxypass&lt;/password&gt;</span></span><br><span class="line"><span class="comment">      &lt;host&gt;proxy.host.net&lt;/host&gt;</span></span><br><span class="line"><span class="comment">      &lt;port&gt;80&lt;/port&gt;</span></span><br><span class="line"><span class="comment">      &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</span></span><br><span class="line"><span class="comment">    &lt;/proxy&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- servers</span></span><br><span class="line"><span class="comment">   | This is a list of authentication profiles, keyed by the server-id used within the system.</span></span><br><span class="line"><span class="comment">   | Authentication profiles can be used whenever maven must make a connection to a remote server.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- server</span></span><br><span class="line"><span class="comment">     | Specifies the authentication information to use when connecting to a particular server, identified by</span></span><br><span class="line"><span class="comment">     | a unique name within the system (referred to by the &#x27;id&#x27; attribute below).</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> You should either specify username/password OR privateKey/passphrase, since these pairings are</span></span><br><span class="line"><span class="comment">     |       used together.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;server&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;deploymentRepo&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;username&gt;repouser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">      &lt;password&gt;repopwd&lt;/password&gt;</span></span><br><span class="line"><span class="comment">    &lt;/server&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Another sample, using keys to authenticate.</span></span><br><span class="line"><span class="comment">    &lt;server&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;siteServer&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;</span></span><br><span class="line"><span class="comment">      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</span></span><br><span class="line"><span class="comment">    &lt;/server&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- mirrors</span></span><br><span class="line"><span class="comment">   | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | It works like this: a POM may declare a repository to use in resolving certain artifacts.</span></span><br><span class="line"><span class="comment">   | However, this repository may have problems with heavy traffic at times, so people have mirrored</span></span><br><span class="line"><span class="comment">   | it to several places.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | That repository definition will have a unique id, so we can create a mirror reference for that</span></span><br><span class="line"><span class="comment">   | repository, to be used as an alternate download site. The mirror site will be the preferred</span></span><br><span class="line"><span class="comment">   | server for that repository.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">     | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">      &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">      &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">    &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- profiles</span></span><br><span class="line"><span class="comment">   | This is a list of profiles which can be activated in a variety of ways, and which can modify</span></span><br><span class="line"><span class="comment">   | the build process. Profiles provided in the settings.xml are intended to provide local machine-</span></span><br><span class="line"><span class="comment">   | specific paths and repository locations which allow the build to work in the local environment.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | For example, if you have an integration testing plugin - like cactus - that needs to know where</span></span><br><span class="line"><span class="comment">   | your Tomcat instance is installed, you can provide a variable here such that the variable is</span></span><br><span class="line"><span class="comment">   | dereferenced during the build process to configure the cactus plugin.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</span></span><br><span class="line"><span class="comment">   | section of this document (settings.xml) - will be discussed later. Another way essentially</span></span><br><span class="line"><span class="comment">   | relies on the detection of a system property, either matching a particular value for the property,</span></span><br><span class="line"><span class="comment">   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</span></span><br><span class="line"><span class="comment">   | value of &#x27;1.4&#x27; might activate a profile when the build is executed on a JDK version of &#x27;1.4.2_07&#x27;.</span></span><br><span class="line"><span class="comment">   | Finally, the list of active profiles can be specified directly from the command line.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | <span class="doctag">NOTE:</span> For profiles defined in the settings.xml, you are restricted to specifying only artifact</span></span><br><span class="line"><span class="comment">   |       repositories, plugin repositories, and free-form properties to be used as configuration</span></span><br><span class="line"><span class="comment">   |       variables for plugins in the POM.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- profile</span></span><br><span class="line"><span class="comment">     | Specifies a set of introductions to the build process, to be activated using one or more of the</span></span><br><span class="line"><span class="comment">     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</span></span><br><span class="line"><span class="comment">     | or the command line, profiles have to have an ID that is unique.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | An encouraged best practice for profile identification is to use a consistent naming convention</span></span><br><span class="line"><span class="comment">     | for profiles, such as &#x27;env-dev&#x27;, &#x27;env-test&#x27;, &#x27;env-production&#x27;, &#x27;user-jdcasey&#x27;, &#x27;user-brett&#x27;, etc.</span></span><br><span class="line"><span class="comment">     | This will make it more intuitive to understand what the set of introduced profiles is attempting</span></span><br><span class="line"><span class="comment">     | to accomplish, particularly when you only have a list of profile id&#x27;s for debug.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</span></span><br><span class="line"><span class="comment">    &lt;profile&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;jdk-1.4&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;activation&gt;</span></span><br><span class="line"><span class="comment">        &lt;jdk&gt;1.4&lt;/jdk&gt;</span></span><br><span class="line"><span class="comment">      &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;repositories&gt;</span></span><br><span class="line"><span class="comment">        &lt;repository&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;jdk14&lt;/id&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt;</span></span><br><span class="line"><span class="comment">          &lt;layout&gt;default&lt;/layout&gt;</span></span><br><span class="line"><span class="comment">          &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;</span></span><br><span class="line"><span class="comment">        &lt;/repository&gt;</span></span><br><span class="line"><span class="comment">      &lt;/repositories&gt;</span></span><br><span class="line"><span class="comment">    &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     | Here is another profile, activated by the system property &#x27;target-env&#x27; with a value of &#x27;dev&#x27;,</span></span><br><span class="line"><span class="comment">     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration</span></span><br><span class="line"><span class="comment">     | might hypothetically look like:</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | ...</span></span><br><span class="line"><span class="comment">     | &lt;plugin&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     |   &lt;configuration&gt;</span></span><br><span class="line"><span class="comment">     |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;/configuration&gt;</span></span><br><span class="line"><span class="comment">     | &lt;/plugin&gt;</span></span><br><span class="line"><span class="comment">     | ...</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> If you just wanted to inject this configuration whenever someone set &#x27;target-env&#x27; to</span></span><br><span class="line"><span class="comment">     |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;profile&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;env-dev&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;activation&gt;</span></span><br><span class="line"><span class="comment">        &lt;property&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;target-env&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;value&gt;dev&lt;/value&gt;</span></span><br><span class="line"><span class="comment">        &lt;/property&gt;</span></span><br><span class="line"><span class="comment">      &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;properties&gt;</span></span><br><span class="line"><span class="comment">        &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</span></span><br><span class="line"><span class="comment">      &lt;/properties&gt;</span></span><br><span class="line"><span class="comment">    &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- activeProfiles</span></span><br><span class="line"><span class="comment">   | List of profiles that are active for all builds.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;activeProfiles&gt;</span></span><br><span class="line"><span class="comment">    &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">    &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">  &lt;/activeProfiles&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="安装NODEJS"><a href="#安装NODEJS" class="headerlink" title="安装NODEJS"></a>安装NODEJS</h2><h3 id="解压NODEJS"><a href="#解压NODEJS" class="headerlink" title="解压NODEJS"></a>解压NODEJS</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf /opt/package/node-v12.15.0-linux-x64.tar.gz -C /opt/app</span><br><span class="line">ln -s node-v12.15.0-linux-x64 node</span><br></pre></td></tr></table></figure>

<h3 id="修改profile-2"><a href="#修改profile-2" class="headerlink" title="修改profile"></a>修改profile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line"><span class="built_in">export</span> NODE_HOME=/opt/app/node</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$NODE_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="刷新配置并验证-2"><a href="#刷新配置并验证-2" class="headerlink" title="刷新配置并验证"></a>刷新配置并验证</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<h3 id="安装cnpm-yarn"><a href="#安装cnpm-yarn" class="headerlink" title="安装cnpm,yarn"></a>安装cnpm,yarn</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">cnpm install -g yarn</span><br><span class="line"></span><br><span class="line">cnpm -v</span><br><span class="line">yarn -v</span><br></pre></td></tr></table></figure>

<h2 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h2><table>
<thead>
<tr>
<th>路径</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>/var/log/jenkins</code></td>
<td><code>jenkins</code>日志目录</td>
</tr>
<tr>
<td><code>/var/lib/jenkins</code></td>
<td><code>war</code>包解压目录</td>
</tr>
<tr>
<td><code>/var/cache/jenkins</code></td>
<td>缓存目录</td>
</tr>
<tr>
<td><code>/etc/sysconfig/jenkins</code></td>
<td><code>jenkins</code>参数配置文件</td>
</tr>
<tr>
<td><code>/etc/yum.repos.d/jenkins.repo</code></td>
<td><code>jenkins</code>的<code>rpm</code>仓库配置</td>
</tr>
</tbody></table>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh jenkins-2.204.2-1.1.noarch.rpm</span><br></pre></td></tr></table></figure>

<h3 id="修改端口"><a href="#修改端口" class="headerlink" title="修改端口"></a>修改端口</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;sysconfig&#x2F;jenkins</span><br><span class="line"></span><br><span class="line">#修改端口号</span><br><span class="line">JENKINS_PORT&#x3D;&quot;8083&quot;</span><br><span class="line">#修改用户权限</span><br><span class="line">JENKINS_USER&#x3D;&quot;root&quot;</span><br></pre></td></tr></table></figure>
<h3 id="启动jenkins"><a href="#启动jenkins" class="headerlink" title="启动jenkins"></a>启动jenkins</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service jenkins start</span><br></pre></td></tr></table></figure>

<h2 id="安装NGINX"><a href="#安装NGINX" class="headerlink" title="安装NGINX"></a>安装NGINX</h2><h3 id="下载解压nginx"><a href="#下载解压nginx" class="headerlink" title="下载解压nginx"></a>下载解压nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础软件</span></span><br><span class="line">yum install gcc-c++</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br><span class="line"></span><br><span class="line">tar -zxvf /opt/package/nginx-1.17.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_ssl_module</span><br></pre></td></tr></table></figure>

<h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="查找安装路径"><a href="#查找安装路径" class="headerlink" title="查找安装路径"></a>查找安装路径</h3><p>环境变量在安装时已经自动配置完成了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx: /usr/local/nginx</span></span><br></pre></td></tr></table></figure>

<h3 id="启动、停止、重启nginx"><a href="#启动、停止、重启nginx" class="headerlink" title="启动、停止、重启nginx"></a>启动、停止、重启nginx</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># cd &#x2F;usr&#x2F;local&#x2F;nginx</span><br><span class="line">.&#x2F;nginx </span><br><span class="line">.&#x2F;nginx -s stop #此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。</span><br><span class="line">.&#x2F;nginx -s quit # 此方式停止步骤是待nginx进程处理任务完毕进行停止。</span><br><span class="line">.&#x2F;nginx -s reload</span><br><span class="line">.&#x2F;nginx -s quit &amp;&amp; .&#x2F;nginx #重启</span><br></pre></td></tr></table></figure>

<h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/rc.local</span><br><span class="line"><span class="comment"># 增加一行 </span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>
<p>设置权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 755 rc.local</span><br></pre></td></tr></table></figure>

<h2 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h2><h3 id="下载解压Redis"><a href="#下载解压Redis" class="headerlink" title="下载解压Redis"></a>下载解压Redis</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础软件</span></span><br><span class="line">yum install -y gcc</span><br><span class="line"></span><br><span class="line">tar -zxvf /opt/package/redis-5.0.7.tar.gz  -C /opt/app</span><br><span class="line">ln -s redis-5.0.7 redis</span><br></pre></td></tr></table></figure>

<h3 id="编译安装-1"><a href="#编译安装-1" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#daemonize no 改为 daemonize yes</span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#注释 bind 127.0.0.1</span></span><br><span class="line"><span class="comment">#bind 127.0.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># protected-mode yes 改为 protected-mode no</span></span><br><span class="line">protected-mode yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置密码(非必须)</span></span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure>
<h3 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/app/redis/src/redis-server /opt/app/redis/redis.conf</span><br></pre></td></tr></table></figure>

<h2 id="重启jenkins，nginx"><a href="#重启jenkins，nginx" class="headerlink" title="重启jenkins，nginx"></a>重启jenkins，nginx</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart jenkins</span><br><span class="line">./nginx -s quit &amp;&amp; ./nginx</span><br></pre></td></tr></table></figure>

<h2 id="SONAR安装"><a href="#SONAR安装" class="headerlink" title="SONAR安装"></a>SONAR安装</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>这里一定要使用<code>postgresql</code><br>创建数据库名称为<code>sonar</code></p>
<h3 id="安装soanr"><a href="#安装soanr" class="headerlink" title="安装soanr"></a>安装soanr</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unzip sonarqube-8.3.1.34397.zip</span><br><span class="line">mv sonarqube-8.3.1.34397 sonarqube-8</span><br><span class="line">adduser sonarqube</span><br><span class="line">passwd sonarqube</span><br><span class="line">chown -R sonarqube:sonarqube sonarqube-8</span><br></pre></td></tr></table></figure>
<h3 id="修改配置文件："><a href="#修改配置文件：" class="headerlink" title="修改配置文件："></a>修改配置文件：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;opt&#x2F;app&#x2F;sonarqube-8&#x2F;conf&#x2F;sonar.properties</span><br><span class="line">sonar.jdbc.url&#x3D;jdbc:postgresql:&#x2F;&#x2F;172.30.4.179:5432&#x2F;sonar</span><br><span class="line">sonar.jdbc.username&#x3D;postgres</span><br><span class="line">sonar.jdbc.password&#x3D;postgres</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sonar.path.data&#x3D;&#x2F;opt&#x2F;app&#x2F;sonarqube-8&#x2F;data</span><br><span class="line">sonar.path.temp&#x3D;&#x2F;opt&#x2F;app&#x2F;sonarqube-8&#x2F;temp</span><br></pre></td></tr></table></figure>

<h3 id="安装sonar-scanner"><a href="#安装sonar-scanner" class="headerlink" title="安装sonar-scanner"></a>安装sonar-scanner</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unzip sonar-scanner-cli-4.2.0.1873-linux.zip</span><br></pre></td></tr></table></figure>
<h3 id="修改profile-3"><a href="#修改profile-3" class="headerlink" title="修改profile"></a>修改profile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后3行插入</span></span><br><span class="line">SONAR_RUNNER_HOME=/opt/app/sonar-cli-4.2.0.1873-linux</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$SONAR_RUNNER_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="刷新配置"><a href="#刷新配置" class="headerlink" title="刷新配置"></a>刷新配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<h3 id="启动sonar"><a href="#启动sonar" class="headerlink" title="启动sonar"></a>启动sonar</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su sonarqube</span><br><span class="line">&#x2F;opt&#x2F;app&#x2F;sonarqube-8&#x2F;bin&#x2F;sonar.sh console</span><br></pre></td></tr></table></figure>

<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>登陆页面 <code>http://127.0.0.1:9000</code>,用户名<code>admin</code>,密码<code>admin</code><br>点击<code>配置</code>-&gt;<code>应用市场</code>-&gt;<code>全部</code><br>输入<code>Chinese Pack</code>搜索安装中文插件<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200515110114615.png" alt="image-20200515110114615"></p>
<p>安装完成之后重启即可</p>
<h2 id="JENKINS配置"><a href="#JENKINS配置" class="headerlink" title="JENKINS配置"></a>JENKINS配置</h2><h3 id="启动以及基础配置"><a href="#启动以及基础配置" class="headerlink" title="启动以及基础配置"></a>启动以及基础配置</h3><p>首次进入会要求输入初始密码如下图，<br>初始密码在：<code>/var/lib/jenkins/secrets/initialAdminPassword</code><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/463776-20180404082707338-423425522.png" alt="img"></p>
<h3 id="安装默认插件"><a href="#安装默认插件" class="headerlink" title="安装默认插件"></a>安装默认插件</h3><p>选择“Install suggested plugins”安装默认的插件，下面Jenkins就会自己去下载相关的插件进行安装。<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/463776-20180404082737817-954357781.png" alt="img"><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/463776-20180404082804576-535120660.png" alt="img"></p>
<h3 id="设置超级管理员账号"><a href="#设置超级管理员账号" class="headerlink" title="设置超级管理员账号"></a>设置超级管理员账号</h3><p>初次进入后可能会设置用户名,密码。<br>这里用户名设置为<code>admin</code><br>这里密码设置为<code>admin</code><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/463776-20180404082758228-1857220561.png" alt="img"></p>
<h3 id="安装额外插件"><a href="#安装额外插件" class="headerlink" title="安装额外插件"></a>安装额外插件</h3><p><code>系统管理 </code>-&gt; <code>插件管理</code><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215162318535.png" alt="image-20200215162318535"><br>分别安装</p>
<ul>
<li><code>GitLab Plugin</code></li>
<li><code>GitLab Hook Plugin</code></li>
<li><code>NodeJS Plugin</code></li>
<li><code>Maven Integration plugin</code></li>
<li><code>Git parameter</code></li>
<li><code>Publish Over SSH</code></li>
<li><code>Python</code><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215164130755.png" alt="image-20200215164130755"><br>等待重启完成即可<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215164647114.png" alt="image-20200215164647114"></li>
</ul>
<h3 id="全局工具配置"><a href="#全局工具配置" class="headerlink" title="全局工具配置"></a>全局工具配置</h3><p><code>系统管理</code> -&gt; <code>全局工具配置</code><br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215165244622.png" alt="image-20200215165244622"></p>
<h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><p>由于<code>git</code>已经安装，全部默认<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215165510092.png" alt="image-20200215165510092"></p>
<h4 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h4><p>指向<code>$MAVEN_HOME</code>即可<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215165529058.png" alt="image-20200215165529058"></p>
<h4 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h4><p>指向<code>$NODE_HOME</code>即可<br><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200215165550706.png" alt="image-20200215165550706"></p>
<h4 id="SONAR"><a href="#SONAR" class="headerlink" title="SONAR"></a>SONAR</h4><p>指向``<br>即可<img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200515110459090.png" alt="image-20200515110459090"></p>
<p>配置完成后点击保存按钮</p>
<h2 id="JENKINS部署"><a href="#JENKINS部署" class="headerlink" title="JENKINS部署"></a>JENKINS部署</h2><h3 id="端口号规划"><a href="#端口号规划" class="headerlink" title="端口号规划"></a>端口号规划</h3><table>
<thead>
<tr>
<th>端口号</th>
<th>项目</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>3000</td>
<td>netop-auth</td>
<td>后端-权限验证</td>
</tr>
<tr>
<td>6001</td>
<td>netop-coveroptim</td>
<td>后端-弱覆盖</td>
</tr>
<tr>
<td>13000</td>
<td>netop-config</td>
<td>后端-配置相关</td>
</tr>
<tr>
<td>6000</td>
<td>netop-map</td>
<td>后端-地图相关</td>
</tr>
<tr>
<td>4016</td>
<td>netop-upms-biz</td>
<td>后端-基本功能</td>
</tr>
<tr>
<td>9999</td>
<td>netop-gateway</td>
<td>后端-网关</td>
</tr>
<tr>
<td>8848</td>
<td>netop-register</td>
<td>后端-注册中心</td>
</tr>
<tr>
<td>8083</td>
<td>jenkins</td>
<td>自动构建</td>
</tr>
<tr>
<td>8080 -&gt; 8888</td>
<td>netop-ui</td>
<td>前端-通过脚本改为8888</td>
</tr>
<tr>
<td>8080</td>
<td>geoserver</td>
<td>地图服务</td>
</tr>
<tr>
<td>6379</td>
<td>redis</td>
<td>数据库（预留）</td>
</tr>
<tr>
<td>3306</td>
<td>mysql</td>
<td>数据库（预留）</td>
</tr>
<tr>
<td>5432</td>
<td>postgresql</td>
<td>数据库（预留）</td>
</tr>
</tbody></table>
<h3 id="HOST规划"><a href="#HOST规划" class="headerlink" title="HOST规划"></a>HOST规划</h3><p>修改host文件<code>vim /etc/hosts</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">172.30.4.238    netop-redis</span><br><span class="line">172.30.4.238    netop-mysql</span><br><span class="line">172.30.4.238    netop-postgresql</span><br><span class="line"></span><br><span class="line">172.30.4.203            netop-register</span><br><span class="line">172.30.4.203            netop-gateway</span><br><span class="line">172.30.4.203            netop-auth</span><br><span class="line">172.30.4.203            geoserver <span class="comment">#预留</span></span><br></pre></td></tr></table></figure>







<h3 id="JENKINS部署NETOP后端项目"><a href="#JENKINS部署NETOP后端项目" class="headerlink" title="JENKINS部署NETOP后端项目"></a>JENKINS部署NETOP后端项目</h3><p><code>新建任务</code> -&gt; <code>构建一个maven项目</code></p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/Jenkins_SpringCloud.png" alt="image-20200215165550706"></p>
<h4 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">clean install -Dmaven.test.skip&#x3D;true -Ptest</span><br></pre></td></tr></table></figure>

<h4 id="Pre-Steps"><a href="#Pre-Steps" class="headerlink" title="Pre Steps"></a>Pre Steps</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pid=`ps -ef | grep -n <span class="string">&#x27;netop-.*\/target\/netop-.*\.jar&#x27;</span> | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$pid</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;kill -9:&quot;</span> <span class="variable">$pid</span></span><br><span class="line">    <span class="built_in">kill</span> -9 <span class="variable">$pid</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h4 id="Post-Steps"><a href="#Post-Steps" class="headerlink" title="Post Steps"></a>Post Steps</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /var/<span class="built_in">log</span>/netop/</span><br><span class="line">rm -rf /var/<span class="built_in">log</span>/netop/*</span><br><span class="line"><span class="built_in">cd</span> /var/lib/jenkins/workspace/NETOP</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-register/target/netop-register.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/register.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-gateway/target/netop-gateway.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/gateway.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-auth/target/netop-auth.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/auth.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-upms/netop-upms-biz/target/netop-upms-biz.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/upms-biz.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-coveroptim/target/netop-coveroptim.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/coveroptim.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-map/target/netop-map.jar   --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/map.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-config/target/netop-config.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/config.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-handoveroptim/target/netop-handoveroptim.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/handoveroptim.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-ai/target/netop-ai.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/ai.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-visual/netop-massivemimo/target/netop-massivemimo.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/massivemimo.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID=dontKillMe nohup java -jar netop-sparkclient/netop-sparkclient-biz/target/netop-sparkclient-biz.jar  --spring.profiles.active=dev &gt; /var/<span class="built_in">log</span>/netop/sparkclient-biz.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<h3 id="JENKINS部署SONAR扫描"><a href="#JENKINS部署SONAR扫描" class="headerlink" title="JENKINS部署SONAR扫描"></a>JENKINS部署SONAR扫描</h3><p><code>新建任务</code> -&gt; <code>构建一个自由风格的软件项目</code></p>
<h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200515111042607.png" alt="image-20200515111042607"></p>
<h4 id="Analysis-properties"><a href="#Analysis-properties" class="headerlink" title="Analysis properties"></a>Analysis properties</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">sonar.login</span>=<span class="string">admin</span></span><br><span class="line"><span class="meta">sonar.password</span>=<span class="string">admin</span></span><br><span class="line"><span class="meta">sonar.projectKey</span>=<span class="string">netop</span></span><br><span class="line"><span class="meta">sonar.projectName</span>=<span class="string">netop</span></span><br><span class="line"><span class="meta">sonar.projectVersion</span>=<span class="string">1.0</span></span><br><span class="line"><span class="meta">sonar.sourceEncoding</span>=<span class="string">UTF-8</span></span><br><span class="line"><span class="meta">sonar.language</span>=<span class="string">java</span></span><br><span class="line"><span class="meta">sonar.sources</span>=<span class="string">.</span></span><br><span class="line"><span class="meta">sonar.java.binaries</span>=<span class="string">.</span></span><br></pre></td></tr></table></figure>

<h3 id="JENKINS部署NETOP前端项目"><a href="#JENKINS部署NETOP前端项目" class="headerlink" title="JENKINS部署NETOP前端项目"></a>JENKINS部署NETOP前端项目</h3><p><code>新建任务</code> -&gt; <code>构建一个自由风格的软件项目</code></p>
<h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><p><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/Jenkins_NODEJS.png" alt="image-20200215165550706"></p>
<h4 id="执行shell"><a href="#执行shell" class="headerlink" title="执行shell"></a>执行shell</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pid=`ps -ef | grep -n <span class="string">&#x27;NETOP_UI\/node_modules\/\.bin/vue-cli-service serve&#x27;</span> | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$pid</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;kill -9:&quot;</span> <span class="variable">$pid</span></span><br><span class="line">    <span class="built_in">kill</span> -9 <span class="variable">$pid</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h4 id="执行shell-1"><a href="#执行shell-1" class="headerlink" title="执行shell"></a>执行shell</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">oldIP=172.30.5.32</span><br><span class="line">newIP=172.30.4.203</span><br><span class="line">sed -i <span class="string">&#x27;s/&#x27;</span><span class="variable">$oldIP</span><span class="string">&#x27;/&#x27;</span><span class="variable">$newIP</span><span class="string">&#x27;/g&#x27;</span> `grep -rl <span class="variable">$oldIP</span> ./`</span><br><span class="line">sed -i <span class="string">&#x27;s/&#x27;</span>8080<span class="string">&#x27;/&#x27;</span>8888<span class="string">&#x27;/g&#x27;</span> vue.config.js</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="执行shell-2"><a href="#执行shell-2" class="headerlink" title="执行shell"></a>执行shell</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm install -g cnpm --registry=https://registry.npm.taobao.org</span></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/netop_ui/</span><br><span class="line">rm -rf /var/<span class="built_in">log</span>/netop_ui/*</span><br><span class="line"></span><br><span class="line">npm run pre</span><br><span class="line">BUILD_ID=dontKillMe nohup npm run dev &gt; /var/<span class="built_in">log</span>/netop_ui/dev.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<h3 id="手动方式部署"><a href="#手动方式部署" class="headerlink" title="手动方式部署"></a>手动方式部署</h3><h4 id="手动获取编译后的后台文件"><a href="#手动获取编译后的后台文件" class="headerlink" title="手动获取编译后的后台文件"></a>手动获取编译后的后台文件</h4><p>后台启动的jar</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/var/lib/jenkins/workspace/NETOP/netop-register/target/netop-register.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-gateway/target/netop-gateway.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-auth/target/netop-auth.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-upms/netop-upms-biz/target/netop-upms-biz.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-visual/netop-coveroptim/target/netop-coveroptim.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-visual/netop-map/target/netop-map.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-visual/netop-config/target/netop-config.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-visual/netop-handoveroptim/target/netop-handoveroptim.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-visual/netop-ai/target/netop-ai.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-visual/netop-massivemimo/target/netop-massivemimo.jar</span><br><span class="line">/var/lib/jenkins/workspace/NETOP/netop-sparkclient/netop-sparkclient-biz/target/netop-sparkclient-biz.jar</span><br></pre></td></tr></table></figure>
<p>mysql的项目SQL文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;mysql&#x2F;netop&#x2F;netop.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;mysql&#x2F;netop&#x2F;sys_dict_item.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;mysql&#x2F;netop&#x2F;sys_dict.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;mysql&#x2F;netop&#x2F;sys_menu.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;mysql&#x2F;netop&#x2F;sys_prov_info.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;mysql&#x2F;netop&#x2F;sys_role_menu.sql</span><br></pre></td></tr></table></figure>

<p>nacos的SQL文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;mysql&#x2F;netop_config&#x2F;netop_config.sql</span><br></pre></td></tr></table></figure>
<p>postgresql的SQL文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;aiconfig.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;massivemimo_beam_config.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;massivemimo_direction_graph.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;MassiveMIMO_PSO.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;render_segment_config.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;render_segment_type.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;tb_mimo_group_cell.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;tb_mimo_job_session.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;tb_mimo_sub_task.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;tb_mimo_task.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;tb_png_info.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;tb_scan_ping_data.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_city_code.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_config_region.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_covopt_sys_conf.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_lte2lte_nei.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_lte2nr_ms.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_lte2nr_nei.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_nr2lte_nei.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_nr2nr_nei.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_opt_scene_info.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;t_prov_info.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;wcnos_gis_antenna_opt_lte.sql</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;sql&#x2F;v2.1&#x2F;full&#x2F;pg&#x2F;wcnos_gis_antenna_opt_nr.sql</span><br></pre></td></tr></table></figure>
<p>获取前台文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP_UI&#x2F;dist</span><br></pre></td></tr></table></figure>
<h4 id="手动启动前台"><a href="#手动启动前台" class="headerlink" title="手动启动前台"></a>手动启动前台</h4><p>将前台文件放到<code>/var/lib/jenkins/workspace/NETOP_UI/dist</code>目录下<br>修改<code>nginx</code>配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs&#x2F;error.log;</span><br><span class="line">#error_log  logs&#x2F;error.log  notice;</span><br><span class="line">#error_log  logs&#x2F;error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs&#x2F;nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line">    #                  &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line">    #                  &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs&#x2F;access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 8888;</span><br><span class="line">        server_name dtmobile.netop.com;</span><br><span class="line">        </span><br><span class="line">        root &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP_UI&#x2F;dist&#x2F;;</span><br><span class="line">              </span><br><span class="line">        location ~* ^&#x2F;(code|auth|admin|gen|actuator|monitor|mp|daemon|job|tx|pay|act|coveroptim|config|map|handoveroptim|geoserver|mimo|spark) &#123;</span><br><span class="line">        # GUYU</span><br><span class="line">           proxy_pass http:&#x2F;&#x2F;127.0.0.1:9999;</span><br><span class="line">           #proxy_set_header Host $http_host;</span><br><span class="line">           proxy_connect_timeout 15s;</span><br><span class="line">           proxy_send_timeout 15s;</span><br><span class="line">           proxy_read_timeout 15s;</span><br><span class="line">           proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>重新加载nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>
<h4 id="手动启动后台"><a href="#手动启动后台" class="headerlink" title="手动启动后台"></a>手动启动后台</h4><p>确定所有jar包位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-register&#x2F;target&#x2F;netop-register.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-gateway&#x2F;target&#x2F;netop-gateway.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-auth&#x2F;target&#x2F;netop-auth.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-upms&#x2F;netop-upms-biz&#x2F;target&#x2F;netop-upms-biz.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-visual&#x2F;netop-coveroptim&#x2F;target&#x2F;netop-coveroptim.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-visual&#x2F;netop-map&#x2F;target&#x2F;netop-map.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-visual&#x2F;netop-config&#x2F;target&#x2F;netop-config.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-visual&#x2F;netop-handoveroptim&#x2F;target&#x2F;netop-handoveroptim.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-visual&#x2F;netop-ai&#x2F;target&#x2F;netop-ai.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-visual&#x2F;netop-massivemimo&#x2F;target&#x2F;netop-massivemimo.jar</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;NETOP&#x2F;netop-sparkclient&#x2F;netop-sparkclient-biz&#x2F;target&#x2F;netop-sparkclient-biz.jar</span><br></pre></td></tr></table></figure>
<p>将nacos的SQL文件导入mysql的实例<code>netop_config</code></p>
<p>将mysql的SQL文件导入mysql的实例<code>netop</code></p>
<p>将pg的SQL文件导入pg的实例<code>netop_optimize</code></p>
<p>启动<code>netop-register</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-register&#x2F;target&#x2F;netop-register.jar  --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;register.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<p>打开网页<code>127.0.0.1:8848\nacos</code>,用户名，密码均是nacos</p>
<p>目前一共有13个配置文件分别是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">application-dev.yml</span><br><span class="line">netop-ai-dev.yml</span><br><span class="line">netop-auth-dev.yml</span><br><span class="line">netop-config-dev.yml</span><br><span class="line">netop-coveroptim-dev.yml</span><br><span class="line">netop-gateway-dev.yml</span><br><span class="line">netop-handoveroptim-dev.yml</span><br><span class="line">netop-map-dev.yml</span><br><span class="line">netop-massivemimo-dev.yml</span><br><span class="line">netop-monitor-dev.yml</span><br><span class="line">netop-sparkclient-biz-dev.yml</span><br><span class="line">netop-upms-biz-dev.yml</span><br><span class="line">netop-visual-common-web-dev.yml</span><br></pre></td></tr></table></figure>

<p>修改mysql的数据库信息（地址+用户名+密码+实例名）<br>修改pg的数据库信息修（地址+用户名+密码+实例名）<br>修改minio的数据库信息（地址）</p>
<p>修改geoserver地址表 sys_route_conf</p>
<p><img src="/2020/02/15/NETOP%E9%83%A8%E7%BD%B2/image-20200415193152364.png" alt="image-20200415193152364"></p>
<p>修改完成之后启动全部服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-register&#x2F;target&#x2F;netop-register.jar  --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;register.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-gateway&#x2F;target&#x2F;netop-gateway.jar   --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;gateway.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-auth&#x2F;target&#x2F;netop-auth.jar   --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;auth.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-upms&#x2F;netop-upms-biz&#x2F;target&#x2F;netop-upms-biz.jar   --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;upms-biz.log 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 60s</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-visual&#x2F;netop-coveroptim&#x2F;target&#x2F;netop-coveroptim.jar   --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;coveroptim.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-visual&#x2F;netop-map&#x2F;target&#x2F;netop-map.jar   --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;map.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-visual&#x2F;netop-config&#x2F;target&#x2F;netop-config.jar  --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;config.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-visual&#x2F;netop-handoveroptim&#x2F;target&#x2F;netop-handoveroptim.jar  --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;handoveroptim.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-visual&#x2F;netop-ai&#x2F;target&#x2F;netop-ai.jar  --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;ai.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-visual&#x2F;netop-massivemimo&#x2F;target&#x2F;netop-massivemimo.jar  --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;massivemimo.log 2&gt;&amp;1 &amp;</span><br><span class="line">BUILD_ID&#x3D;dontKillMe nohup java -jar netop-sparkclient&#x2F;netop-sparkclient-biz&#x2F;target&#x2F;netop-sparkclient-biz.jar  --spring.profiles.active&#x3D;dev &gt; &#x2F;var&#x2F;log&#x2F;netop&#x2F;sparkclient-biz.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol start="2">
<li>确保所有数据已存在互相关联，大数据表都已经入库到PG</li>
<li>pg版本必须为12 ， mysql版本必须为8</li>
</ol>
]]></content>
      <tags>
        <tag>netop</tag>
      </tags>
  </entry>
  <entry>
    <title>APK反编译</title>
    <url>/2020/03/15/APK%E5%8F%8D%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuNTJwb2ppZS5jbi90aHJlYWQtNzQyNzAzLTEtMS5odG1s" title="https://www.52pojie.cn/thread-742703-1-1.html">教我兄弟学Android逆向系列课程+附件导航帖<i class="fa fa-external-link"></i></span></p>
</blockquote>
<a id="more"></a>

<h3 id="Android反编译工具"><a href="#Android反编译工具" class="headerlink" title="Android反编译工具"></a>Android反编译工具</h3><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3F5c2gxMjMvYXJ0aWNsZS9kZXRhaWxzLzc5MDIzMDA3" title="https://blog.csdn.net/qysh123/article/details/79023007">Android反编译工具baksmali最新版的使用方法<i class="fa fa-external-link"></i></span><br>Baksmali：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0plc3VzRnJla2Uvc21hbGk=" title="https://github.com/JesusFreke/smali">https://github.com/JesusFreke/smali<i class="fa fa-external-link"></i></span><br>Apktool：<span class="exturl" data-url="aHR0cHM6Ly9pYm90cGVhY2hlcy5naXRodWIuaW8vQXBrdG9vbC8=" title="https://ibotpeaches.github.io/Apktool/">https://ibotpeaches.github.io/Apktool/<i class="fa fa-external-link"></i></span><br>dex2jar：<span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvZGV4Mmphci8=" title="https://sourceforge.net/projects/dex2jar/">https://sourceforge.net/projects/dex2jar/<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h3 id="Davilk字节码"><a href="#Davilk字节码" class="headerlink" title="Davilk字节码"></a>Davilk字节码</h3><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8wMjI1MGQ3ZjlmZjQ=" title="https://www.jianshu.com/p/02250d7f9ff4">彻底弄懂dalvik字节码【一】<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC85MGNlZjkwMjZjOWU=" title="https://www.jianshu.com/p/90cef9026c9e">彻底弄懂dalvik字节码【二】<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hYmExZjk2NmQ3ZjI=" title="https://www.jianshu.com/p/aba1f966d7f2">彻底弄懂dalvik字节码【三】<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC84MGQyMmY2NmUwNDI=" title="https://www.jianshu.com/p/80d22f66e042">Android逆向之路:深入理解Davilk字节码指令及Smali文件<i class="fa fa-external-link"></i></span></p>
</blockquote>
<h3 id="Dalvik字节码含义查询表"><a href="#Dalvik字节码含义查询表" class="headerlink" title="Dalvik字节码含义查询表"></a>Dalvik字节码含义查询表</h3><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ppYXlhbmh1aTI4NzcvYXJ0aWNsZS9kZXRhaWxzLzQxMDA4OTg1" title="https://blog.csdn.net/jiayanhui2877/article/details/41008985">https://blog.csdn.net/jiayanhui2877/article/details/41008985<i class="fa fa-external-link"></i></span></p>
</blockquote>
<table>
<thead>
<tr>
<th>Opcode  (hex)</th>
<th>Opcode name</th>
<th>Explanation</th>
<th>Example</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>nop</td>
<td>No  operation</td>
<td>0000  - nop</td>
</tr>
<tr>
<td>1</td>
<td>move vx,vy</td>
<td>Moves the content of vy into vx. Both registers  must be in the first 256 register range.</td>
<td>0110  - move v0, v1</td>
</tr>
<tr>
<td>Moves v1 into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>move/from16 vx,vy</td>
<td>Moves the content of vy into vx. vy may be in the  64k register range while vx is one of the first 256 registers.</td>
<td>0200  1900 - move/from16 v0, v25</td>
</tr>
<tr>
<td>Moves v25 into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>move/16</td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>move-wide</td>
<td></td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>move-wide/from16 vx,vy</td>
<td>Moves a long/double value from vy to vx. vy may  be in the 64k register range while wx is one of the first 256 registers.</td>
<td>0516  0000 - move-wide/from16 v22, v0</td>
</tr>
<tr>
<td>Moves v0 into v22.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>move-wide/16</td>
<td></td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>move-object vx,vy</td>
<td>Moves the object reference from vy to vx.</td>
<td>0781  - move-object v1, v8</td>
</tr>
<tr>
<td>Moves the object reference in v8 to v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>move-object/from16 vx,vy</td>
<td>Moves the object reference from vy to vx, vy can  address 64k registers and vx can address 256 registers.</td>
<td>0801  1500 - move-object/from16 v1, v21</td>
</tr>
<tr>
<td>Move the object reference in v21 to v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>move-object/16</td>
<td></td>
<td></td>
</tr>
<tr>
<td>0A</td>
<td>move-result vx</td>
<td>Move the result value of the previous method  invocation into vx.</td>
<td>0A00  - move-result v0</td>
</tr>
<tr>
<td>Move the return value of a previous method invocation into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0B</td>
<td>move-result-wide vx</td>
<td>Move the long/double result value of the previous  method invocation into vx,vx+1.</td>
<td>0B02  - move-result-wide v2</td>
</tr>
<tr>
<td>Move the long/double result value of the previous method  invocation into v2,v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0C</td>
<td>move-result-object  vx</td>
<td>Move  the result object reference of the previous method invocation into vx.</td>
<td>0C00  - move-result-object v0</td>
</tr>
<tr>
<td>0D</td>
<td>move-exception  vx</td>
<td>Move  the exception object reference thrown during a method invocation into vx.</td>
<td>0D19  - move-exception v25</td>
</tr>
<tr>
<td>0E</td>
<td>return-void</td>
<td>Return  without a return value</td>
<td>0E00  - return-void</td>
</tr>
<tr>
<td>0F</td>
<td>return vx</td>
<td>Return with vx return value</td>
<td>0F00  - return v0</td>
</tr>
<tr>
<td>Returns with return value in v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>return-wide vx</td>
<td>Return with double/long result in vx,vx+1.</td>
<td>1000  - return-wide v0</td>
</tr>
<tr>
<td>Returns with a double/long value in v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11</td>
<td>return-object vx</td>
<td>Return with vx object reference value.</td>
<td>1100  - return-object v0</td>
</tr>
<tr>
<td>Returns with object reference value in v0</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>const/4 vx,lit4</td>
<td>Puts the 4 bit constant into vx</td>
<td>1221  - const/4 v1, #int2</td>
</tr>
<tr>
<td>Moves literal 2 into v1. The destination register is in the lower  4 bit in the second byte, the literal 2 is in the higher 4 bit.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>13</td>
<td>const/16 vx,lit16</td>
<td>Puts the 16 bit constant into vx</td>
<td>1300  0A00 - const/16 v0, #int 10</td>
</tr>
<tr>
<td>Puts the literal constant of 10 into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>14</td>
<td>const vx, lit32</td>
<td>Puts the integer constant into vx</td>
<td>1400  4E61 BC00 - const v0, #12345678 // #00BC614E</td>
</tr>
<tr>
<td>Moves literal 12345678 into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>15</td>
<td>const/high16 v0, lit16</td>
<td>Puts the 16 bit constant into the topmost bits of  the register. Used to initialize float values.</td>
<td>1500  2041 - const/high16 v0, #float 10.0 // #41200000</td>
</tr>
<tr>
<td>Moves the floating literal of 10.0 into v0. The 16 bit literal in  the instruction carries the top 16 bits of the floating point number.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>16</td>
<td>const-wide/16 vx, lit16</td>
<td>Puts the integer constant into vx and vx+1  registers, expanding the integer constant into a long constant..</td>
<td>1600  0A00 - const-wide/16 v0, #long 10</td>
</tr>
<tr>
<td>Moves literal 10 into v0 and v1 registers.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>17</td>
<td>const-wide/32 vx, lit32</td>
<td>Puts the 32 bit constant into vx and vx+1  registers, expanding the integer constant into a long constant.</td>
<td>1702  4e61 bc00 - const-wide/32 v2, #long 12345678 // #00bc614e</td>
</tr>
<tr>
<td>Puts #12345678 into v2 and v3 registers.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>18</td>
<td>const-wide vx, lit64</td>
<td>Puts the 64 bit constant into vx and vx+1  registers.</td>
<td>1802  874b 6b5d 54dc 2b00- const-wide v2, #long 12345678901234567 //  #002bdc545d6b4b87</td>
</tr>
<tr>
<td>Puts #12345678901234567 into v2 and v3 registers.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>19</td>
<td>const-wide/high16 vx,lit16</td>
<td>Puts the 16 bit constant into the highest 16 bit  of vx and vx+1 registers. Used to initialize double values.</td>
<td>1900  2440 - const-wide/high16 v0, #double 10.0 // #402400000</td>
</tr>
<tr>
<td>Puts the double constant of 10.0 into v0 register.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1A</td>
<td>const-string vx,string_id</td>
<td>Puts reference to a string constant identified by  string_id into vx.</td>
<td>1A08  0000 - const-string v8, “” // string@0000</td>
</tr>
<tr>
<td>Puts reference to string@0000 (entry #0 in the string table) into  v8.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1B</td>
<td>const-string-jumbo</td>
<td></td>
<td></td>
</tr>
<tr>
<td>1C</td>
<td>const-class vx,type_id</td>
<td>Moves the class object of a class identified by  type_id (e.g. Object.class) into vx.</td>
<td>1C00  0100 - const-class v0, Test3 // type@0001</td>
</tr>
<tr>
<td>Moves reference to Test3.class (entry#1 in the type id table)  into</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1D</td>
<td>monitor-enter vx</td>
<td>Obtains the monitor of the object referenced by  vx.</td>
<td>1D03  - monitor-enter v3</td>
</tr>
<tr>
<td>Obtains the monitor of the object referenced by v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1E</td>
<td>monitor-exit</td>
<td>Releases the monitor of the object referenced by  vx.</td>
<td>1E03  - monitor-exit v3</td>
</tr>
<tr>
<td>Releases the monitor of the object referenced by v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1F</td>
<td>check-cast vx, type_id</td>
<td>Checks whether the object reference in vx can be  cast to an instance of a class referenced by type_id. Throws  ClassCastException if the cast is not possible, continues execution  otherwise.</td>
<td>1F04  0100 - check-cast v4, Test3 // type@0001</td>
</tr>
<tr>
<td>Checks whether the object reference in v4 can be cast to  type@0001 (entry #1 in the type id table)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>20</td>
<td>instance-of vx,vy,type_id</td>
<td>Checks whether vy is instance of a class  identified by type_id. Sets vx non-zero if it is, 0 otherwise.</td>
<td>2040  0100 - instance-of v0, v4, Test3 // type@0001</td>
</tr>
<tr>
<td>Checks whether the object reference in v4 is an instance of  type@0001 (entry #1 in the type id table). Sets v0 to non-zero if v4 is  instance of Test3, 0 otherwise.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>21</td>
<td>array-length vx,vy</td>
<td>Calculates the number of elements of the array  referenced by vy and puts the length value into vx.</td>
<td>2111  - array-length v1, v1</td>
</tr>
<tr>
<td>Calculates the number of elements of the array referenced by v1  and puts the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>22</td>
<td>new-instance vx,type</td>
<td>Instantiates an object type and puts the  reference of the newly created instance into vx.</td>
<td>2200  1500 - new-instance v0, java.io.FileInputStream // type@0015</td>
</tr>
<tr>
<td>Instantiates type@0015 (entry #15H in the type table) and puts  its reference into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>23</td>
<td>new-array vx,vy,type_id</td>
<td>Generates a new array of type_id type and vy  element size and puts the reference to the array into vx.</td>
<td>2312  2500 - new-array v2, v1, char[] // type@0025</td>
</tr>
<tr>
<td>Generates a new array of type@0025 type and v1 size and puts the  reference to the new array into v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>24</td>
<td>filled-new-array {parameters},type_id</td>
<td>Generates a new array of type_id and fills it  with the parameters5.  Reference to the newly generated array can be obtained by a  move-result-object instruction, immediately following the filled-new-array  instruction.</td>
<td>2420  530D 0000 - filled-new-array {v0,v0},[I // type@0D53</td>
</tr>
<tr>
<td>Generates a new array of type@0D53. The array’s size will be 2  and both elements will be filled with the contents of v0 register.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>25</td>
<td>filled-new-array-range {vx..vy},type_id</td>
<td>Generates a new array of type_id and fills it  with a range of parameters. Reference to the newly generated array can be  obtained by a move-result-object instruction, immediately following the  filled-new-array instruction.</td>
<td>2503  0600 1300 - filled-new-array/range {v19..v21}, [B // type@0006</td>
</tr>
<tr>
<td>Generates a new array of type@0D53. The array’s size will be 3  and the elements will be filled using the v19,v20 and v21 registers4.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>26</td>
<td>fill-array-data vx,array_data_offset</td>
<td>Fills the array referenced by vx with the static  data. The location of the static data is the sum of the position of the  current instruction and the offset</td>
<td>2606  2500 0000 - fill-array-data v6, 00e6 // +0025</td>
</tr>
<tr>
<td>Fills the array referenced by v0 with the static data at current  instruction+25H words location. The offset is expressed as a 32-bit number.  The static data is stored in the following format:</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0003 // Table type: static array data</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0400 // Byte per array element (in this case, 4 byte integers)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0300 0000 // Number of elements in the table</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0100 0000 // Element #0: integer 1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0200 0000 // Element #1: integer 2</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0300 0000 // Element #2: integer3</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>27</td>
<td>throw vx</td>
<td>Throws an exception object. The reference of the  exception object is in vx.</td>
<td>2700  - throw v0</td>
</tr>
<tr>
<td>Throws an exception. The exception object reference is in v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>28</td>
<td>goto target</td>
<td>Unconditional jump by short offset2.</td>
<td>28F0  - goto 0005 // -0010</td>
</tr>
<tr>
<td>Jumps to current position-16 words (hex 10). 0005 is the label of  the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>29</td>
<td>goto/16 target</td>
<td>Unconditional jump by 16 bit offset2.</td>
<td>2900  0FFE - goto/16 002f // -01f1</td>
</tr>
<tr>
<td>Jumps to the current position-1F1H words. 002F is the label of  the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2A</td>
<td>goto/32  target</td>
<td></td>
<td></td>
</tr>
<tr>
<td>2B</td>
<td>packed-switch vx,table</td>
<td>Implements a switch statement where the case  constants are close to each other. The instruction uses an index table. vx  indexes into this table to find the offset of the instruction for a  particular case. If vx falls out of the index table, the execution continues  on the next instruction (default case).</td>
<td>2B02  0C00 0000 - packed-switch v2, 000c // +000c</td>
</tr>
<tr>
<td>Execute a packed switch according to the switch argument in v2.  The position of the index table is at current instruction+0CH words. The  table looks like the following:</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0001 // Table type: packed switch table</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0300 // number of elements</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0000 0000 // element base</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0500 0000 0: 00000005 // case 0: +00000005</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0700 0000 1: 00000007 // case 1: +00000007</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0900 0000 2: 00000009 // case 2: +00000009</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2C</td>
<td>sparse-switch vx,table</td>
<td>Implements a switch statement with sparse case  table. The instruction uses a lookup table with case constants and offsets  for each case constant. If there is no match in the table, execution  continues on the next instruction (default case).</td>
<td>2C02  0c00 0000 - sparse-switch v2, 000c // +000c</td>
</tr>
<tr>
<td>Execute a sparse switch according to the switch argument in v2.  The position of the lookup table is at current instruction+0CH words. The  table looks like the following.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0002 // Table type: sparse switch table</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0300 // number of elements</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9cff ffff // first case: -100</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>fa00 0000 // second case constant: 250</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>e803 0000 // third case constant: 1000</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0500 0000 // offset for the first case constant: +5</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0700 0000 // offset for the second case constant: +7</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0900 0000 // offset for the third case constant: +9</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2D</td>
<td>cmpl-float</td>
<td>Compares the float values in vy and vz and sets  the integer value in vx accordingly3</td>
<td>2D00  0607 - cmpl-float v0, v6, v7</td>
</tr>
<tr>
<td>Compares the float values in v6 and v7 then sets v0 accordingly.  NaN bias is less-than, the instruction will return -1 if any of the  parameters is NaN.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2E</td>
<td>cmpg-float vx, vy, vz</td>
<td>Compares the float values in vy and vz and sets  the integer value in vx accordingly3.</td>
<td>2E00  0607 - cmpg-float v0, v6, v7</td>
</tr>
<tr>
<td>Compares the float values in v6 and v7 then sets v0 accordingly.  NaN bias is greater-than, the instruction will return 1 if any of the  parameters is NaN.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2F</td>
<td>cmpl-double vx,vy,vz</td>
<td>Compares the double values in vy and vz2 and sets the integer  value in vx accordingly3.</td>
<td>2F19  0608 - cmpl-double v25, v6, v8</td>
</tr>
<tr>
<td>Compares the double values in v6,v7 and v8,v9 and sets v25  accordingly. NaN bias is less-than, the instruction will return -1 if any of  the parameters is NaN.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>30</td>
<td>cmpg-double vx, vy, vz</td>
<td>Compares the double values in vy and vz2 and sets the integer  value in vx accordingly3.</td>
<td>3000  080A - cmpg-double v0, v8, v10</td>
</tr>
<tr>
<td>Compares the double values in v8,v9 and v10,v11 then sets v0  accordingly. NaN bias is greater-than, the instruction will return 1 if any  of the parameters is NaN.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>31</td>
<td>cmp-long vx, vy, vz</td>
<td>Compares the long values in vy and vz and sets  the integer value in vx accordingly3.</td>
<td>3100  0204 - cmp-long v0, v2, v4</td>
</tr>
<tr>
<td>Compares the long values in v2 and v4 then sets v0 accordingly.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>32</td>
<td>if-eq vx,vy,target</td>
<td>Jumps to target if vx==vy2. vx and vy are integer values.</td>
<td>32b3  6600 - if-eq v3, v11, 0080 // +0066</td>
</tr>
<tr>
<td>Jumps to the current position+66H words if v3==v11. 0080 is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>33</td>
<td>if-ne vx,vy,target</td>
<td>Jumps to target if vx!=vy2. vx and vy are integer values.</td>
<td>33A3  1000 - if-ne v3, v10, 002c // +0010</td>
</tr>
<tr>
<td>Jumps to the current position+10H words if v3!=v10. 002c is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>34</td>
<td>if-lt vx,vy,target</td>
<td>Jumps to target is vx&lt;vy2. vx and vy are integer values.</td>
<td>3432  CBFF - if-lt v2, v3, 0023 // -0035</td>
</tr>
<tr>
<td>Jumps to the current position-35H words if v2&lt;v3. 0023 is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>35</td>
<td>if-ge vx, vy,target</td>
<td>Jumps to target if vx&gt;=vy2. vx and vy are integer values.</td>
<td>3510  1B00 - if-ge v0, v1, 002b // +001b</td>
</tr>
<tr>
<td>Jumps to the current position+1BH words if v0&gt;=v1. 002b is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>36</td>
<td>if-gt vx,vy,target</td>
<td>Jumps to target if vx&gt;vy2. vx and vy are integer values.</td>
<td>3610  1B00 - if-ge v0, v1, 002b // +001b</td>
</tr>
<tr>
<td>Jumps to the current position+1BH words if v0&gt;v1. 002b is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>37</td>
<td>if-le vx,vy,target</td>
<td>Jumps to target if vx&lt;=vy2. vx and vy are integer values.</td>
<td>3756  0B00 - if-le v6, v5, 0144 // +000b</td>
</tr>
<tr>
<td>Jumps to the current position+0BH words if v6&lt;=v5. 0144 is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>38</td>
<td>if-eqz vx,target</td>
<td>Jumps to target if vx==02. vx is an integer value.</td>
<td>3802  1900 - if-eqz v2, 0038 // +0019</td>
</tr>
<tr>
<td>Jumps to the current position+19H words if v2==0. 0038 is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>39</td>
<td>if-nez vx,target</td>
<td>Checks vx and jumps if vx is nonzero2.</td>
<td>3902  1200 - if-nez v2, 0014 // +0012</td>
</tr>
<tr>
<td>Jumps to current position+18 words (hex 12) if v2 is nonzero.  0014 is the label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3A</td>
<td>if-ltz vx,target</td>
<td>Checks vx and jumps if vx&lt;02.</td>
<td>3A00  1600 - if-ltz v0, 002d // +0016</td>
</tr>
<tr>
<td>Jumps to the current position+16H words if v0&lt;0. 002d is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3B</td>
<td>if-gez vx,target</td>
<td>Checks vx and jumps if vx&gt;=02.</td>
<td>3B00  1600 - if-gez v0, 002d // +0016</td>
</tr>
<tr>
<td>Jumps to the current position+16H words if v0 &gt;=0. 002d is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3C</td>
<td>if-gtz vx,target</td>
<td>Checks vx and jumps if vx&gt;02.</td>
<td>3C00  1D00 - if-gtz v0, 004a // +001d</td>
</tr>
<tr>
<td>Jumps to the current position+1DH words if v0&gt;0. 004A is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3D</td>
<td>if-lez vx,target</td>
<td>Checks vx and jumps if vx&lt;=02.</td>
<td>3D00  1D00 - if-lez v0, 004a // +001d</td>
</tr>
<tr>
<td>Jumps to the current position+1DH words if v0&lt;=0. 004A is the  label of the target instruction.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3E</td>
<td>unused_3E</td>
<td></td>
<td></td>
</tr>
<tr>
<td>3F</td>
<td>unused_3F</td>
<td></td>
<td></td>
</tr>
<tr>
<td>40</td>
<td>unused_40</td>
<td></td>
<td></td>
</tr>
<tr>
<td>41</td>
<td>unused_41</td>
<td></td>
<td></td>
</tr>
<tr>
<td>42</td>
<td>unused_42</td>
<td></td>
<td></td>
</tr>
<tr>
<td>43</td>
<td>unused_43</td>
<td></td>
<td></td>
</tr>
<tr>
<td>44</td>
<td>aget vx,vy,vz</td>
<td>Gets an integer value of an object reference  array into vx. The array is referenced by vy and is indexed by vz.</td>
<td>4407  0306 - aget v7, v3, v6</td>
</tr>
<tr>
<td>Gets an integer array element. The array is referenced by v3 and  the element is indexed by v6. The element will be put into v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>45</td>
<td>aget-wide vx,vy,vz</td>
<td>Gets a long/double value of long/double array  into vx,vx+1. The array is referenced by vy and is indexed by vz.</td>
<td>4505  0104 - aget-wide v5, v1, v4</td>
</tr>
<tr>
<td>Gets a long/double array element. The array is referenced by v1  and the element is indexed by v4. The element will be put into v5,v6.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>46</td>
<td>aget-object vx,vy,vz</td>
<td>Gets an object reference value of an object  reference array into vx. The array is referenced by vy and is indexed by vz.</td>
<td>4602  0200 - aget-object v2, v2, v0</td>
</tr>
<tr>
<td>Gets an object reference array element. The array is referenced  by v2 and the element is indexed by v0. The element will be put into v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>47</td>
<td>aget-boolean vx,vy,vz</td>
<td>Gets a boolean value of a boolean array into vx.  The array is referenced by vy and is indexed by vz.</td>
<td>4700  0001 - aget-boolean v0, v0, v1</td>
</tr>
<tr>
<td>Gets a boolean array element. The array is referenced by v0 and  the element is indexed by v1. The element will be put into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>48</td>
<td>aget-byte vx,vy,vz</td>
<td>Gets a byte value of a byte array into vx. The  array is referenced by vy and is indexed by vz.</td>
<td>4800  0001 - aget-byte v0, v0, v1</td>
</tr>
<tr>
<td>Gets a byte array element. The array is referenced by v0 and the  element is indexed by v1. The element will be put into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>49</td>
<td>aget-char vx, vy,vz</td>
<td>Gets a char value of a character array into  vx. The element is indexed by vz, the array object is referenced by vy</td>
<td>4905  0003 - aget-char v5, v0, v3</td>
</tr>
<tr>
<td>Gets a character array element. The array is referenced by v0 and  the element is indexed by v3. The element will be put into v5.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4A</td>
<td>aget-short vx,vy,vz</td>
<td>Gets a short value of a short array into  vx. The element is indexed by vz, the array object is referenced by vy.</td>
<td>4A00  0001 - aget-short v0, v0, v1</td>
</tr>
<tr>
<td>Gets a short array element. The array is referenced by v0 and the  element is indexed by v1. The element will be put into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4B</td>
<td>aput vx,vy,vz</td>
<td>Puts the integer value in vx into an element of  an integer array. The element is indexed by vz, the array object is  referenced by vy.</td>
<td>4B00  0305 - aput v0, v3, v5</td>
</tr>
<tr>
<td>Puts the integer value in v2 into an integer array referenced by  v0. The target array element is indexed by v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4C</td>
<td>aput-wide vx,vy,vz</td>
<td>Puts the double/long value in vx,vx+1 into a  double/long array. The array is referenced by vy, the element is indexed by  vz.</td>
<td>4C05  0104 - aput-wide v5, v1, v4</td>
</tr>
<tr>
<td>Puts the double/long value in v5,v6 into a double/long array  referenced by v1. The target array element is indexed by v4.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4D</td>
<td>aput-object vx,vy,vz</td>
<td>Puts the object reference value in vx into an  element of an object reference array. The element is indexed by vz, the array  object is referenced by vy.</td>
<td>4D02  0100 - aput-object v2, v1, v0</td>
</tr>
<tr>
<td>Puts the object reference value in v2 into an object reference  array referenced by v0. The target array element is indexed by v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4E</td>
<td>aput-boolean vx,vy,vz</td>
<td>Puts the boolean value in vx into an element of a  boolean array. The element is indexed by vz, the array object is referenced  by vy.</td>
<td>4E01  0002 - aput-boolean v1, v0, v2</td>
</tr>
<tr>
<td>Puts the boolean value in v1 into an object reference array  referenced by v0. The target array element is indexed by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4F</td>
<td>aput-byte vx,vy,vz</td>
<td>Puts the byte value in vx into an element of a  byte array. The element is indexed by vz, the array object is referenced by  vy.</td>
<td>4F02  0001 - aput-byte v2, v0, v1</td>
</tr>
<tr>
<td>Puts the boolean value in v2 into a byte array referenced by v0.  The target array element is indexed by v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>50</td>
<td>aput-char vx,vy,vz</td>
<td>Puts the char value in vx into an element of a  character array. The element is indexed by vz, the array object is referenced  by vy.</td>
<td>5003  0001 - aput-char v3, v0, v1</td>
</tr>
<tr>
<td>Puts the character value in v3 into a character array referenced  by v0. The target array element is indexed by v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>51</td>
<td>aput-short vx,vy,vz</td>
<td>Puts the short value in vx into an element of a  short array. The element is indexed by vz, the array object is referenced by  vy.</td>
<td>5102  0001 - aput-short v2, v0, v1</td>
</tr>
<tr>
<td>Puts the short value in v2 into a character array referenced by  v0. The target array element is indexed by v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>52</td>
<td>iget vx, vy, field_id</td>
<td>Reads an instance field into vx. The instance is  referenced by vy.</td>
<td>5210  0300 - iget v0, v1, Test2.i6:I // field@0003</td>
</tr>
<tr>
<td>Reads field@0003 into v0 (entry #3 in the field id table). The  instance is referenced by v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>53</td>
<td>iget-wide vx,vy,field_id</td>
<td>Reads an instance field into vx1. The instance is referenced by vy.</td>
<td>5320  0400 - iget-wide v0, v2, Test2.l0:J // field@0004</td>
</tr>
<tr>
<td>Reads field@0004 into v0 and v1 registers (entry #4 in the field  id table). The instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>54</td>
<td>iget-object vx,vy,field_id</td>
<td>Reads an object reference instance field into vx.  The instance is referenced by vy.</td>
<td>iget-object  v1, v2, LineReader.fis:Ljava/io/FileInputStream; // field@0002</td>
</tr>
<tr>
<td>Reads field@0002 into v1 (entry #2 in the field id table).  The instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>55</td>
<td>iget-boolean vx,vy,field_id</td>
<td>Reads a boolean instance field into vx. The  instance is referenced by vy.</td>
<td>55FC  0000 - iget-boolean v12, v15, Test2.b0:Z // field@0000</td>
</tr>
<tr>
<td>Reads the boolean field@0000 into v12 register (entry #0 in the  field id table). The instance is referenced by v15.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>56</td>
<td>iget-byte vx,vy,field_id</td>
<td>Reads a byte instance field into vx. The instance  is referenced by vy.</td>
<td>5632  0100 - iget-byte v2, v3, Test3.bi1:B // field@0001</td>
</tr>
<tr>
<td>Reads the char field@0001 into v2 register (entry #1 in the field  id table). The instance is referenced by v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>57</td>
<td>iget-char vx,vy,field_id</td>
<td>Reads a char instance field into vx. The instance  is referenced by vy.</td>
<td>5720  0300 - iget-char v0, v2, Test3.ci1:C // field@0003</td>
</tr>
<tr>
<td>Reads the char field@0003 into v0 register (entry #3 in the field  id table). The instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>58</td>
<td>iget-short vx,vy,field_id</td>
<td>Reads a short instance field into vx. The  instance is referenced by vy.</td>
<td>5830  0800 - iget-short v0, v3, Test3.si1:S // field@0008</td>
</tr>
<tr>
<td>Reads the short field@0008 into v0 register (entry #8 in the  field id table). The instance is referenced by v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>59</td>
<td>iput vx,vy, field_id</td>
<td>Puts vx into an instance field. The instance is  referenced by vy.</td>
<td>5920  0200 - iput v0,v2, Test2.i6:I // field@0002</td>
</tr>
<tr>
<td>Stores v0 into field@0002 (entry #2 in the field id table). The  instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5A</td>
<td>iput-wide vx,vy, field_id</td>
<td>Puts the wide value located in vx and vx+1  registers into an instance field. The instance is referenced by vy.</td>
<td>5A20  0000 - iput-wide v0,v2, Test2.d0:D // field@0000</td>
</tr>
<tr>
<td>Stores the wide value in v0, v1 registers into field@0000 (entry  #0 in the field id table). The instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5B</td>
<td>iput-object vx,vy,field_id</td>
<td>Puts the object reference in vx into an instance  field. The instance is referenced by vy.</td>
<td>5B20  0000 - iput-object v0, v2, LineReader.bis:Ljava/io/BufferedInputStream; //  field@0000</td>
</tr>
<tr>
<td>Stores the object reference in v0 into field@0000 (entry #0 in  the field table). The instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5C</td>
<td>iput-boolean vx,vy, field_id</td>
<td>Puts the boolean value located in vx into an  instance field. The instance is referenced by vy.</td>
<td>5C30  0000 - iput-boolean v0, v3, Test2.b0:Z // field@0000</td>
</tr>
<tr>
<td>Puts the boolean value in v0 into field@0000 (entry #0 in the  field id table). The instance is referenced by v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5D</td>
<td>iput-byte vx,vy,field_id</td>
<td>Puts the byte value located in vx into an  instance field. The instance is referenced by vy.</td>
<td>5D20  0100 - iput-byte v0, v2, Test3.bi1:B // field@0001</td>
</tr>
<tr>
<td>Puts the boolean value in v0 into field@0001 (entry #1 in the  field id table). The instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5E</td>
<td>iput-char vx,vy,field_id</td>
<td>Puts the char value located in vx into an  instance field. The instance is referenced by vy.</td>
<td>5E20  0300 - iput-char v0, v2, Test3.ci1:C // field@0003</td>
</tr>
<tr>
<td>Puts the char value in v0 into field@0003 (entry #3 in the field  id table). The instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5F</td>
<td>iput-short vx,vy,field_id</td>
<td>Puts the short value located in vx into an  instance field. The instance is referenced by vy.</td>
<td>5F21  0800 - iput-short v1, v2, Test3.si1:S // field@0008</td>
</tr>
<tr>
<td>Puts the short value in v1 into field@0008 (entry #8 in the field  id table). The instance is referenced by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>60</td>
<td>sget vx,field_id</td>
<td>Reads the integer field identified by the  field_id into vx.</td>
<td>6000  0700 - sget v0, Test3.is1:I // field@0007</td>
</tr>
<tr>
<td>Reads field@0007 (entry #7 in the field id table) into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>61</td>
<td>sget-wide vx, field_id</td>
<td>Reads the static field identified by the field_id  into vx and vx+1 registers.</td>
<td>6100  0500 - sget-wide v0, Test2.l1:J // field@0005</td>
</tr>
<tr>
<td>Reads field@0005 (entry #5 in the field id table) into v0 and v1  registers.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>62</td>
<td>sget-object vx,field_id</td>
<td>Reads the object reference field identified by  the field_id into vx.</td>
<td>6201  0C00 - sget-object v1, Test3.os1:Ljava/lang/Object; // field@000c</td>
</tr>
<tr>
<td>Reads field@000c (entry #CH in the field id table) into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>63</td>
<td>sget-boolean vx,field_id</td>
<td>Reads the boolean static field identified by the  field_id into vx.</td>
<td>6300  0C00 - sget-boolean v0, Test2.sb:Z // field@000c</td>
</tr>
<tr>
<td>Reads boolean field@000c (entry #12 in the field id table) into  v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>64</td>
<td>sget-byte vx,field_id</td>
<td>Reads the byte static field identified by the  field_id into vx.</td>
<td>6400  0200 - sget-byte v0, Test3.bs1:B // field@0002</td>
</tr>
<tr>
<td>Reads byte field@0002 (entry #2 in the field id table) into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>65</td>
<td>sget-char vx,field_id</td>
<td>Reads the char static field identified by the  field_id into vx.</td>
<td>6500  0700 - sget-char v0, Test3.cs1:C // field@0007</td>
</tr>
<tr>
<td>Reads byte field@0007 (entry #7 in the field id table) into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>66</td>
<td>sget-short vx,field_id</td>
<td>Reads the short static field identified by the  field_id into vx.</td>
<td>6600  0B00 - sget-short v0, Test3.ss1:S // field@000b</td>
</tr>
<tr>
<td>Reads short field@000b (entry #BH in the field id table) into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>67</td>
<td>sput vx, field_id</td>
<td>Puts vx into a static field.</td>
<td>6700  0100 - sput v0, Test2.i5:I // field@0001</td>
</tr>
<tr>
<td>Stores v0 into field@0001 (entry #1 in the field id table).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>68</td>
<td>sput-wide vx, field_id</td>
<td>Puts vx and vx+1 into a static field.</td>
<td>6800  0500 - sput-wide v0, Test2.l1:J // field@0005</td>
</tr>
<tr>
<td>Puts the long value in v0 and v1 into the field@0005 static field  (entry #5 in the field id table).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>69</td>
<td>sput-object vx,field_id</td>
<td>Puts object reference in vx into a static field.</td>
<td>6900  0c00 - sput-object v0, Test3.os1:Ljava/lang/Object; // field@000c</td>
</tr>
<tr>
<td>Puts the object reference value in v0 into the field@000c static  field (entry #CH in the field id table).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6A</td>
<td>sput-boolean vx,field_id</td>
<td>Puts boolean value in vx into a static field.</td>
<td>6A00  0300 - sput-boolean v0, Test3.bls1:Z // field@0003</td>
</tr>
<tr>
<td>Puts the byte value in v0 into the field@0003 static field (entry  #3 in the field id table).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6B</td>
<td>sput-byte vx,field_id</td>
<td>Puts byte value in vx into a static field.</td>
<td>6B00  0200 - sput-byte v0, Test3.bs1:B // field@0002</td>
</tr>
<tr>
<td>Puts the byte value in v0 into the field@0002 static field (entry  #2 in the field id table).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6C</td>
<td>sput-char vx,field_id</td>
<td>Puts char value in vx into a static field.</td>
<td>6C01  0700 - sput-char v1, Test3.cs1:C // field@0007</td>
</tr>
<tr>
<td>Puts the char value in v1 into the field@0007 static field (entry  #7 in the field id table).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6D</td>
<td>sput-short vx,field_id</td>
<td>Puts short value in vx into a static field.</td>
<td>6D00  0B00 - sput-short v0, Test3.ss1:S // field@000b</td>
</tr>
<tr>
<td>Puts the short value in v0 into the field@000b static field  (entry #BH in the field id table).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6E</td>
<td>invoke-virtual { parameters }, methodtocall</td>
<td>Invokes a virtual method with parameters.</td>
<td>6E53  0600 0421 - invoke-virtual { v4, v0, v1, v2, v3}, Test2.method5:(IIII)V //  method@0006</td>
</tr>
<tr>
<td>Invokes the 6th method in the method table with the following  arguments: v4 is the “this” instance, v0, v1, v2, and v3 are the  method parameters. The method has 5 arguments (4 MSB bits of the second byte)5.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6F</td>
<td>invoke-super {parameter},methodtocall</td>
<td>Invokes the virtual method of the immediate  parent class.</td>
<td>6F10  A601 0100 invoke-super {v1},java.io.FilterOutputStream.close:()V //  method@01a6</td>
</tr>
<tr>
<td>Invokes method@01a6 with one parameter, v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>70</td>
<td>invoke-direct { parameters }, methodtocall</td>
<td>Invokes a method with parameters without the  virtual method resolution.</td>
<td>7010  0800 0100 - invoke-direct {v1}, java.lang.Object.<init>:()V //  method@0008</init></td>
</tr>
<tr>
<td>Invokes the 8th method in the method table with just one  parameter, v1 is the “this” instance5.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>71</td>
<td>invoke-static {parameters}, methodtocall</td>
<td>Invokes a static method with parameters.</td>
<td>7110  3400 0400 - invoke-static {v4}, java.lang.Integer.parseInt:(  Ljava/lang/String;)I // method@0034</td>
</tr>
<tr>
<td>Invokes method@34 static method. The method is called with one  parameter, v45.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>72</td>
<td>invoke-interface {parameters},methodtocall</td>
<td>Invokes an interface method.</td>
<td>7240  2102 3154 invoke-interface {v1, v3, v4, v5},  mwfw.IReceivingProtocolAdapter.receivePackage:(</td>
</tr>
<tr>
<td>ILjava/lang/String;Ljava/io/InputStream;)Z // method@0221</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Invokes method@221 interface method using parameters in v1,v3,v4  and v55.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>73</td>
<td>unused_73</td>
<td></td>
<td></td>
</tr>
<tr>
<td>74</td>
<td>invoke-virtual/range {vx..vy},methodtocall</td>
<td>Invokes virtual method with a range of registers.  The instruction specifies the first register and the number of registers to  be passed to the method.</td>
<td>7403  0600 1300 - invoke-virtual {v19..v21}, Test2.method5:(IIII)V // method@0006</td>
</tr>
<tr>
<td>Invokes the 6th method in the method table with the following  arguments: v19 is the “this” instance, v20 and v21 are the method  parameters.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>75</td>
<td>invoke-super/range</td>
<td>Invokes the virtual method of the immediate  parent class. The instruction specifies the first register and the number of  registers to be passed to the method.</td>
<td>7501  A601 0100 invoke-super {v1},java.io.FilterOutputStream.close:()V //  method@01a6</td>
</tr>
<tr>
<td>Invokes method@01a6 with one parameter, v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>76</td>
<td>invoke-direct/range {vx..vy},methodtocall</td>
<td>Invokes direct method with a range of registers.  The instruction specifies the first register and the number of registers to  be passed to the method.</td>
<td>7603  3A00 1300 - invoke-direct/range {v19..21},java.lang.Object.<init>:()V  // method@003a</init></td>
</tr>
<tr>
<td>Invokes method@3A with 1 parameters (second byte of the  instruction=03). The parameter is stored in v19 (5th,6th bytes of the  instruction).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>77</td>
<td>invoke-static/range {vx..vy},methodtocall</td>
<td>Invokes static method with a range of registers.  The instruction specifies the first register and the number of registers to  be passed to the method.</td>
<td>7703  3A00 1300 - invoke-static/range {v19..21},java.lang.Integer.parseInt:(  Ljava/lang/String;)I // method@0034</td>
</tr>
<tr>
<td>Invokes method@3A with 1 parameters (second byte of the  instruction=03). The parameter is stored in v19 (5th,6th bytes of the  instruction).</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>78</td>
<td>invoke-interface-range</td>
<td>Invokes an interface method with a range of  registers. The instruction specifies the first register and the number of  registers to be passed to the method.</td>
<td>7840  2102 0100 invoke-interface {v1..v4},  mwfw.IReceivingProtocolAdapter.receivePackage:(</td>
</tr>
<tr>
<td>ILjava/lang/String;Ljava/io/InputStream;)Z // method@0221</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Invokes method@221 interface method using parameters in v1..v4.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>79</td>
<td>unused_79</td>
<td></td>
<td></td>
</tr>
<tr>
<td>7A</td>
<td>unused_7A</td>
<td></td>
<td></td>
</tr>
<tr>
<td>7B</td>
<td>neg-int vx,vy</td>
<td>Calculates vx=-vy.</td>
<td>7B01  - neg-int v1,v0</td>
</tr>
<tr>
<td>Calculates -v0 and stores the result in v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>7C</td>
<td>not-int  vx,vy</td>
<td></td>
<td></td>
</tr>
<tr>
<td>7D</td>
<td>neg-long vx,vy</td>
<td>Calculates vx,vx+1=-(vy,vy+1)</td>
<td>7D02  - neg-long v2,v0</td>
</tr>
<tr>
<td>Calculates -(v0,v1) and stores the result into (v2,v3)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>7E</td>
<td>not-long  vx,vy</td>
<td></td>
<td></td>
</tr>
<tr>
<td>7F</td>
<td>neg-float vx,vy</td>
<td>Calculates vx=-vy</td>
<td>7F01  - neg-float v1,v0</td>
</tr>
<tr>
<td>Calculates -v0 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>80</td>
<td>neg-double vx,vy</td>
<td>Calculates vx,vx+1=-(vy,vy+1)</td>
<td>8002  - neg-double v2,v0</td>
</tr>
<tr>
<td>Calculates -(v0,v1) and stores the result into (v2,v3)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>81</td>
<td>int-to-long vx, vy</td>
<td>Converts the integer in vy into a long in  vx,vx+1.</td>
<td>8106  - int-to-long v6, v0</td>
</tr>
<tr>
<td>Converts an integer in v0 into a long in v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>82</td>
<td>int-to-float vx, vy</td>
<td>Converts the integer in vx into a float in vx.</td>
<td>8206  - int-to-float v6, v0</td>
</tr>
<tr>
<td>Converts the integer in v0 into a float in v6.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>83</td>
<td>int-to-double vx, vy</td>
<td>Converts the integer in vy into the double in  vx,vx+1.</td>
<td>8306  - int-to-double v6, v0</td>
</tr>
<tr>
<td>Converts the integer in v0 into a double in v6,v7</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>84</td>
<td>long-to-int vx,vy</td>
<td>Converts the long value in vy,vy+1 into an  integer in vx.</td>
<td>8424  - long-to-int v4, v2</td>
</tr>
<tr>
<td>Converts the long value in v2,v3 into an integer value in v4.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>85</td>
<td>long-to-float vx, vy</td>
<td>Converts the long value in vy,vy+1 into a float  in vx.</td>
<td>8510  - long-to-float v0, v1</td>
</tr>
<tr>
<td>Convcerts the long value in v1,v2 into a float value in v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>86</td>
<td>long-to-double vx, vy</td>
<td>Converts the long value in vy,vy+1 into a double  value in vx,vx+1.</td>
<td>8610  - long-to-double v0, v1</td>
</tr>
<tr>
<td>Converts the long value in v1,v2 into a double value in v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>87</td>
<td>float-to-int vx, vy</td>
<td>Converts the float value in vy into an integer  value in vx.</td>
<td>8730  - float-to-int v0, v3</td>
</tr>
<tr>
<td>Converts the float value in v3 into an integer value in v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>88</td>
<td>float-to-long vx,vy</td>
<td>Converts the float value in vy into a long value  in vx.</td>
<td>8830  - float-to-long v0, v3</td>
</tr>
<tr>
<td>Converts the float value in v3 into a long value in v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>89</td>
<td>float-to-double vx, vy</td>
<td>Converts the float value in vy into a double  value in vx,vx+1.</td>
<td>8930  - float-to-double v0, v3</td>
</tr>
<tr>
<td>Converts the float value in v3 into a double value in v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8A</td>
<td>double-to-int vx, vy</td>
<td>Converts the double value in vy,vy+1 into an  integer value in vx.</td>
<td>8A40   - double-to-int v0, v4</td>
</tr>
<tr>
<td>Converts the double value in v4,v5 into an integer value in v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8B</td>
<td>double-to-long vx, vy</td>
<td>Converts the double value in vy,vy+1 into a long  value in vx,vx+1.</td>
<td>8B40  - double-to-long v0, v4</td>
</tr>
<tr>
<td>Converts the double value in v4,v5 into a long value in v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8C</td>
<td>double-to-float vx, vy</td>
<td>Converts the double value in vy,vy+1 into a float  value in vx.</td>
<td>8C40  - double-to-float v0, v4</td>
</tr>
<tr>
<td>Converts the double value in v4,v5 into a float value in v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8D</td>
<td>int-to-byte vx,vy</td>
<td>Converts the int value in vy to a byte value and  stores it in vx.</td>
<td>8D00  - int-to-byte v0, v0</td>
</tr>
<tr>
<td>Converts the integer in v0 into a byte and puts the byte value  into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8E</td>
<td>int-to-char vx,vy</td>
<td>Converts the int value in vy to a char value and  stores it in vx.</td>
<td>8E33   - int-to-char v3, v3</td>
</tr>
<tr>
<td>Converts the integer in v3 into a char and puts the char value  into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8F</td>
<td>int-to-short vx,vy</td>
<td>Converts the int value in vy to a short value and  stores it in vx.</td>
<td>8F00  - int-to-short v0, v0</td>
</tr>
<tr>
<td>Converts the integer in v0 into a short and puts the short value  into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>90</td>
<td>add-int vx,vy,vz</td>
<td>Calculates vy+vz and puts the result into vx.</td>
<td>9000  0203 - add-int v0, v2, v3</td>
</tr>
<tr>
<td>Adds v3 to v2 and puts the result into v04.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>91</td>
<td>sub-int vx,vy,vz</td>
<td>Calculates vy-vz and puts the result into vx.</td>
<td>9100  0203 - sub-int v0, v2, v3</td>
</tr>
<tr>
<td>Subtracts v3 from v2 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>92</td>
<td>mul-int vx, vy, vz</td>
<td>Multiplies vz with wy and puts the result int vx.</td>
<td>9200  0203 - mul-int v0,v2,v3</td>
</tr>
<tr>
<td>Multiplies v2 with w3 and puts the result into v0</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>93</td>
<td>div-int vx,vy,vz</td>
<td>Divides vy with vz and puts the result into vx.</td>
<td>9303  0001 - div-int v3, v0, v1</td>
</tr>
<tr>
<td>Divides v0 with v1 and puts the result into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>94</td>
<td>rem-int vx,vy,vz</td>
<td>Calculates vy % vz and puts the result into vx.</td>
<td>9400  0203 - rem-int v0, v2, v3</td>
</tr>
<tr>
<td>Calculates v3 % v2 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>95</td>
<td>and-int vx, vy, vz</td>
<td>Calculates vy AND vz and puts the result into vx.</td>
<td>9503  0001 - and-int v3, v0, v1</td>
</tr>
<tr>
<td>Calculates v0 AND v1 and puts the result into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>96</td>
<td>or-int vx, vy, vz</td>
<td>Calculates vy OR vz and puts the result into vx.</td>
<td>9603  0001 - or-int v3, v0, v1</td>
</tr>
<tr>
<td>Calculates v0 OR v1 and puts the result into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>97</td>
<td>xor-int vx, vy, vz</td>
<td>Calculates vy XOR vz and puts the result into vx.</td>
<td>9703  0001 - xor-int v3, v0, v1</td>
</tr>
<tr>
<td>Calculates v0 XOR v1 and puts the result into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>98</td>
<td>shl-int vx, vy, vz</td>
<td>Shift vy left by the positions specified by vz  and store the result into vx.</td>
<td>9802  0001 - shl-int v2, v0, v1</td>
</tr>
<tr>
<td>Shift v0 left by the positions specified by v1 and store the  result in v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>99</td>
<td>shr-int vx, vy, vz</td>
<td>Shift vy right by the positions specified by vz  and store the result into vx.</td>
<td>9902  0001 - shr-int v2, v0, v1</td>
</tr>
<tr>
<td>Shift v0 right by the positions specified by v1 and store the  result in v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9A</td>
<td>ushr-int vx, vy, vz</td>
<td>Unsigned shift right (&gt;&gt;&gt;) vy by the  positions specified by vz and store the result into vx.</td>
<td>9A02  0001 - ushr-int v2, v0, v1</td>
</tr>
<tr>
<td>Unsigned shift v0 right by the positions specified by v1 and  store the result in v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9B</td>
<td>add-long vx, vy, vz</td>
<td>Adds vy to vz and puts the result into vx1.</td>
<td>9B00  0305 - add-long v0, v3, v5</td>
</tr>
<tr>
<td>The long value in v3,v4 is added to the value in v5,v6 and the  result is stored in v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9C</td>
<td>sub-long vx,vy,vz</td>
<td>Calculates vy-vz and puts the result into vx1.</td>
<td>9C00  0305 - sub-long v0, v3, v5</td>
</tr>
<tr>
<td>Subtracts the long value in v5,v6 from the long value in v3,v4  and puts the result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9D</td>
<td>mul-long vx,vy,vz</td>
<td>Calculates vy*vz and puts the result into vx1.</td>
<td>9D00  0305 - mul-long v0, v3, v5</td>
</tr>
<tr>
<td>Multiplies the long value in v5,v6 with the long value in v3,v4  and puts the result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9E</td>
<td>div-long vx, vy, vz</td>
<td>Calculates vy/vz and puts the result into vx1.</td>
<td>9E06  0002 - div-long v6, v0, v2</td>
</tr>
<tr>
<td>Divides the long value in v0,v1 with the long value in v2,v3 and  pust the result into v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9F</td>
<td>rem-long vx,vy,vz</td>
<td>Calculates vy % vz and puts the result into vx1.</td>
<td>9F06  0002 - rem-long v6, v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 % v2,v3 and puts the result into v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A0</td>
<td>and-long vx, vy, vz</td>
<td>Calculates the vy AND vz and puts the result into  vx1.</td>
<td>A006  0002 - and-long v6, v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 AND v2,v3 and puts the result into v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A1</td>
<td>or-long vx, vy, vz</td>
<td>Calculates the vy OR vz and puts the result into  vx1.</td>
<td>A106  0002 - or-long v6, v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 OR v2,v3 and puts the result into v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A2</td>
<td>xor-long vx, vy, vz</td>
<td>Calculates the vy XOR vz and puts the result into  vx1.</td>
<td>A206  0002 - xor-long v6, v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 XOR v2,v3 and puts the result into v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A3</td>
<td>shl-long vx, vy, vz</td>
<td>Shifts left vy by vz positions and stores the  result in vx1.</td>
<td>A302  0004 - shl-long v2, v0, v4</td>
</tr>
<tr>
<td>Shift v0,v1 by postions specified by v4 and puts the result into  v2,v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A4</td>
<td>shr-long vx,vy,vz</td>
<td>Shifts right vy by vz positions and stores the  result in vx1.</td>
<td>A402  0004 - shr-long v2, v0, v4</td>
</tr>
<tr>
<td>Shift v0,v1 by postions specified by v4 and puts the result into  v2,v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A5</td>
<td>ushr-long vx, vy, vz</td>
<td>Unsigned shifts right vy by vz positions and  stores the result in vx1.</td>
<td>A502  0004 - ushr-long v2, v0, v4</td>
</tr>
<tr>
<td>Unsigned shift v0,v1 by postions specified by v4 and puts the  result into v2,v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A6</td>
<td>add-float vx,vy,vz</td>
<td>Adds vy to vz and puts the result into vx.</td>
<td>A600  0203 - add-float v0, v2, v3</td>
</tr>
<tr>
<td>Adds the floating point numbers in v2 and v3 and puts the result  into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A7</td>
<td>sub-float vx,vy,vz</td>
<td>Calculates vy-vz and puts the result into vx.</td>
<td>A700  0203 - sub-float v0, v2, v3</td>
</tr>
<tr>
<td>Calculates v2-v3 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A8</td>
<td>mul-float vx, vy, vz</td>
<td>Multiplies vy with vz and puts the result into  vx.</td>
<td>A803  0001 - mul-float v3, v0, v1</td>
</tr>
<tr>
<td>Multiplies v0 with v1 and puts the result into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A9</td>
<td>div-float vx, vy, vz</td>
<td>Calculates vy/vz and puts the result into vx.</td>
<td>A903  0001 - div-float v3, v0, v1</td>
</tr>
<tr>
<td>Divides v0 with v1 and puts the result into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>AA</td>
<td>rem-float vx,vy,vz</td>
<td>Calculates vy % vz and puts the result into vx.</td>
<td>AA03  0001 - rem-float v3, v0, v1</td>
</tr>
<tr>
<td>Calculates v0 % v1 and puts the result into v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>AB</td>
<td>add-double vx,vy,vz</td>
<td>Adds vy to vz and puts the result into vx1.</td>
<td>AB00  0305 - add-double v0, v3, v5</td>
</tr>
<tr>
<td>Adds the double value in v5,v6 registers to the double value in  v3,v4 registers and places the result in v0,v1 registers.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>AC</td>
<td>sub-double vx,vy,vz</td>
<td>Calculates vy-vz and puts the result into vx1.</td>
<td>AC00  0305 - sub-double v0, v3, v5</td>
</tr>
<tr>
<td>Subtracts the value in v5,v6 from the value in v3,v4 and puts the  result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>AD</td>
<td>mul-double vx, vy, vz</td>
<td>Multiplies vy with vz and puts the result into vx1.</td>
<td>AD06  0002 - mul-double v6, v0, v2</td>
</tr>
<tr>
<td>Multiplies the double value in v0,v1 with the double value in  v2,v3 and puts the result into v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>AE</td>
<td>div-double vx, vy, vz</td>
<td>Calculates vy/vz and puts the result into vx1.</td>
<td>AE06  0002 - div-double v6, v0, v2</td>
</tr>
<tr>
<td>Divides the double value in v0,v1 with the double value in v2,v3  and puts the result into v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>AF</td>
<td>rem-double vx,vy,vz</td>
<td>Calculates vy % vz and puts the result into vx1.</td>
<td>AF06  0002 - rem-double v6, v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 % v2,v3 and puts the result into v6,v7.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B0</td>
<td>add-int/2addr vx,vy</td>
<td>Adds vy to vx.</td>
<td>B010  - add-int/2addr v0,v1</td>
</tr>
<tr>
<td>Adds v1 to v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B1</td>
<td>sub-int/2addr vx,vy</td>
<td>Calculates vx-vy and puts the result into vx.</td>
<td>B140  - sub-int/2addr v0, v4</td>
</tr>
<tr>
<td>Subtracts v4 from v0 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B2</td>
<td>mul-int/2addr vx,vy</td>
<td>Multiplies vx with vy.</td>
<td>B210  - mul-int/2addr v0, v1</td>
</tr>
<tr>
<td>Multiples v0 with v1 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B3</td>
<td>div-int/2addr vx,vy</td>
<td>Divides vx with vy and puts the result into vx.</td>
<td>B310  - div-int/2addr v0, v1</td>
</tr>
<tr>
<td>Divides v0 with v1 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B4</td>
<td>rem-int/2addr vx,vy</td>
<td>Calculates vx % vy and puts the result into vx</td>
<td>B410  - rem-int/2addr v0, v1</td>
</tr>
<tr>
<td>Calculates v0 % v1 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B5</td>
<td>and-int/2addr vx, vy</td>
<td>Calculates vx AND vy and puts the result into vx.</td>
<td>B510  - and-int/2addr v0, v1</td>
</tr>
<tr>
<td>Calculates v0 AND v1 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B6</td>
<td>or-int/2addr vx, vy</td>
<td>Calculates vx OR vy and puts the result into vx.</td>
<td>B610  - or-int/2addr v0, v1</td>
</tr>
<tr>
<td>Calculates v0 OR v1 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B7</td>
<td>xor-int/2addr vx, vy</td>
<td>Calculates vx XOR vy and puts the result into vx.</td>
<td>B710   - xor-int/2addr v0, v1</td>
</tr>
<tr>
<td>Calculates v0 XOR v1 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B8</td>
<td>shl-int/2addr vx, vy</td>
<td>Shifts vx left by vy positions.</td>
<td>B810  - shl-int/2addr v0, v1</td>
</tr>
<tr>
<td>Shift v0 left by v1 positions.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B9</td>
<td>shr-int/2addr vx, vy</td>
<td>Shifts vx right by vy positions.</td>
<td>B910  - shr-int/2addr v0, v1</td>
</tr>
<tr>
<td>Shift v0 right by v1 positions.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BA</td>
<td>ushr-int/2addr vx, vy</td>
<td>Unsigned shift right (&gt;&gt;&gt;) vx by the  positions specified by vy.</td>
<td>BA10  - ushr-int/2addr v0, v1</td>
</tr>
<tr>
<td>Unsigned shift v0 by the positions specified by v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BB</td>
<td>add-long/2addr vx,vy</td>
<td>Adds vy to vx1.</td>
<td>BB20  - add-long/2addr v0, v2</td>
</tr>
<tr>
<td>Adds the long value in v2,v3 registers to the long value in v0,v1  registers.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BC</td>
<td>sub-long/2addr vx,vy</td>
<td>Calculates vx-vy and puts the result into vx1.</td>
<td>BC70  - sub-long/2addr v0, v7</td>
</tr>
<tr>
<td>Subtracts the long value in v7,v8 from the long value in v0,v1  and puts the result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BD</td>
<td>mul-long/2addr vx,vy</td>
<td>Calculates vx*vy and puts the result into vx1.</td>
<td>BD70  - mul-long/2addr v0, v7</td>
</tr>
<tr>
<td>Multiplies the long value in v7,v8 with the long value in v0,v1  and puts the result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BE</td>
<td>div-long/2addr vx, vy</td>
<td>Calculates vx/vy and puts the result into vx1.</td>
<td>BE20  - div-long/2addr v0, v2</td>
</tr>
<tr>
<td>Divides the long value in v0,v1 with the long value in v2,v3 and  puts the result into v0,v1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BF</td>
<td>rem-long/2addr vx,vy</td>
<td>Calculates vx % vy and puts the result into vx1.</td>
<td>BF20  - rem-long/2addr v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 % v2,v3 and puts the result into v0,v1</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C0</td>
<td>and-long/2addr vx, vy</td>
<td>Calculates vx AND vy and puts the result into vx1.</td>
<td>C020  - and-long/2addr v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 OR v2,v3 and puts the result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C1</td>
<td>or-long/2addr vx, vy</td>
<td>Calculates vx OR vy and puts the result into vx1.</td>
<td>C120   - or-long/2addr v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 OR v2,v3 and puts the result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C2</td>
<td>xor-long/2addr vx, vy</td>
<td>Calculates vx XOR vy and puts the result into vx1.</td>
<td>C220  - xor-long/2addr v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 XOR v2,v3 and puts the result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C3</td>
<td>shl-long/2addr vx, vy</td>
<td>Shifts left the value in vx,vx+1 by the positions  specified by vy and stores the result in vx,vx+1.</td>
<td>C320  - shl-long/2addr v0, v2</td>
</tr>
<tr>
<td>Shifts left v0,v1 by the positions specified by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C4</td>
<td>shr-long/2addr vx, vy</td>
<td>Shifts right the value in vx,vx+1 by the  positions specified by vy and stores the result in vx,vx+1.</td>
<td>C420  - shr-long/2addr v0, v2</td>
</tr>
<tr>
<td>Shifts right v0,v1 by the positions specified by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C5</td>
<td>ushr-long/2addr vx, vy</td>
<td>Unsigned shifts right the value in vx,vx+1 by the  positions specified by vy and stores the result in vx,vx+1.</td>
<td>C520  - ushr-long/2addr v0, v2</td>
</tr>
<tr>
<td>Unsigned shifts right v0,v1 by the positions specified by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C6</td>
<td>add-float/2addr vx,vy</td>
<td>Adds vy to vx.</td>
<td>C640  - add-float/2addr v0,v4</td>
</tr>
<tr>
<td>Adds v4 to v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C7</td>
<td>sub-float/2addr vx,vy</td>
<td>Calculates vx-vy and stores the result in vx.</td>
<td>C740  - sub-float/2addr v0,v4</td>
</tr>
<tr>
<td>Adds v4 to v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C8</td>
<td>mul-float/2addr vx, vy</td>
<td>Multiplies vx with vy.</td>
<td>C810  - mul-float/2addr v0, v1</td>
</tr>
<tr>
<td>Multiplies v0 with v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C9</td>
<td>div-float/2addr vx, vy</td>
<td>Calculates vx/vy and puts the result into vx.</td>
<td>C910  - div-float/2addr v0, v1</td>
</tr>
<tr>
<td>Divides v0 with v1 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CA</td>
<td>rem-float/2addr vx,vy</td>
<td>Calculates vx/vy and puts the result into vx.</td>
<td>CA10  - rem-float/2addr v0, v1</td>
</tr>
<tr>
<td>Calculates v0 % v1 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CB</td>
<td>add-double/2addr vx, vy</td>
<td>Adds vy to vx1.</td>
<td>CB70  - add-double/2addr v0, v7</td>
</tr>
<tr>
<td>Adds v7 to v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CC</td>
<td>sub-double/2addr vx, vy</td>
<td>Calculates vx-vy and puts the result into vx1.</td>
<td>CC70  - sub-double/2addr v0, v7</td>
</tr>
<tr>
<td>Subtracts the value in v7,v8 from the value in v0,v1 and puts the  result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CD</td>
<td>mul-double/2addr vx, vy</td>
<td>Multiplies vx with vy1.</td>
<td>CD20  - mul-double/2addr v0, v2</td>
</tr>
<tr>
<td>Multiplies the double value in v0,v1 with the double value in  v2,v3 and puts the result into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CE</td>
<td>div-double/2addr vx, vy</td>
<td>Calculates vx/vy and puts the result into vx1.</td>
<td>CE20  - div-double/2addr v0, v2</td>
</tr>
<tr>
<td>Divides the double value in v0,v1 with the double value in v2,v3  and puts the value into v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CF</td>
<td>rem-double/2addr vx,vy</td>
<td>Calculates vx % vy and puts the result into vx1.</td>
<td>CF20  - rem-double/2addr v0, v2</td>
</tr>
<tr>
<td>Calculates v0,v1 % v2,v3 and puts the value into  v0,v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D0</td>
<td>add-int/lit16 vx,vy,lit16</td>
<td>Adds vy to lit16 and stores the result into vx.</td>
<td>D001  D204 - add-int/lit16 v1, v0, #int 1234 // #04d2</td>
</tr>
<tr>
<td>Adds v0 to literal 1234 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D1</td>
<td>sub-int/lit16 vx,vy,lit16</td>
<td>Calculates vy - lit16 and stores the result into  vx.</td>
<td>D101  D204 - sub-int/lit16 v1, v0, #int 1234 // #04d2</td>
</tr>
<tr>
<td>Calculates v0 - literal 1234 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D2</td>
<td>mul-int/lit16 vx,vy,lit16</td>
<td>Calculates vy * lit16 and stores the result into  vx.</td>
<td>D201  D204 - mul-int/lit16 v1, v0, #int 1234 // #04d2</td>
</tr>
<tr>
<td>Calculates v0 * literal 1234 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D3</td>
<td>div-int/lit16 vx,vy,lit16</td>
<td>Calculates vy / lit16 and stores the result into  vx.</td>
<td>D301  D204 - div-int/lit16 v1, v0, #int 1234 // #04d2</td>
</tr>
<tr>
<td>Calculates v0 / literal 1234 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D4</td>
<td>rem-int/lit16 vx,vy,lit16</td>
<td>Calculates vy % lit16 and stores the result into  vx.</td>
<td>D401  D204 - rem-int/lit16 v1, v0, #int 1234 // #04d2</td>
</tr>
<tr>
<td>Calculates v0 % literal 1234 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D5</td>
<td>and-int/lit16 vx,vy,lit16</td>
<td>Calculates vy AND lit16 and stores the result  into vx.</td>
<td>D501  D204 - and-int/lit16 v1, v0, #int 1234 // #04d2</td>
</tr>
<tr>
<td>Calculates v0 AND literal 1234 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D6</td>
<td>or-int/lit16 vx,vy,lit16</td>
<td>Calculates vy OR lit16 and stores the result into  vx.</td>
<td>D601  D204 - or-int/lit16 v1, v0, #int 1234 // #04d2</td>
</tr>
<tr>
<td>Calculates v0 OR literal 1234 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D7</td>
<td>xor-int/lit16 vx,vy,lit16</td>
<td>Calculates vy XOR lit16 and stores the result  into vx.</td>
<td>D701  D204 - xor-int/lit16 v1, v0, #int 1234 // #04d2</td>
</tr>
<tr>
<td>Calculates v0 XOR literal 1234 and stores the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D8</td>
<td>add-int/lit8 vx,vy,lit8</td>
<td>Adds vy to lit8 and stores the result into vx.</td>
<td>D800  0201 - add-int/lit8 v0,v2, #int1</td>
</tr>
<tr>
<td>Adds literal 1 to v2 and stores the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D9</td>
<td>sub-int/lit8 vx,vy,lit8</td>
<td>Calculates vy-lit8 and stores the result into vx.</td>
<td>D900  0201 - sub-int/lit8 v0,v2, #int1</td>
</tr>
<tr>
<td>Calculates v2-1 and stores the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DA</td>
<td>mul-int/lit8 vx,vy,lit8</td>
<td>Multiplies vy with lit8 8-bit literal constant  and puts the result into vx.</td>
<td>DA00  0002 - mul-int/lit8 v0,v0, #int2</td>
</tr>
<tr>
<td>Multiplies v0 with literal 2 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DB</td>
<td>div-int/lit8 vx,vy,lit8</td>
<td>Calculates vy/lit8 and stores the result into vx.</td>
<td>DB00  0203 - mul-int/lit8 v0,v2, #int3</td>
</tr>
<tr>
<td>Calculates v2/3 and stores the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DC</td>
<td>rem-int/lit8 vx,vy,lit8</td>
<td>Calculates vy % lit8 and stores the result into  vx.</td>
<td>DC00  0203 - rem-int/lit8 v0,v2, #int3</td>
</tr>
<tr>
<td>Calculates v2 % 3 and stores the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DD</td>
<td>and-int/lit8 vx,vy,lit8</td>
<td>Calculates vy AND lit8 and stores the result into  vx.</td>
<td>DD00  0203 - and-int/lit8 v0,v2, #int3</td>
</tr>
<tr>
<td>Calculates v2 AND 3 and stores the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DE</td>
<td>or-int/lit8 vx, vy, lit8</td>
<td>Calculates vy OR lit8 and puts the result into  vx.</td>
<td>DE00  0203 - or-int/lit8 v0, v2, #int 3</td>
</tr>
<tr>
<td>Calculates v2 OR literal 3 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DF</td>
<td>xor-int/lit8 vx, vy, lit8</td>
<td>Calculates vy XOR lit8 and puts the result into  vx.</td>
<td>DF00  0203   | 0008: xor-int/lit8 v0, v2, #int 3</td>
</tr>
<tr>
<td>Calculates v2 XOR literal 3 and puts the result into v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E0</td>
<td>shl-int/lit8 vx, vy, lit8</td>
<td>Shift v0 left by the bit positions specified by  the literal constant and put the result into vx.</td>
<td>E001  0001 - shl-int/lit8 v1, v0, #int 1</td>
</tr>
<tr>
<td>Shift v0 left by 1 position and put the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E1</td>
<td>shr-int/lit8 vx, vy, lit8</td>
<td>Shift v0 right by the bit positions specified by  the literal constant and put the result into vx.</td>
<td>E101  0001 - shr-int/lit8 v1, v0, #int 1</td>
</tr>
<tr>
<td>Shift v0 right by 1 position and put the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E2</td>
<td>ushr-int/lit8 vx, vy, lit8</td>
<td>Unsigned right shift of v0 (&gt;&gt;&gt;) by the  bit positions specified by the literal constant and put the result into vx.</td>
<td>E201  0001 - ushr-int/lit8 v1, v0, #int 1</td>
</tr>
<tr>
<td>Unsigned shift v0 right by 1 position and put the result into v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E3</td>
<td>unused_E3</td>
<td></td>
<td></td>
</tr>
<tr>
<td>E4</td>
<td>unused_E4</td>
<td></td>
<td></td>
</tr>
<tr>
<td>E5</td>
<td>unused_E5</td>
<td></td>
<td></td>
</tr>
<tr>
<td>E6</td>
<td>unused_E6</td>
<td></td>
<td></td>
</tr>
<tr>
<td>E7</td>
<td>unused_E7</td>
<td></td>
<td></td>
</tr>
<tr>
<td>E8</td>
<td>unused_E8</td>
<td></td>
<td></td>
</tr>
<tr>
<td>E9</td>
<td>unused_E9</td>
<td></td>
<td></td>
</tr>
<tr>
<td>EA</td>
<td>unused_EA</td>
<td></td>
<td></td>
</tr>
<tr>
<td>EB</td>
<td>unused_EB</td>
<td></td>
<td></td>
</tr>
<tr>
<td>EC</td>
<td>unused_EC</td>
<td></td>
<td></td>
</tr>
<tr>
<td>ED</td>
<td>unused_ED</td>
<td></td>
<td></td>
</tr>
<tr>
<td>EE</td>
<td>execute-inline {parameters},inline ID</td>
<td>Executes the inline method identified by inline  ID6.</td>
<td>EE20  0300 0100 - execute-inline {v1, v0}, inline #0003</td>
</tr>
<tr>
<td>Executes inline method #3 using v1 as “this” and  passing one parameter in v0.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>EF</td>
<td>unused_EF</td>
<td></td>
<td></td>
</tr>
<tr>
<td>F0</td>
<td>invoke-direct-empty</td>
<td>Stands as a placeholder for pruned empty methods  like Object.<init>. This acts as nop during normal execution6.</init></td>
<td>F010  F608 0000 - invoke-direct-empty {v0}, Ljava/lang/Object;.<init>:()V //  method@08f6</init></td>
</tr>
<tr>
<td>Replacement for the empty method java/lang/Object;<init>.</init></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F1</td>
<td>unused_F1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>F2</td>
<td>iget-quick vx,vy,offset</td>
<td>Gets the value stored at offset in vy instance’s  data area to vx6.</td>
<td>F221  1000 - iget-quick v1, v2, [obj+0010]</td>
</tr>
<tr>
<td>Gets the value at offset 0CH of the instance pointed by v2 and  stores the object reference in v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F3</td>
<td>iget-wide-quick vx,vy,offset</td>
<td>Gets the object reference value stored at offset  in vy instance’s data area to vx,vx+16.</td>
<td>F364  3001 - iget-wide-quick v4, v6, [obj+0130]</td>
</tr>
<tr>
<td>Gets the value at offset 130H of the instance pointed by v6 and  stores the object reference in v4,v5.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F4</td>
<td>iget-object-quick vx,vy,offset</td>
<td>Gets the object reference value stored at offset  in vy instance’s data area to vx6.</td>
<td>F431  0C00 - iget-object-quick v1, v3, [obj+000c]</td>
</tr>
<tr>
<td>Gets the object reference value at offset 0CH of the instance  pointed by v3 and stores the object reference in v1.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F5</td>
<td>iput-quick vx,vy,offset</td>
<td>Puts the value stored in vx to offset in vy  instance’s data area6.</td>
<td>F521  1000 - iput-quick v1, v2, [obj+0010]</td>
</tr>
<tr>
<td>Puts the object reference value in v1 to offset 10H of the  instance pointed by v2.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F6</td>
<td>iput-wide-quick vx,vy,offset</td>
<td>Puts the value stored in vx,vx+1 to offset in vy  instance’s data area6.</td>
<td>F652  7001 - iput-wide-quick v2, v5, [obj+0170]</td>
</tr>
<tr>
<td>Puts the value in v2,v3 to offset 170H of the instance pointed by  v5.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F7</td>
<td>iput-object-quick vx,vy,offset</td>
<td>Puts the object reference value stored in vx to  offset in vy instance’s data area to vx6.</td>
<td>F701  4C00 - iput-object-quick v1, v0, [obj+004c]</td>
</tr>
<tr>
<td>Puts the object reference value in v1 to offset 0CH of the  instance pointed by v3.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F8</td>
<td>invoke-virtual-quick {parameters},vtable offset</td>
<td>Invokes a virtual method using the vtable of the  target object6.</td>
<td>F820  B800 CF00 - invoke-virtual-quick {v15, v12}, vtable #00b8</td>
</tr>
<tr>
<td>Invokes a virtual method. The target object instance is pointed  by v15 and vtable entry #B8 points to the method to be called. v12 is a  parameter to the method call.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F9</td>
<td>invoke-virtual-quick/range {parameter  range},vtable offset</td>
<td>Invokes a virtual method using the vtable of the  target object6</td>
<td>F906  1800 0000 - invoke-virtual-quick/range {v0..v5},vtable #0018</td>
</tr>
<tr>
<td>Invokes a method using the vtable of the instance pointed by v0.  v1..v5 registers are parameters to the method call.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>FA</td>
<td>invoke-super-quick {parameters},vtable offset</td>
<td>Invokes a virtual method in the target object’s  immediate parent class using the vtable of that parent class6.</td>
<td>FA40  8100 3254 - invoke-super-quick {v2, v3, v4, v5}, vtable #0081</td>
</tr>
<tr>
<td>Invokes a method using the vtable of the immediate parent class  of instance pointed by v2. v3, v4 and v5 registers are parameters to the  method call.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>FB</td>
<td>invoke-super-quick/range {register range},vtable  offset</td>
<td>Invokes a virtual method in the target object’s  immediate parent class using the vtable of that parent class6.</td>
<td>F906  1B00 0000 - invoke-super-quick/range {v0..v5}, vtable #001b</td>
</tr>
<tr>
<td>Invokes a method using the vtable of the immediate parent class  of instance pointed by v0. v1..v5 registers are parameters to the method  call.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>FC</td>
<td>unused_FC</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FD</td>
<td>unused_FD</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FE</td>
<td>unused_FE</td>
<td></td>
<td></td>
</tr>
<tr>
<td>FF</td>
<td>unused_FF</td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>android</tag>
        <tag>破解</tag>
      </tags>
  </entry>
</search>
